import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
export type Maybe<T> = T | undefined;
export type InputMaybe<T> = T | undefined;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
const defaultOptions = {} as const;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /**
   * The `BigInt` scalar type represents non-fractional signed whole numeric values.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
   */
  BigInt: any;
  /** The `Byte` scalar type represents byte value as a Buffer */
  Bytes: any;
  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  DateTime: any;
  /** An arbitrary-precision Decimal type */
  Decimal: any;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  Json: any;
};

export type Affiliate = {
  __typename?: 'Affiliate';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  customer?: Maybe<Customer>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  igId?: Maybe<Scalars['String']>;
  lineId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  tgId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AffiliateCountAggregateOutputType = {
  __typename?: 'AffiliateCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  customerId: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  igId: Scalars['Int'];
  lineId: Scalars['Int'];
  name: Scalars['Int'];
  tgId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  walletAddress: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type AffiliateCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  igId?: InputMaybe<SortOrder>;
  lineId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tgId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AffiliateCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutAffiliateInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAffiliatesInput>;
};

export type AffiliateCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AffiliateCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AffiliateCreateManyWebsiteInputEnvelope = {
  data: AffiliateCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AffiliateCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AffiliateCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AffiliateCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AffiliateCreateManyWebsiteInputEnvelope>;
};

export type AffiliateCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<AffiliateWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AffiliateCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<AffiliateUncheckedCreateWithoutCustomerInput>;
};

export type AffiliateCreateOrConnectWithoutCustomerInput = {
  create: AffiliateUncheckedCreateWithoutCustomerInput;
  where: AffiliateWhereUniqueInput;
};

export type AffiliateCreateOrConnectWithoutWebsiteInput = {
  create: AffiliateUncheckedCreateWithoutWebsiteInput;
  where: AffiliateWhereUniqueInput;
};

export type AffiliateCreateWithoutCustomerInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAffiliatesInput>;
};

export type AffiliateCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutAffiliateInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AffiliateListRelationFilter = {
  every?: InputMaybe<AffiliateWhereInput>;
  none?: InputMaybe<AffiliateWhereInput>;
  some?: InputMaybe<AffiliateWhereInput>;
};

export type AffiliateMaxAggregateOutputType = {
  __typename?: 'AffiliateMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  igId?: Maybe<Scalars['String']>;
  lineId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  tgId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AffiliateMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  igId?: InputMaybe<SortOrder>;
  lineId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tgId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AffiliateMinAggregateOutputType = {
  __typename?: 'AffiliateMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  igId?: Maybe<Scalars['String']>;
  lineId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  tgId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AffiliateMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  igId?: InputMaybe<SortOrder>;
  lineId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tgId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AffiliateOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AffiliateOrderByWithAggregationInput = {
  _count?: InputMaybe<AffiliateCountOrderByAggregateInput>;
  _max?: InputMaybe<AffiliateMaxOrderByAggregateInput>;
  _min?: InputMaybe<AffiliateMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  customerId?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  igId?: InputMaybe<SortOrderInput>;
  lineId?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  tgId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type AffiliateOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  customerId?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  igId?: InputMaybe<SortOrderInput>;
  lineId?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  tgId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type AffiliateRelationFilter = {
  is?: InputMaybe<AffiliateWhereInput>;
  isNot?: InputMaybe<AffiliateWhereInput>;
};

export enum AffiliateScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  CustomerId = 'customerId',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  IgId = 'igId',
  LineId = 'lineId',
  Name = 'name',
  TgId = 'tgId',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  WalletAddress = 'walletAddress',
  WebsiteId = 'websiteId'
}

export type AffiliateScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  igId?: InputMaybe<StringNullableFilter>;
  lineId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  tgId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AffiliateScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  igId?: InputMaybe<StringNullableWithAggregatesFilter>;
  lineId?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  tgId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type AffiliateUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AffiliateUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AffiliateCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AffiliateCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AffiliateCreateManyWebsiteInputEnvelope>;
};

export type AffiliateUncheckedCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<AffiliateWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AffiliateCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<AffiliateUncheckedCreateWithoutCustomerInput>;
};

export type AffiliateUncheckedCreateWithoutCustomerInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AffiliateUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  igId?: InputMaybe<Scalars['String']>;
  lineId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tgId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AffiliateUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AffiliateUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AffiliateUncheckedUpdateManyWithoutAffiliatesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AffiliateCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AffiliateCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AffiliateCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AffiliateUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AffiliateUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AffiliateUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AffiliateUncheckedUpdateOneWithoutCustomerNestedInput = {
  connect?: InputMaybe<AffiliateWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AffiliateCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<AffiliateUncheckedCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AffiliateUncheckedUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<AffiliateUpsertWithoutCustomerInput>;
};

export type AffiliateUncheckedUpdateWithoutCustomerInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AffiliateUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AffiliateUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutAffiliateNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAffiliatesNestedInput>;
};

export type AffiliateUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AffiliateUpdateManyWithWhereWithoutWebsiteInput = {
  data: AffiliateUncheckedUpdateManyWithoutAffiliatesInput;
  where: AffiliateScalarWhereInput;
};

export type AffiliateUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AffiliateCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AffiliateCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AffiliateCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AffiliateScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AffiliateWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AffiliateUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AffiliateUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AffiliateUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AffiliateUpdateOneWithoutCustomerNestedInput = {
  connect?: InputMaybe<AffiliateWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AffiliateCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<AffiliateUncheckedCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AffiliateUncheckedUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<AffiliateUpsertWithoutCustomerInput>;
};

export type AffiliateUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: AffiliateUncheckedUpdateWithoutWebsiteInput;
  where: AffiliateWhereUniqueInput;
};

export type AffiliateUpdateWithoutCustomerInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAffiliatesNestedInput>;
};

export type AffiliateUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutAffiliateNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  igId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lineId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tgId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AffiliateUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: AffiliateUncheckedCreateWithoutWebsiteInput;
  update: AffiliateUncheckedUpdateWithoutWebsiteInput;
  where: AffiliateWhereUniqueInput;
};

export type AffiliateUpsertWithoutCustomerInput = {
  create: AffiliateUncheckedCreateWithoutCustomerInput;
  update: AffiliateUncheckedUpdateWithoutCustomerInput;
};

export type AffiliateWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AffiliateWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AffiliateWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AffiliateWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  customer?: InputMaybe<CustomerWhereInput>;
  customerId?: InputMaybe<StringNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  igId?: InputMaybe<StringNullableFilter>;
  lineId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  tgId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AffiliateWhereUniqueInput = {
  customerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
};

export type Agenda = {
  __typename?: 'Agenda';
  _count: AgendaCountOutputType;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endTime?: Maybe<Scalars['DateTime']>;
  event?: Maybe<Event>;
  eventId?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  speakers: Array<Speaker>;
  startTime?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};


export type AgendaSpeakersArgs = {
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  distinct?: InputMaybe<SpeakerScalarFieldEnum>;
  orderBy?: InputMaybe<SpeakerOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SpeakerWhereInput>;
};

export type AgendaCountAggregateOutputType = {
  __typename?: 'AgendaCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  endTime: Scalars['Int'];
  eventId: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  startTime: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type AgendaCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AgendaCountOutputType = {
  __typename?: 'AgendaCountOutputType';
  speakers: Scalars['Int'];
};

export type AgendaCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<EventCreateNestedOneWithoutAgendaInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutAgendaInput>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaCreateManyEventInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaCreateManyEventInputEnvelope = {
  data: AgendaCreateManyEventInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AgendaCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AgendaCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AgendaCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AgendaCreateManyEventInputEnvelope>;
};

export type AgendaCreateNestedOneWithoutSpeakersInput = {
  connect?: InputMaybe<AgendaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AgendaCreateOrConnectWithoutSpeakersInput>;
  create?: InputMaybe<AgendaUncheckedCreateWithoutSpeakersInput>;
};

export type AgendaCreateOrConnectWithoutEventInput = {
  create: AgendaUncheckedCreateWithoutEventInput;
  where: AgendaWhereUniqueInput;
};

export type AgendaCreateOrConnectWithoutSpeakersInput = {
  create: AgendaUncheckedCreateWithoutSpeakersInput;
  where: AgendaWhereUniqueInput;
};

export type AgendaCreateWithoutEventInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutAgendaInput>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaCreateWithoutSpeakersInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<EventCreateNestedOneWithoutAgendaInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaListRelationFilter = {
  every?: InputMaybe<AgendaWhereInput>;
  none?: InputMaybe<AgendaWhereInput>;
  some?: InputMaybe<AgendaWhereInput>;
};

export type AgendaMaxAggregateOutputType = {
  __typename?: 'AgendaMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  startTime?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type AgendaMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AgendaMinAggregateOutputType = {
  __typename?: 'AgendaMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  startTime?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type AgendaMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AgendaOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AgendaOrderByWithAggregationInput = {
  _count?: InputMaybe<AgendaCountOrderByAggregateInput>;
  _max?: InputMaybe<AgendaMaxOrderByAggregateInput>;
  _min?: InputMaybe<AgendaMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  endTime?: InputMaybe<SortOrderInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  startTime?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type AgendaOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  endTime?: InputMaybe<SortOrderInput>;
  event?: InputMaybe<EventOrderByWithRelationInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  speakers?: InputMaybe<SpeakerOrderByRelationAggregateInput>;
  startTime?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type AgendaRelationFilter = {
  is?: InputMaybe<AgendaWhereInput>;
  isNot?: InputMaybe<AgendaWhereInput>;
};

export enum AgendaScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EndTime = 'endTime',
  EventId = 'eventId',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  StartTime = 'startTime',
  UpdatedAt = 'updatedAt'
}

export type AgendaScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AgendaScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AgendaScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AgendaScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  endTime?: InputMaybe<DateTimeNullableFilter>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  startTime?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type AgendaScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AgendaScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AgendaScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AgendaScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  endTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  eventId?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  startTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type AgendaUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutAgendaInput>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaUncheckedCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AgendaCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AgendaCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AgendaCreateManyEventInputEnvelope>;
};

export type AgendaUncheckedCreateWithoutEventInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutAgendaInput>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaUncheckedCreateWithoutSpeakersInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AgendaUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutAgendaNestedInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUncheckedUpdateManyWithoutAgendaInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUncheckedUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AgendaCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AgendaCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AgendaCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AgendaScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AgendaUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AgendaUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AgendaUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type AgendaUncheckedUpdateWithoutEventInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutAgendaNestedInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUncheckedUpdateWithoutSpeakersInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutAgendaNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutAgendaNestedInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUpdateManyWithWhereWithoutEventInput = {
  data: AgendaUncheckedUpdateManyWithoutAgendaInput;
  where: AgendaScalarWhereInput;
};

export type AgendaUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AgendaCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AgendaCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AgendaCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AgendaScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AgendaWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AgendaUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AgendaUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AgendaUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type AgendaUpdateOneWithoutSpeakersNestedInput = {
  connect?: InputMaybe<AgendaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AgendaCreateOrConnectWithoutSpeakersInput>;
  create?: InputMaybe<AgendaUncheckedCreateWithoutSpeakersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AgendaUncheckedUpdateWithoutSpeakersInput>;
  upsert?: InputMaybe<AgendaUpsertWithoutSpeakersInput>;
};

export type AgendaUpdateWithWhereUniqueWithoutEventInput = {
  data: AgendaUncheckedUpdateWithoutEventInput;
  where: AgendaWhereUniqueInput;
};

export type AgendaUpdateWithoutEventInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutAgendaNestedInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUpdateWithoutSpeakersInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutAgendaNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AgendaUpsertWithWhereUniqueWithoutEventInput = {
  create: AgendaUncheckedCreateWithoutEventInput;
  update: AgendaUncheckedUpdateWithoutEventInput;
  where: AgendaWhereUniqueInput;
};

export type AgendaUpsertWithoutSpeakersInput = {
  create: AgendaUncheckedCreateWithoutSpeakersInput;
  update: AgendaUncheckedUpdateWithoutSpeakersInput;
};

export type AgendaWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AgendaWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AgendaWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AgendaWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  endTime?: InputMaybe<DateTimeNullableFilter>;
  event?: InputMaybe<EventWhereInput>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  speakers?: InputMaybe<SpeakerListRelationFilter>;
  startTime?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type AgendaWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type AggregateAffiliate = {
  __typename?: 'AggregateAffiliate';
  _count?: Maybe<AffiliateCountAggregateOutputType>;
  _max?: Maybe<AffiliateMaxAggregateOutputType>;
  _min?: Maybe<AffiliateMinAggregateOutputType>;
};

export type AggregateAgenda = {
  __typename?: 'AggregateAgenda';
  _count?: Maybe<AgendaCountAggregateOutputType>;
  _max?: Maybe<AgendaMaxAggregateOutputType>;
  _min?: Maybe<AgendaMinAggregateOutputType>;
};

export type AggregateAttachment = {
  __typename?: 'AggregateAttachment';
  _count?: Maybe<AttachmentCountAggregateOutputType>;
  _max?: Maybe<AttachmentMaxAggregateOutputType>;
  _min?: Maybe<AttachmentMinAggregateOutputType>;
};

export type AggregateAttribute = {
  __typename?: 'AggregateAttribute';
  _count?: Maybe<AttributeCountAggregateOutputType>;
  _max?: Maybe<AttributeMaxAggregateOutputType>;
  _min?: Maybe<AttributeMinAggregateOutputType>;
};

export type AggregateAudio = {
  __typename?: 'AggregateAudio';
  _count?: Maybe<AudioCountAggregateOutputType>;
  _max?: Maybe<AudioMaxAggregateOutputType>;
  _min?: Maybe<AudioMinAggregateOutputType>;
};

export type AggregateAudioCollection = {
  __typename?: 'AggregateAudioCollection';
  _count?: Maybe<AudioCollectionCountAggregateOutputType>;
  _max?: Maybe<AudioCollectionMaxAggregateOutputType>;
  _min?: Maybe<AudioCollectionMinAggregateOutputType>;
};

export type AggregateAudioView = {
  __typename?: 'AggregateAudioView';
  _count?: Maybe<AudioViewCountAggregateOutputType>;
  _max?: Maybe<AudioViewMaxAggregateOutputType>;
  _min?: Maybe<AudioViewMinAggregateOutputType>;
};

export type AggregateCoupon = {
  __typename?: 'AggregateCoupon';
  _avg?: Maybe<CouponAvgAggregateOutputType>;
  _count?: Maybe<CouponCountAggregateOutputType>;
  _max?: Maybe<CouponMaxAggregateOutputType>;
  _min?: Maybe<CouponMinAggregateOutputType>;
  _sum?: Maybe<CouponSumAggregateOutputType>;
};

export type AggregateCustomer = {
  __typename?: 'AggregateCustomer';
  _count?: Maybe<CustomerCountAggregateOutputType>;
  _max?: Maybe<CustomerMaxAggregateOutputType>;
  _min?: Maybe<CustomerMinAggregateOutputType>;
};

export type AggregateEvent = {
  __typename?: 'AggregateEvent';
  _avg?: Maybe<EventAvgAggregateOutputType>;
  _count?: Maybe<EventCountAggregateOutputType>;
  _max?: Maybe<EventMaxAggregateOutputType>;
  _min?: Maybe<EventMinAggregateOutputType>;
  _sum?: Maybe<EventSumAggregateOutputType>;
};

export type AggregateEventCollection = {
  __typename?: 'AggregateEventCollection';
  _count?: Maybe<EventCollectionCountAggregateOutputType>;
  _max?: Maybe<EventCollectionMaxAggregateOutputType>;
  _min?: Maybe<EventCollectionMinAggregateOutputType>;
};

export type AggregateEventGroup = {
  __typename?: 'AggregateEventGroup';
  _count?: Maybe<EventGroupCountAggregateOutputType>;
  _max?: Maybe<EventGroupMaxAggregateOutputType>;
  _min?: Maybe<EventGroupMinAggregateOutputType>;
};

export type AggregateLoginToken = {
  __typename?: 'AggregateLoginToken';
  _count?: Maybe<LoginTokenCountAggregateOutputType>;
  _max?: Maybe<LoginTokenMaxAggregateOutputType>;
  _min?: Maybe<LoginTokenMinAggregateOutputType>;
};

export type AggregateMarketingLocation = {
  __typename?: 'AggregateMarketingLocation';
  _avg?: Maybe<MarketingLocationAvgAggregateOutputType>;
  _count?: Maybe<MarketingLocationCountAggregateOutputType>;
  _max?: Maybe<MarketingLocationMaxAggregateOutputType>;
  _min?: Maybe<MarketingLocationMinAggregateOutputType>;
  _sum?: Maybe<MarketingLocationSumAggregateOutputType>;
};

export type AggregateNotification = {
  __typename?: 'AggregateNotification';
  _count?: Maybe<NotificationCountAggregateOutputType>;
  _max?: Maybe<NotificationMaxAggregateOutputType>;
  _min?: Maybe<NotificationMinAggregateOutputType>;
};

export type AggregateOrder = {
  __typename?: 'AggregateOrder';
  _avg?: Maybe<OrderAvgAggregateOutputType>;
  _count?: Maybe<OrderCountAggregateOutputType>;
  _max?: Maybe<OrderMaxAggregateOutputType>;
  _min?: Maybe<OrderMinAggregateOutputType>;
  _sum?: Maybe<OrderSumAggregateOutputType>;
};

export type AggregateOrderedProduct = {
  __typename?: 'AggregateOrderedProduct';
  _avg?: Maybe<OrderedProductAvgAggregateOutputType>;
  _count?: Maybe<OrderedProductCountAggregateOutputType>;
  _max?: Maybe<OrderedProductMaxAggregateOutputType>;
  _min?: Maybe<OrderedProductMinAggregateOutputType>;
  _sum?: Maybe<OrderedProductSumAggregateOutputType>;
};

export type AggregateOrganization = {
  __typename?: 'AggregateOrganization';
  _count?: Maybe<OrganizationCountAggregateOutputType>;
  _max?: Maybe<OrganizationMaxAggregateOutputType>;
  _min?: Maybe<OrganizationMinAggregateOutputType>;
};

export type AggregatePage = {
  __typename?: 'AggregatePage';
  _count?: Maybe<PageCountAggregateOutputType>;
  _max?: Maybe<PageMaxAggregateOutputType>;
  _min?: Maybe<PageMinAggregateOutputType>;
};

export type AggregatePageCollection = {
  __typename?: 'AggregatePageCollection';
  _count?: Maybe<PageCollectionCountAggregateOutputType>;
  _max?: Maybe<PageCollectionMaxAggregateOutputType>;
  _min?: Maybe<PageCollectionMinAggregateOutputType>;
};

export type AggregatePageView = {
  __typename?: 'AggregatePageView';
  _count?: Maybe<PageViewCountAggregateOutputType>;
  _max?: Maybe<PageViewMaxAggregateOutputType>;
  _min?: Maybe<PageViewMinAggregateOutputType>;
};

export type AggregateProduct = {
  __typename?: 'AggregateProduct';
  _avg?: Maybe<ProductAvgAggregateOutputType>;
  _count?: Maybe<ProductCountAggregateOutputType>;
  _max?: Maybe<ProductMaxAggregateOutputType>;
  _min?: Maybe<ProductMinAggregateOutputType>;
  _sum?: Maybe<ProductSumAggregateOutputType>;
};

export type AggregateProductCollection = {
  __typename?: 'AggregateProductCollection';
  _count?: Maybe<ProductCollectionCountAggregateOutputType>;
  _max?: Maybe<ProductCollectionMaxAggregateOutputType>;
  _min?: Maybe<ProductCollectionMinAggregateOutputType>;
};

export type AggregateProductGroup = {
  __typename?: 'AggregateProductGroup';
  _count?: Maybe<ProductGroupCountAggregateOutputType>;
  _max?: Maybe<ProductGroupMaxAggregateOutputType>;
  _min?: Maybe<ProductGroupMinAggregateOutputType>;
};

export type AggregateRefreshToken = {
  __typename?: 'AggregateRefreshToken';
  _count?: Maybe<RefreshTokenCountAggregateOutputType>;
  _max?: Maybe<RefreshTokenMaxAggregateOutputType>;
  _min?: Maybe<RefreshTokenMinAggregateOutputType>;
};

export type AggregateRequest = {
  __typename?: 'AggregateRequest';
  _avg?: Maybe<RequestAvgAggregateOutputType>;
  _count?: Maybe<RequestCountAggregateOutputType>;
  _max?: Maybe<RequestMaxAggregateOutputType>;
  _min?: Maybe<RequestMinAggregateOutputType>;
  _sum?: Maybe<RequestSumAggregateOutputType>;
};

export type AggregateRequestClick = {
  __typename?: 'AggregateRequestClick';
  _count?: Maybe<RequestClickCountAggregateOutputType>;
  _max?: Maybe<RequestClickMaxAggregateOutputType>;
  _min?: Maybe<RequestClickMinAggregateOutputType>;
};

export type AggregateSlugCounter = {
  __typename?: 'AggregateSlugCounter';
  _avg?: Maybe<SlugCounterAvgAggregateOutputType>;
  _count?: Maybe<SlugCounterCountAggregateOutputType>;
  _max?: Maybe<SlugCounterMaxAggregateOutputType>;
  _min?: Maybe<SlugCounterMinAggregateOutputType>;
  _sum?: Maybe<SlugCounterSumAggregateOutputType>;
};

export type AggregateSpeaker = {
  __typename?: 'AggregateSpeaker';
  _count?: Maybe<SpeakerCountAggregateOutputType>;
  _max?: Maybe<SpeakerMaxAggregateOutputType>;
  _min?: Maybe<SpeakerMinAggregateOutputType>;
};

export type AggregateUser = {
  __typename?: 'AggregateUser';
  _count?: Maybe<UserCountAggregateOutputType>;
  _max?: Maybe<UserMaxAggregateOutputType>;
  _min?: Maybe<UserMinAggregateOutputType>;
};

export type AggregateVideo = {
  __typename?: 'AggregateVideo';
  _count?: Maybe<VideoCountAggregateOutputType>;
  _max?: Maybe<VideoMaxAggregateOutputType>;
  _min?: Maybe<VideoMinAggregateOutputType>;
};

export type AggregateVideoCollection = {
  __typename?: 'AggregateVideoCollection';
  _count?: Maybe<VideoCollectionCountAggregateOutputType>;
  _max?: Maybe<VideoCollectionMaxAggregateOutputType>;
  _min?: Maybe<VideoCollectionMinAggregateOutputType>;
};

export type AggregateVideoView = {
  __typename?: 'AggregateVideoView';
  _count?: Maybe<VideoViewCountAggregateOutputType>;
  _max?: Maybe<VideoViewMaxAggregateOutputType>;
  _min?: Maybe<VideoViewMinAggregateOutputType>;
};

export type AggregateWebsite = {
  __typename?: 'AggregateWebsite';
  _avg?: Maybe<WebsiteAvgAggregateOutputType>;
  _count?: Maybe<WebsiteCountAggregateOutputType>;
  _max?: Maybe<WebsiteMaxAggregateOutputType>;
  _min?: Maybe<WebsiteMinAggregateOutputType>;
  _sum?: Maybe<WebsiteSumAggregateOutputType>;
};

export type AggregateWebsiteGroup = {
  __typename?: 'AggregateWebsiteGroup';
  _count?: Maybe<WebsiteGroupCountAggregateOutputType>;
  _max?: Maybe<WebsiteGroupMaxAggregateOutputType>;
  _min?: Maybe<WebsiteGroupMinAggregateOutputType>;
};

export type Attachment = {
  __typename?: 'Attachment';
  attachmentObj?: Maybe<Scalars['Json']>;
  attachmentType?: Maybe<AttachmentType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  event?: Maybe<Event>;
  eventId?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  previewObj?: Maybe<Scalars['Json']>;
  product?: Maybe<Product>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  upload?: Maybe<Scalars['Json']>;
  url?: Maybe<Scalars['String']>;
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttachmentCountAggregateOutputType = {
  __typename?: 'AttachmentCountAggregateOutputType';
  _all: Scalars['Int'];
  attachmentObj: Scalars['Int'];
  attachmentType: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  eventId: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  previewObj: Scalars['Int'];
  productId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  upload: Scalars['Int'];
  url: Scalars['Int'];
  userId: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type AttachmentCountOrderByAggregateInput = {
  attachmentObj?: InputMaybe<SortOrder>;
  attachmentType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  previewObj?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  upload?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttachmentCreateInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutAttachmentsInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutAttachmentsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutAttachmentsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttachmentsInput>;
};

export type AttachmentCreateManyEventInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateManyEventInputEnvelope = {
  data: AttachmentCreateManyEventInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentCreateManyInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateManyProductInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateManyProductInputEnvelope = {
  data: AttachmentCreateManyProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentCreateManyUserInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateManyUserInputEnvelope = {
  data: AttachmentCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentCreateManyWebsiteInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateManyWebsiteInputEnvelope = {
  data: AttachmentCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyEventInputEnvelope>;
};

export type AttachmentCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutProductInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyProductInputEnvelope>;
};

export type AttachmentCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
};

export type AttachmentCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
};

export type AttachmentCreateOrConnectWithoutEventInput = {
  create: AttachmentUncheckedCreateWithoutEventInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentCreateOrConnectWithoutProductInput = {
  create: AttachmentUncheckedCreateWithoutProductInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentCreateOrConnectWithoutUserInput = {
  create: AttachmentUncheckedCreateWithoutUserInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentCreateOrConnectWithoutWebsiteInput = {
  create: AttachmentUncheckedCreateWithoutWebsiteInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentCreateWithoutEventInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutAttachmentsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutAttachmentsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttachmentsInput>;
};

export type AttachmentCreateWithoutProductInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutAttachmentsInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutAttachmentsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttachmentsInput>;
};

export type AttachmentCreateWithoutUserInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutAttachmentsInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutAttachmentsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttachmentsInput>;
};

export type AttachmentCreateWithoutWebsiteInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutAttachmentsInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutAttachmentsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutAttachmentsInput>;
};

export type AttachmentListRelationFilter = {
  every?: InputMaybe<AttachmentWhereInput>;
  none?: InputMaybe<AttachmentWhereInput>;
  some?: InputMaybe<AttachmentWhereInput>;
};

export type AttachmentMaxAggregateOutputType = {
  __typename?: 'AttachmentMaxAggregateOutputType';
  attachmentType?: Maybe<AttachmentType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttachmentMaxOrderByAggregateInput = {
  attachmentType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttachmentMinAggregateOutputType = {
  __typename?: 'AttachmentMinAggregateOutputType';
  attachmentType?: Maybe<AttachmentType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttachmentMinOrderByAggregateInput = {
  attachmentType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttachmentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AttachmentOrderByWithAggregationInput = {
  _count?: InputMaybe<AttachmentCountOrderByAggregateInput>;
  _max?: InputMaybe<AttachmentMaxOrderByAggregateInput>;
  _min?: InputMaybe<AttachmentMinOrderByAggregateInput>;
  attachmentObj?: InputMaybe<SortOrderInput>;
  attachmentType?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  previewObj?: InputMaybe<SortOrderInput>;
  productId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  upload?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type AttachmentOrderByWithRelationInput = {
  attachmentObj?: InputMaybe<SortOrderInput>;
  attachmentType?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  event?: InputMaybe<EventOrderByWithRelationInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  previewObj?: InputMaybe<SortOrderInput>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  productId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  upload?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum AttachmentScalarFieldEnum {
  AttachmentObj = 'attachmentObj',
  AttachmentType = 'attachmentType',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  PreviewObj = 'previewObj',
  ProductId = 'productId',
  UpdatedAt = 'updatedAt',
  Upload = 'upload',
  Url = 'url',
  UserId = 'userId',
  WebsiteId = 'websiteId'
}

export type AttachmentScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  attachmentObj?: InputMaybe<JsonNullableFilter>;
  attachmentType?: InputMaybe<EnumAttachmentTypeNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  previewObj?: InputMaybe<JsonNullableFilter>;
  productId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  upload?: InputMaybe<JsonNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AttachmentScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereWithAggregatesInput>>>;
  attachmentObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  attachmentType?: InputMaybe<EnumAttachmentTypeNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  eventId?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  previewObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  productId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  upload?: InputMaybe<JsonNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export enum AttachmentType {
  Audio = 'audio',
  Document = 'document',
  Image = 'image',
  Video = 'video'
}

export type AttachmentUncheckedCreateInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentUncheckedCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyEventInputEnvelope>;
};

export type AttachmentUncheckedCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutProductInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyProductInputEnvelope>;
};

export type AttachmentUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
};

export type AttachmentUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
};

export type AttachmentUncheckedCreateWithoutEventInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentUncheckedCreateWithoutProductInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentUncheckedCreateWithoutUserInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentUncheckedCreateWithoutWebsiteInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<AttachmentType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type AttachmentUncheckedUpdateInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateManyInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateManyWithoutAttachmentsInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type AttachmentUncheckedUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutProductInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type AttachmentUncheckedUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AttachmentUncheckedUpdateWithoutEventInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateWithoutProductInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateWithoutUserInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateWithoutWebsiteInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUpdateInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutAttachmentsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductUpdateOneWithoutAttachmentsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAttachmentsNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttachmentsNestedInput>;
};

export type AttachmentUpdateManyMutationInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUpdateManyWithWhereWithoutEventInput = {
  data: AttachmentUncheckedUpdateManyWithoutAttachmentsInput;
  where: AttachmentScalarWhereInput;
};

export type AttachmentUpdateManyWithWhereWithoutProductInput = {
  data: AttachmentUncheckedUpdateManyWithoutAttachmentsInput;
  where: AttachmentScalarWhereInput;
};

export type AttachmentUpdateManyWithWhereWithoutUserInput = {
  data: AttachmentUncheckedUpdateManyWithoutAttachmentsInput;
  where: AttachmentScalarWhereInput;
};

export type AttachmentUpdateManyWithWhereWithoutWebsiteInput = {
  data: AttachmentUncheckedUpdateManyWithoutAttachmentsInput;
  where: AttachmentScalarWhereInput;
};

export type AttachmentUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutEventInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type AttachmentUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutProductInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type AttachmentUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type AttachmentUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AttachmentUpdateWithWhereUniqueWithoutEventInput = {
  data: AttachmentUncheckedUpdateWithoutEventInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUpdateWithWhereUniqueWithoutProductInput = {
  data: AttachmentUncheckedUpdateWithoutProductInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUpdateWithWhereUniqueWithoutUserInput = {
  data: AttachmentUncheckedUpdateWithoutUserInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: AttachmentUncheckedUpdateWithoutWebsiteInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUpdateWithoutEventInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductUpdateOneWithoutAttachmentsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAttachmentsNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttachmentsNestedInput>;
};

export type AttachmentUpdateWithoutProductInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutAttachmentsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAttachmentsNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttachmentsNestedInput>;
};

export type AttachmentUpdateWithoutUserInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutAttachmentsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductUpdateOneWithoutAttachmentsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttachmentsNestedInput>;
};

export type AttachmentUpdateWithoutWebsiteInput = {
  attachmentObj?: InputMaybe<Scalars['Json']>;
  attachmentType?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutAttachmentsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  previewObj?: InputMaybe<Scalars['Json']>;
  product?: InputMaybe<ProductUpdateOneWithoutAttachmentsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAttachmentsNestedInput>;
};

export type AttachmentUpsertWithWhereUniqueWithoutEventInput = {
  create: AttachmentUncheckedCreateWithoutEventInput;
  update: AttachmentUncheckedUpdateWithoutEventInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUpsertWithWhereUniqueWithoutProductInput = {
  create: AttachmentUncheckedCreateWithoutProductInput;
  update: AttachmentUncheckedUpdateWithoutProductInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUpsertWithWhereUniqueWithoutUserInput = {
  create: AttachmentUncheckedCreateWithoutUserInput;
  update: AttachmentUncheckedUpdateWithoutUserInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: AttachmentUncheckedCreateWithoutWebsiteInput;
  update: AttachmentUncheckedUpdateWithoutWebsiteInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttachmentWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AttachmentWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttachmentWhereInput>>>;
  attachmentObj?: InputMaybe<JsonNullableFilter>;
  attachmentType?: InputMaybe<EnumAttachmentTypeNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  event?: InputMaybe<EventWhereInput>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  previewObj?: InputMaybe<JsonNullableFilter>;
  product?: InputMaybe<ProductWhereInput>;
  productId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  upload?: InputMaybe<JsonNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AttachmentWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type Attribute = {
  __typename?: 'Attribute';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  values?: Maybe<Scalars['Json']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttributeCountAggregateOutputType = {
  __typename?: 'AttributeCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  values: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type AttributeCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  values?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttributeCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttributesInput>;
};

export type AttributeCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Scalars['Json']>;
};

export type AttributeCreateManyWebsiteInputEnvelope = {
  data: AttributeCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttributeCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
};

export type AttributeCreateOrConnectWithoutWebsiteInput = {
  create: AttributeUncheckedCreateWithoutWebsiteInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Scalars['Json']>;
};

export type AttributeListRelationFilter = {
  every?: InputMaybe<AttributeWhereInput>;
  none?: InputMaybe<AttributeWhereInput>;
  some?: InputMaybe<AttributeWhereInput>;
};

export type AttributeMaxAggregateOutputType = {
  __typename?: 'AttributeMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttributeMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttributeMinAggregateOutputType = {
  __typename?: 'AttributeMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttributeMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttributeOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AttributeOrderByWithAggregationInput = {
  _count?: InputMaybe<AttributeCountOrderByAggregateInput>;
  _max?: InputMaybe<AttributeMaxOrderByAggregateInput>;
  _min?: InputMaybe<AttributeMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  values?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type AttributeOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  values?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum AttributeScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  Values = 'values',
  WebsiteId = 'websiteId'
}

export type AttributeScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  values?: InputMaybe<JsonNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AttributeScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AttributeScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AttributeScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttributeScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  values?: InputMaybe<JsonNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type AttributeUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttributeUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
};

export type AttributeUncheckedCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Scalars['Json']>;
};

export type AttributeUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUncheckedUpdateManyWithoutAttributesInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Scalars['Json']>;
};

export type AttributeUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttributeUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttributeUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttributeUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AttributeUncheckedUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Scalars['Json']>;
};

export type AttributeUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttributesNestedInput>;
};

export type AttributeUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Scalars['Json']>;
};

export type AttributeUpdateManyWithWhereWithoutWebsiteInput = {
  data: AttributeUncheckedUpdateManyWithoutAttributesInput;
  where: AttributeScalarWhereInput;
};

export type AttributeUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttributeUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttributeUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttributeUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AttributeUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: AttributeUncheckedUpdateWithoutWebsiteInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Scalars['Json']>;
};

export type AttributeUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: AttributeUncheckedCreateWithoutWebsiteInput;
  update: AttributeUncheckedUpdateWithoutWebsiteInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttributeWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AttributeWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttributeWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  values?: InputMaybe<JsonNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AttributeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type Audio = {
  __typename?: 'Audio';
  _count: AudioCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  audioCollections: Array<AudioCollection>;
  audioObj?: Maybe<Scalars['Json']>;
  audioPreviewObj?: Maybe<Scalars['Json']>;
  audioViews: Array<AudioView>;
  content?: Maybe<Scalars['Json']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  requestClicks: Array<RequestClick>;
  requests: Array<Request>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type AudioAudioCollectionsArgs = {
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  distinct?: InputMaybe<AudioCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<AudioCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type AudioAudioViewsArgs = {
  cursor?: InputMaybe<AudioViewWhereUniqueInput>;
  distinct?: InputMaybe<AudioViewScalarFieldEnum>;
  orderBy?: InputMaybe<AudioViewOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioViewWhereInput>;
};


export type AudioRequestClicksArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<RequestClickOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type AudioRequestsArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<RequestOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};

export type AudioCollection = {
  __typename?: 'AudioCollection';
  _count: AudioCollectionCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  audios: Array<Audio>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type AudioCollectionAudiosArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<AudioScalarFieldEnum>;
  orderBy?: InputMaybe<AudioOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};

export type AudioCollectionCountAggregateOutputType = {
  __typename?: 'AudioCollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type AudioCollectionCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AudioCollectionCountOutputType = {
  __typename?: 'AudioCollectionCountOutputType';
  audios: Scalars['Int'];
};

export type AudioCollectionCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutAudioCollectionsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAudioCollectionsInput>;
};

export type AudioCollectionCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioCollectionCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioCollectionCreateManyWebsiteInputEnvelope = {
  data: AudioCollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AudioCollectionCreateNestedManyWithoutAudiosInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutAudiosInput>>>;
};

export type AudioCollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCollectionCreateManyWebsiteInputEnvelope>;
};

export type AudioCollectionCreateOrConnectWithoutAudiosInput = {
  create: AudioCollectionUncheckedCreateWithoutAudiosInput;
  where: AudioCollectionWhereUniqueInput;
};

export type AudioCollectionCreateOrConnectWithoutWebsiteInput = {
  create: AudioCollectionUncheckedCreateWithoutWebsiteInput;
  where: AudioCollectionWhereUniqueInput;
};

export type AudioCollectionCreateWithoutAudiosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAudioCollectionsInput>;
};

export type AudioCollectionCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutAudioCollectionsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioCollectionListRelationFilter = {
  every?: InputMaybe<AudioCollectionWhereInput>;
  none?: InputMaybe<AudioCollectionWhereInput>;
  some?: InputMaybe<AudioCollectionWhereInput>;
};

export type AudioCollectionMaxAggregateOutputType = {
  __typename?: 'AudioCollectionMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AudioCollectionMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AudioCollectionMinAggregateOutputType = {
  __typename?: 'AudioCollectionMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AudioCollectionMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AudioCollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AudioCollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<AudioCollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<AudioCollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<AudioCollectionMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type AudioCollectionOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  audios?: InputMaybe<AudioOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum AudioCollectionScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type AudioCollectionScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AudioCollectionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type AudioCollectionUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutAudioCollectionsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioCollectionUncheckedCreateNestedManyWithoutAudiosInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutAudiosInput>>>;
};

export type AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCollectionCreateManyWebsiteInputEnvelope>;
};

export type AudioCollectionUncheckedCreateWithoutAudiosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioCollectionUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutAudioCollectionsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioCollectionUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutAudioCollectionsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioCollectionUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioCollectionUncheckedUpdateManyWithoutAudioCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioCollectionUncheckedUpdateManyWithoutAudiosNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutAudiosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateWithWhereUniqueWithoutAudiosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateManyWithWhereWithoutAudiosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioCollectionUpsertWithWhereUniqueWithoutAudiosInput>>>;
};

export type AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AudioCollectionUncheckedUpdateWithoutAudiosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioCollectionUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutAudioCollectionsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioCollectionUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutAudioCollectionsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAudioCollectionsNestedInput>;
};

export type AudioCollectionUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioCollectionUpdateManyWithWhereWithoutAudiosInput = {
  data: AudioCollectionUncheckedUpdateManyWithoutAudioCollectionsInput;
  where: AudioCollectionScalarWhereInput;
};

export type AudioCollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: AudioCollectionUncheckedUpdateManyWithoutAudioCollectionsInput;
  where: AudioCollectionScalarWhereInput;
};

export type AudioCollectionUpdateManyWithoutAudiosNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutAudiosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateWithWhereUniqueWithoutAudiosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateManyWithWhereWithoutAudiosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioCollectionUpsertWithWhereUniqueWithoutAudiosInput>>>;
};

export type AudioCollectionUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AudioCollectionUpdateWithWhereUniqueWithoutAudiosInput = {
  data: AudioCollectionUncheckedUpdateWithoutAudiosInput;
  where: AudioCollectionWhereUniqueInput;
};

export type AudioCollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: AudioCollectionUncheckedUpdateWithoutWebsiteInput;
  where: AudioCollectionWhereUniqueInput;
};

export type AudioCollectionUpdateWithoutAudiosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAudioCollectionsNestedInput>;
};

export type AudioCollectionUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutAudioCollectionsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioCollectionUpsertWithWhereUniqueWithoutAudiosInput = {
  create: AudioCollectionUncheckedCreateWithoutAudiosInput;
  update: AudioCollectionUncheckedUpdateWithoutAudiosInput;
  where: AudioCollectionWhereUniqueInput;
};

export type AudioCollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: AudioCollectionUncheckedCreateWithoutWebsiteInput;
  update: AudioCollectionUncheckedUpdateWithoutWebsiteInput;
  where: AudioCollectionWhereUniqueInput;
};

export type AudioCollectionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioCollectionWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioCollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioCollectionWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  audios?: InputMaybe<AudioListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AudioCollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type AudioCountAggregateOutputType = {
  __typename?: 'AudioCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  audioObj: Scalars['Int'];
  audioPreviewObj: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  externalUrl: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  isExternalLink: Scalars['Int'];
  isIndex: Scalars['Int'];
  menu: Scalars['Int'];
  name: Scalars['Int'];
  navColor: Scalars['Int'];
  password: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type AudioCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  audioObj?: InputMaybe<SortOrder>;
  audioPreviewObj?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AudioCountOutputType = {
  __typename?: 'AudioCountOutputType';
  audioCollections: Scalars['Int'];
  audioViews: Scalars['Int'];
  requestClicks: Scalars['Int'];
  requests: Scalars['Int'];
};

export type AudioCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAudiosInput>;
};

export type AudioCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioCreateManyWebsiteInputEnvelope = {
  data: AudioCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AudioCreateNestedManyWithoutAudioCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutAudioCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutAudioCollectionsInput>>>;
};

export type AudioCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCreateManyWebsiteInputEnvelope>;
};

export type AudioCreateNestedOneWithoutAudioViewsInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutAudioViewsInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutAudioViewsInput>;
};

export type AudioCreateNestedOneWithoutRequestClicksInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutRequestClicksInput>;
};

export type AudioCreateNestedOneWithoutRequestsInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutRequestsInput>;
};

export type AudioCreateOrConnectWithoutAudioCollectionsInput = {
  create: AudioUncheckedCreateWithoutAudioCollectionsInput;
  where: AudioWhereUniqueInput;
};

export type AudioCreateOrConnectWithoutAudioViewsInput = {
  create: AudioUncheckedCreateWithoutAudioViewsInput;
  where: AudioWhereUniqueInput;
};

export type AudioCreateOrConnectWithoutRequestClicksInput = {
  create: AudioUncheckedCreateWithoutRequestClicksInput;
  where: AudioWhereUniqueInput;
};

export type AudioCreateOrConnectWithoutRequestsInput = {
  create: AudioUncheckedCreateWithoutRequestsInput;
  where: AudioWhereUniqueInput;
};

export type AudioCreateOrConnectWithoutWebsiteInput = {
  create: AudioUncheckedCreateWithoutWebsiteInput;
  where: AudioWhereUniqueInput;
};

export type AudioCreateWithoutAudioCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAudiosInput>;
};

export type AudioCreateWithoutAudioViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAudiosInput>;
};

export type AudioCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAudiosInput>;
};

export type AudioCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAudiosInput>;
};

export type AudioCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioListRelationFilter = {
  every?: InputMaybe<AudioWhereInput>;
  none?: InputMaybe<AudioWhereInput>;
  some?: InputMaybe<AudioWhereInput>;
};

export type AudioMaxAggregateOutputType = {
  __typename?: 'AudioMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AudioMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AudioMinAggregateOutputType = {
  __typename?: 'AudioMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AudioMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AudioOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AudioOrderByWithAggregationInput = {
  _count?: InputMaybe<AudioCountOrderByAggregateInput>;
  _max?: InputMaybe<AudioMaxOrderByAggregateInput>;
  _min?: InputMaybe<AudioMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  audioObj?: InputMaybe<SortOrderInput>;
  audioPreviewObj?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalLink?: InputMaybe<SortOrderInput>;
  isIndex?: InputMaybe<SortOrderInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  navColor?: InputMaybe<SortOrderInput>;
  password?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type AudioOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  audioCollections?: InputMaybe<AudioCollectionOrderByRelationAggregateInput>;
  audioObj?: InputMaybe<SortOrderInput>;
  audioPreviewObj?: InputMaybe<SortOrderInput>;
  audioViews?: InputMaybe<AudioViewOrderByRelationAggregateInput>;
  content?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalLink?: InputMaybe<SortOrderInput>;
  isIndex?: InputMaybe<SortOrderInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  navColor?: InputMaybe<SortOrderInput>;
  password?: InputMaybe<SortOrderInput>;
  requestClicks?: InputMaybe<RequestClickOrderByRelationAggregateInput>;
  requests?: InputMaybe<RequestOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type AudioRelationFilter = {
  is?: InputMaybe<AudioWhereInput>;
  isNot?: InputMaybe<AudioWhereInput>;
};

export enum AudioScalarFieldEnum {
  Active = 'active',
  AudioObj = 'audioObj',
  AudioPreviewObj = 'audioPreviewObj',
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExternalUrl = 'externalUrl',
  Id = 'id',
  ImageObj = 'imageObj',
  IsExternalLink = 'isExternalLink',
  IsIndex = 'isIndex',
  Menu = 'menu',
  Name = 'name',
  NavColor = 'navColor',
  Password = 'password',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type AudioScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  audioObj?: InputMaybe<JsonNullableFilter>;
  audioPreviewObj?: InputMaybe<JsonNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalLink?: InputMaybe<BoolNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  password?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AudioScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  audioObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  audioPreviewObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  isExternalLink?: InputMaybe<BoolNullableWithAggregatesFilter>;
  isIndex?: InputMaybe<BoolNullableWithAggregatesFilter>;
  menu?: InputMaybe<BoolNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  navColor?: InputMaybe<EnumNavColorNullableWithAggregatesFilter>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type AudioUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioUncheckedCreateNestedManyWithoutAudioCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutAudioCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutAudioCollectionsInput>>>;
};

export type AudioUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCreateManyWebsiteInputEnvelope>;
};

export type AudioUncheckedCreateWithoutAudioCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioUncheckedCreateWithoutAudioViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioUncheckedCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioUncheckedCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedCreateNestedManyWithoutAudioInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutAudioInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutAudioInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateManyWithoutAudioCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutAudioCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutAudioCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutAudioCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutAudioCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutAudioCollectionsInput>>>;
};

export type AudioUncheckedUpdateManyWithoutAudiosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AudioUncheckedUpdateWithoutAudioCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateWithoutAudioViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUncheckedUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAudiosNestedInput>;
};

export type AudioUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioUpdateManyWithWhereWithoutAudioCollectionsInput = {
  data: AudioUncheckedUpdateManyWithoutAudiosInput;
  where: AudioScalarWhereInput;
};

export type AudioUpdateManyWithWhereWithoutWebsiteInput = {
  data: AudioUncheckedUpdateManyWithoutAudiosInput;
  where: AudioScalarWhereInput;
};

export type AudioUpdateManyWithoutAudioCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutAudioCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutAudioCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutAudioCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutAudioCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutAudioCollectionsInput>>>;
};

export type AudioUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AudioCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AudioUpdateOneWithoutAudioViewsNestedInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutAudioViewsInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutAudioViewsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AudioUncheckedUpdateWithoutAudioViewsInput>;
  upsert?: InputMaybe<AudioUpsertWithoutAudioViewsInput>;
};

export type AudioUpdateOneWithoutRequestClicksNestedInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutRequestClicksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AudioUncheckedUpdateWithoutRequestClicksInput>;
  upsert?: InputMaybe<AudioUpsertWithoutRequestClicksInput>;
};

export type AudioUpdateOneWithoutRequestsNestedInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutRequestsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AudioUncheckedUpdateWithoutRequestsInput>;
  upsert?: InputMaybe<AudioUpsertWithoutRequestsInput>;
};

export type AudioUpdateWithWhereUniqueWithoutAudioCollectionsInput = {
  data: AudioUncheckedUpdateWithoutAudioCollectionsInput;
  where: AudioWhereUniqueInput;
};

export type AudioUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: AudioUncheckedUpdateWithoutWebsiteInput;
  where: AudioWhereUniqueInput;
};

export type AudioUpdateWithoutAudioCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAudiosNestedInput>;
};

export type AudioUpdateWithoutAudioViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAudiosNestedInput>;
};

export type AudioUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAudiosNestedInput>;
};

export type AudioUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAudiosNestedInput>;
};

export type AudioUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutAudiosNestedInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  audioPreviewObj?: InputMaybe<Scalars['Json']>;
  audioViews?: InputMaybe<AudioViewUpdateManyWithoutAudioNestedInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutAudioNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutAudioNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioUpsertWithWhereUniqueWithoutAudioCollectionsInput = {
  create: AudioUncheckedCreateWithoutAudioCollectionsInput;
  update: AudioUncheckedUpdateWithoutAudioCollectionsInput;
  where: AudioWhereUniqueInput;
};

export type AudioUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: AudioUncheckedCreateWithoutWebsiteInput;
  update: AudioUncheckedUpdateWithoutWebsiteInput;
  where: AudioWhereUniqueInput;
};

export type AudioUpsertWithoutAudioViewsInput = {
  create: AudioUncheckedCreateWithoutAudioViewsInput;
  update: AudioUncheckedUpdateWithoutAudioViewsInput;
};

export type AudioUpsertWithoutRequestClicksInput = {
  create: AudioUncheckedCreateWithoutRequestClicksInput;
  update: AudioUncheckedUpdateWithoutRequestClicksInput;
};

export type AudioUpsertWithoutRequestsInput = {
  create: AudioUncheckedCreateWithoutRequestsInput;
  update: AudioUncheckedUpdateWithoutRequestsInput;
};

export type AudioView = {
  __typename?: 'AudioView';
  audio?: Maybe<Audio>;
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  ip?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type AudioViewCountAggregateOutputType = {
  __typename?: 'AudioViewCountAggregateOutputType';
  _all: Scalars['Int'];
  audioId: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type AudioViewCountOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AudioViewCreateInput = {
  audio?: InputMaybe<AudioCreateNestedOneWithoutAudioViewsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioViewCreateManyAudioInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioViewCreateManyAudioInputEnvelope = {
  data: AudioViewCreateManyAudioInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AudioViewCreateManyInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioViewCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioViewCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioViewCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<AudioViewCreateManyAudioInputEnvelope>;
};

export type AudioViewCreateOrConnectWithoutAudioInput = {
  create: AudioViewUncheckedCreateWithoutAudioInput;
  where: AudioViewWhereUniqueInput;
};

export type AudioViewCreateWithoutAudioInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioViewListRelationFilter = {
  every?: InputMaybe<AudioViewWhereInput>;
  none?: InputMaybe<AudioViewWhereInput>;
  some?: InputMaybe<AudioViewWhereInput>;
};

export type AudioViewMaxAggregateOutputType = {
  __typename?: 'AudioViewMaxAggregateOutputType';
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type AudioViewMaxOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AudioViewMinAggregateOutputType = {
  __typename?: 'AudioViewMinAggregateOutputType';
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type AudioViewMinOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AudioViewOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AudioViewOrderByWithAggregationInput = {
  _count?: InputMaybe<AudioViewCountOrderByAggregateInput>;
  _max?: InputMaybe<AudioViewMaxOrderByAggregateInput>;
  _min?: InputMaybe<AudioViewMinOrderByAggregateInput>;
  audioId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type AudioViewOrderByWithRelationInput = {
  audio?: InputMaybe<AudioOrderByWithRelationInput>;
  audioId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export enum AudioViewScalarFieldEnum {
  AudioId = 'audioId',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Ip = 'ip',
  UpdatedAt = 'updatedAt'
}

export type AudioViewScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereInput>>>;
  audioId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type AudioViewScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereWithAggregatesInput>>>;
  audioId?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type AudioViewUncheckedCreateInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioViewUncheckedCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioViewCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioViewCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<AudioViewCreateManyAudioInputEnvelope>;
};

export type AudioViewUncheckedCreateWithoutAudioInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AudioViewUncheckedUpdateInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioViewUncheckedUpdateManyInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioViewUncheckedUpdateManyWithoutAudioNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioViewCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioViewCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<AudioViewCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioViewUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioViewUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioViewUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type AudioViewUncheckedUpdateManyWithoutAudioViewsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioViewUncheckedUpdateWithoutAudioInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioViewUpdateInput = {
  audio?: InputMaybe<AudioUpdateOneWithoutAudioViewsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioViewUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioViewUpdateManyWithWhereWithoutAudioInput = {
  data: AudioViewUncheckedUpdateManyWithoutAudioViewsInput;
  where: AudioViewScalarWhereInput;
};

export type AudioViewUpdateManyWithoutAudioNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioViewCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioViewCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<AudioViewCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioViewUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioViewUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioViewUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type AudioViewUpdateWithWhereUniqueWithoutAudioInput = {
  data: AudioViewUncheckedUpdateWithoutAudioInput;
  where: AudioViewWhereUniqueInput;
};

export type AudioViewUpdateWithoutAudioInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AudioViewUpsertWithWhereUniqueWithoutAudioInput = {
  create: AudioViewUncheckedCreateWithoutAudioInput;
  update: AudioViewUncheckedUpdateWithoutAudioInput;
  where: AudioViewWhereUniqueInput;
};

export type AudioViewWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioViewWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioViewWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioViewWhereInput>>>;
  audio?: InputMaybe<AudioWhereInput>;
  audioId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type AudioViewWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type AudioWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<AudioWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  audioCollections?: InputMaybe<AudioCollectionListRelationFilter>;
  audioObj?: InputMaybe<JsonNullableFilter>;
  audioPreviewObj?: InputMaybe<JsonNullableFilter>;
  audioViews?: InputMaybe<AudioViewListRelationFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalLink?: InputMaybe<BoolNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  password?: InputMaybe<StringNullableFilter>;
  requestClicks?: InputMaybe<RequestClickListRelationFilter>;
  requests?: InputMaybe<RequestListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AudioWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type BatchPayload = {
  __typename?: 'BatchPayload';
  count: Scalars['Int'];
};

export type BoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type BoolNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBoolNullableFilter>;
  _min?: InputMaybe<NestedBoolNullableFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableWithAggregatesFilter>;
};

export enum Chain {
  Arbitrum = 'arbitrum',
  Avalanche = 'avalanche',
  Ethereum = 'ethereum',
  Polygon = 'polygon'
}

export enum Color {
  Amber = 'amber',
  Blue = 'blue',
  Bluegrey = 'bluegrey',
  Brown = 'brown',
  Cyan = 'cyan',
  Deeporange = 'deeporange',
  Deeppurple = 'deeppurple',
  Green = 'green',
  Indigo = 'indigo',
  Lightblue = 'lightblue',
  Lightbrown = 'lightbrown',
  Lightgreen = 'lightgreen',
  Orange = 'orange',
  Pink = 'pink',
  Purple = 'purple',
  Red = 'red',
  Rose = 'rose',
  Teal = 'teal'
}

export type Coupon = {
  __typename?: 'Coupon';
  _count: CouponCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  amountOff?: Maybe<Scalars['Float']>;
  couponType?: Maybe<CouponType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  events: Array<Event>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  orders: Array<Order>;
  percentOff?: Maybe<Scalars['Float']>;
  products: Array<Product>;
  quantity?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  startAt?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type CouponEventsArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<EventOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};


export type CouponOrdersArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<OrderOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type CouponProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type CouponAvgAggregateOutputType = {
  __typename?: 'CouponAvgAggregateOutputType';
  amountOff?: Maybe<Scalars['Float']>;
  percentOff?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

export type CouponAvgOrderByAggregateInput = {
  amountOff?: InputMaybe<SortOrder>;
  percentOff?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type CouponCountAggregateOutputType = {
  __typename?: 'CouponCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  amountOff: Scalars['Int'];
  couponType: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  expiredAt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  percentOff: Scalars['Int'];
  quantity: Scalars['Int'];
  slug: Scalars['Int'];
  startAt: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type CouponCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  amountOff?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentOff?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startAt?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CouponCountOutputType = {
  __typename?: 'CouponCountOutputType';
  events: Scalars['Int'];
  orders: Scalars['Int'];
  products: Scalars['Int'];
};

export type CouponCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCouponsInput>;
};

export type CouponCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  percentOff?: InputMaybe<Scalars['Float']>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  percentOff?: InputMaybe<Scalars['Float']>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CouponCreateManyWebsiteInputEnvelope = {
  data: CouponCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CouponCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutEventsInput>>>;
};

export type CouponCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutProductsInput>>>;
};

export type CouponCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
};

export type CouponCreateNestedOneWithoutOrdersInput = {
  connect?: InputMaybe<CouponWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CouponCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CouponUncheckedCreateWithoutOrdersInput>;
};

export type CouponCreateOrConnectWithoutEventsInput = {
  create: CouponUncheckedCreateWithoutEventsInput;
  where: CouponWhereUniqueInput;
};

export type CouponCreateOrConnectWithoutOrdersInput = {
  create: CouponUncheckedCreateWithoutOrdersInput;
  where: CouponWhereUniqueInput;
};

export type CouponCreateOrConnectWithoutProductsInput = {
  create: CouponUncheckedCreateWithoutProductsInput;
  where: CouponWhereUniqueInput;
};

export type CouponCreateOrConnectWithoutWebsiteInput = {
  create: CouponUncheckedCreateWithoutWebsiteInput;
  where: CouponWhereUniqueInput;
};

export type CouponCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCouponsInput>;
};

export type CouponCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCouponsInput>;
};

export type CouponCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCouponsInput>;
};

export type CouponCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CouponListRelationFilter = {
  every?: InputMaybe<CouponWhereInput>;
  none?: InputMaybe<CouponWhereInput>;
  some?: InputMaybe<CouponWhereInput>;
};

export type CouponMaxAggregateOutputType = {
  __typename?: 'CouponMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  amountOff?: Maybe<Scalars['Float']>;
  couponType?: Maybe<CouponType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  percentOff?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  startAt?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CouponMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  amountOff?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentOff?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startAt?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CouponMinAggregateOutputType = {
  __typename?: 'CouponMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  amountOff?: Maybe<Scalars['Float']>;
  couponType?: Maybe<CouponType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  percentOff?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  startAt?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CouponMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  amountOff?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentOff?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startAt?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CouponOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CouponOrderByWithAggregationInput = {
  _avg?: InputMaybe<CouponAvgOrderByAggregateInput>;
  _count?: InputMaybe<CouponCountOrderByAggregateInput>;
  _max?: InputMaybe<CouponMaxOrderByAggregateInput>;
  _min?: InputMaybe<CouponMinOrderByAggregateInput>;
  _sum?: InputMaybe<CouponSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  amountOff?: InputMaybe<SortOrderInput>;
  couponType?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  expiredAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  percentOff?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  startAt?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type CouponOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  amountOff?: InputMaybe<SortOrderInput>;
  couponType?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  events?: InputMaybe<EventOrderByRelationAggregateInput>;
  expiredAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  orders?: InputMaybe<OrderOrderByRelationAggregateInput>;
  percentOff?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  quantity?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  startAt?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type CouponRelationFilter = {
  is?: InputMaybe<CouponWhereInput>;
  isNot?: InputMaybe<CouponWhereInput>;
};

export enum CouponScalarFieldEnum {
  Active = 'active',
  AmountOff = 'amountOff',
  CouponType = 'couponType',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpiredAt = 'expiredAt',
  Id = 'id',
  Name = 'name',
  PercentOff = 'percentOff',
  Quantity = 'quantity',
  Slug = 'slug',
  StartAt = 'startAt',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type CouponScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  amountOff?: InputMaybe<FloatNullableFilter>;
  couponType?: InputMaybe<EnumCouponTypeNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  expiredAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  percentOff?: InputMaybe<FloatNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  startAt?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CouponScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<CouponScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<CouponScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CouponScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  amountOff?: InputMaybe<FloatNullableWithAggregatesFilter>;
  couponType?: InputMaybe<EnumCouponTypeNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiredAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  percentOff?: InputMaybe<FloatNullableWithAggregatesFilter>;
  quantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  startAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CouponSumAggregateOutputType = {
  __typename?: 'CouponSumAggregateOutputType';
  amountOff?: Maybe<Scalars['Float']>;
  percentOff?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
};

export type CouponSumOrderByAggregateInput = {
  amountOff?: InputMaybe<SortOrder>;
  percentOff?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export enum CouponType {
  AmountOff = 'amountOff',
  PercentOff = 'percentOff'
}

export type CouponUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponUncheckedCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutEventsInput>>>;
};

export type CouponUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutProductsInput>>>;
};

export type CouponUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
};

export type CouponUncheckedCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponUncheckedCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponUncheckedCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amountOff?: InputMaybe<Scalars['Float']>;
  couponType?: InputMaybe<CouponType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutCouponsInput>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCouponInput>;
  percentOff?: InputMaybe<Scalars['Float']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCouponsInput>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CouponUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUncheckedUpdateManyWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUncheckedUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type CouponUncheckedUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type CouponUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CouponUncheckedUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUncheckedUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUncheckedUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CouponUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCouponsNestedInput>;
};

export type CouponUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CouponUpdateManyWithWhereWithoutEventsInput = {
  data: CouponUncheckedUpdateManyWithoutCouponsInput;
  where: CouponScalarWhereInput;
};

export type CouponUpdateManyWithWhereWithoutProductsInput = {
  data: CouponUncheckedUpdateManyWithoutCouponsInput;
  where: CouponScalarWhereInput;
};

export type CouponUpdateManyWithWhereWithoutWebsiteInput = {
  data: CouponUncheckedUpdateManyWithoutCouponsInput;
  where: CouponScalarWhereInput;
};

export type CouponUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type CouponUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type CouponUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CouponUpdateOneWithoutOrdersNestedInput = {
  connect?: InputMaybe<CouponWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CouponCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CouponUncheckedCreateWithoutOrdersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CouponUncheckedUpdateWithoutOrdersInput>;
  upsert?: InputMaybe<CouponUpsertWithoutOrdersInput>;
};

export type CouponUpdateWithWhereUniqueWithoutEventsInput = {
  data: CouponUncheckedUpdateWithoutEventsInput;
  where: CouponWhereUniqueInput;
};

export type CouponUpdateWithWhereUniqueWithoutProductsInput = {
  data: CouponUncheckedUpdateWithoutProductsInput;
  where: CouponWhereUniqueInput;
};

export type CouponUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: CouponUncheckedUpdateWithoutWebsiteInput;
  where: CouponWhereUniqueInput;
};

export type CouponUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCouponsNestedInput>;
};

export type CouponUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCouponsNestedInput>;
};

export type CouponUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCouponsNestedInput>;
};

export type CouponUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amountOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  couponType?: InputMaybe<NullableEnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutCouponsNestedInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCouponNestedInput>;
  percentOff?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCouponsNestedInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CouponUpsertWithWhereUniqueWithoutEventsInput = {
  create: CouponUncheckedCreateWithoutEventsInput;
  update: CouponUncheckedUpdateWithoutEventsInput;
  where: CouponWhereUniqueInput;
};

export type CouponUpsertWithWhereUniqueWithoutProductsInput = {
  create: CouponUncheckedCreateWithoutProductsInput;
  update: CouponUncheckedUpdateWithoutProductsInput;
  where: CouponWhereUniqueInput;
};

export type CouponUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: CouponUncheckedCreateWithoutWebsiteInput;
  update: CouponUncheckedUpdateWithoutWebsiteInput;
  where: CouponWhereUniqueInput;
};

export type CouponUpsertWithoutOrdersInput = {
  create: CouponUncheckedCreateWithoutOrdersInput;
  update: CouponUncheckedUpdateWithoutOrdersInput;
};

export type CouponWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CouponWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<CouponWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CouponWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  amountOff?: InputMaybe<FloatNullableFilter>;
  couponType?: InputMaybe<EnumCouponTypeNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  events?: InputMaybe<EventListRelationFilter>;
  expiredAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orders?: InputMaybe<OrderListRelationFilter>;
  percentOff?: InputMaybe<FloatNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  startAt?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CouponWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export enum CurrencyCode {
  Usd = 'usd'
}

export type Customer = {
  __typename?: 'Customer';
  _count: CustomerCountOutputType;
  affiliate?: Maybe<Affiliate>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  orders: Array<Order>;
  requests: Array<Request>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type CustomerOrdersArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<OrderOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type CustomerRequestsArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<RequestOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};

export type CustomerCountAggregateOutputType = {
  __typename?: 'CustomerCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  email: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  note: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type CustomerCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CustomerCountOutputType = {
  __typename?: 'CustomerCountOutputType';
  orders: Scalars['Int'];
  requests: Scalars['Int'];
};

export type CustomerCreateInput = {
  affiliate?: InputMaybe<AffiliateCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type CustomerCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyUserInputEnvelope = {
  data: CustomerCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyWebsiteInputEnvelope = {
  data: CustomerCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
};

export type CustomerCreateNestedOneWithoutAffiliateInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutAffiliateInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutAffiliateInput>;
};

export type CustomerCreateNestedOneWithoutOrdersInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutOrdersInput>;
};

export type CustomerCreateNestedOneWithoutRequestsInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutRequestsInput>;
};

export type CustomerCreateOrConnectWithoutAffiliateInput = {
  create: CustomerUncheckedCreateWithoutAffiliateInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutOrdersInput = {
  create: CustomerUncheckedCreateWithoutOrdersInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutRequestsInput = {
  create: CustomerUncheckedCreateWithoutRequestsInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutUserInput = {
  create: CustomerUncheckedCreateWithoutUserInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutWebsiteInput = {
  create: CustomerUncheckedCreateWithoutWebsiteInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateWithoutAffiliateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type CustomerCreateWithoutOrdersInput = {
  affiliate?: InputMaybe<AffiliateCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type CustomerCreateWithoutRequestsInput = {
  affiliate?: InputMaybe<AffiliateCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type CustomerCreateWithoutUserInput = {
  affiliate?: InputMaybe<AffiliateCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type CustomerCreateWithoutWebsiteInput = {
  affiliate?: InputMaybe<AffiliateCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CustomerListRelationFilter = {
  every?: InputMaybe<CustomerWhereInput>;
  none?: InputMaybe<CustomerWhereInput>;
  some?: InputMaybe<CustomerWhereInput>;
};

export type CustomerMaxAggregateOutputType = {
  __typename?: 'CustomerMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CustomerMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CustomerMinAggregateOutputType = {
  __typename?: 'CustomerMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CustomerMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CustomerOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerOrderByWithAggregationInput = {
  _count?: InputMaybe<CustomerCountOrderByAggregateInput>;
  _max?: InputMaybe<CustomerMaxOrderByAggregateInput>;
  _min?: InputMaybe<CustomerMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  note?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type CustomerOrderByWithRelationInput = {
  affiliate?: InputMaybe<AffiliateOrderByWithRelationInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  note?: InputMaybe<SortOrderInput>;
  orders?: InputMaybe<OrderOrderByRelationAggregateInput>;
  requests?: InputMaybe<RequestOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type CustomerRelationFilter = {
  is?: InputMaybe<CustomerWhereInput>;
  isNot?: InputMaybe<CustomerWhereInput>;
};

export enum CustomerScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Email = 'email',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Note = 'note',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress',
  WebsiteId = 'websiteId'
}

export type CustomerScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  note?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CustomerScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<CustomerScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<CustomerScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CustomerScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CustomerUncheckedCreateInput = {
  affiliate?: InputMaybe<AffiliateUncheckedCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
};

export type CustomerUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
};

export type CustomerUncheckedCreateWithoutAffiliateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerUncheckedCreateWithoutOrdersInput = {
  affiliate?: InputMaybe<AffiliateUncheckedCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerUncheckedCreateWithoutRequestsInput = {
  affiliate?: InputMaybe<AffiliateUncheckedCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerUncheckedCreateWithoutUserInput = {
  affiliate?: InputMaybe<AffiliateUncheckedCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerUncheckedCreateWithoutWebsiteInput = {
  affiliate?: InputMaybe<AffiliateUncheckedCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CustomerUncheckedUpdateInput = {
  affiliate?: InputMaybe<AffiliateUncheckedUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateManyWithoutCustomersInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type CustomerUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CustomerUncheckedUpdateWithoutAffiliateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateWithoutOrdersInput = {
  affiliate?: InputMaybe<AffiliateUncheckedUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateWithoutRequestsInput = {
  affiliate?: InputMaybe<AffiliateUncheckedUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateWithoutUserInput = {
  affiliate?: InputMaybe<AffiliateUncheckedUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateWithoutWebsiteInput = {
  affiliate?: InputMaybe<AffiliateUncheckedUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateInput = {
  affiliate?: InputMaybe<AffiliateUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersNestedInput>;
};

export type CustomerUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateManyWithWhereWithoutUserInput = {
  data: CustomerUncheckedUpdateManyWithoutCustomersInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutWebsiteInput = {
  data: CustomerUncheckedUpdateManyWithoutCustomersInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type CustomerUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CustomerUpdateOneWithoutAffiliateNestedInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutAffiliateInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutAffiliateInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUncheckedUpdateWithoutAffiliateInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutAffiliateInput>;
};

export type CustomerUpdateOneWithoutOrdersNestedInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutOrdersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUncheckedUpdateWithoutOrdersInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutOrdersInput>;
};

export type CustomerUpdateOneWithoutRequestsNestedInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutRequestsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUncheckedUpdateWithoutRequestsInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutRequestsInput>;
};

export type CustomerUpdateWithWhereUniqueWithoutUserInput = {
  data: CustomerUncheckedUpdateWithoutUserInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: CustomerUncheckedUpdateWithoutWebsiteInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithoutAffiliateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersNestedInput>;
};

export type CustomerUpdateWithoutOrdersInput = {
  affiliate?: InputMaybe<AffiliateUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersNestedInput>;
};

export type CustomerUpdateWithoutRequestsInput = {
  affiliate?: InputMaybe<AffiliateUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersNestedInput>;
};

export type CustomerUpdateWithoutUserInput = {
  affiliate?: InputMaybe<AffiliateUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersNestedInput>;
};

export type CustomerUpdateWithoutWebsiteInput = {
  affiliate?: InputMaybe<AffiliateUpdateOneWithoutCustomerNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpsertWithWhereUniqueWithoutUserInput = {
  create: CustomerUncheckedCreateWithoutUserInput;
  update: CustomerUncheckedUpdateWithoutUserInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: CustomerUncheckedCreateWithoutWebsiteInput;
  update: CustomerUncheckedUpdateWithoutWebsiteInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithoutAffiliateInput = {
  create: CustomerUncheckedCreateWithoutAffiliateInput;
  update: CustomerUncheckedUpdateWithoutAffiliateInput;
};

export type CustomerUpsertWithoutOrdersInput = {
  create: CustomerUncheckedCreateWithoutOrdersInput;
  update: CustomerUncheckedUpdateWithoutOrdersInput;
};

export type CustomerUpsertWithoutRequestsInput = {
  create: CustomerUncheckedCreateWithoutRequestsInput;
  update: CustomerUncheckedUpdateWithoutRequestsInput;
};

export type CustomerWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CustomerWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<CustomerWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CustomerWhereInput>>>;
  affiliate?: InputMaybe<AffiliateWhereInput>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  note?: InputMaybe<StringNullableFilter>;
  orders?: InputMaybe<OrderListRelationFilter>;
  requests?: InputMaybe<RequestListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CustomerWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type DateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type DateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type Enum = {
  __typename?: 'Enum';
  fields: Array<Scalars['String']>;
  name: Scalars['String'];
};

export type EnumAttachmentTypeNullableFilter = {
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export type EnumAttachmentTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export type EnumChainNullableFilter = {
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export type EnumChainNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumChainNullableFilter>;
  _min?: InputMaybe<NestedEnumChainNullableFilter>;
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export type EnumColorNullableFilter = {
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export type EnumColorNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumColorNullableFilter>;
  _min?: InputMaybe<NestedEnumColorNullableFilter>;
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export type EnumCouponTypeNullableFilter = {
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export type EnumCouponTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCouponTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumCouponTypeNullableFilter>;
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export type EnumCurrencyCodeNullableFilter = {
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export type EnumCurrencyCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export type EnumLanguageCodeNullableFilter = {
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export type EnumLanguageCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumLanguageCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumLanguageCodeNullableFilter>;
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export type EnumNavColorNullableFilter = {
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export type EnumNavColorNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumNavColorNullableFilter>;
  _min?: InputMaybe<NestedEnumNavColorNullableFilter>;
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export type EnumPaymentTypeNullableFilter = {
  equals?: InputMaybe<PaymentType>;
  in?: InputMaybe<Array<InputMaybe<PaymentType>>>;
  not?: InputMaybe<NestedEnumPaymentTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentType>>>;
};

export type EnumPaymentTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumPaymentTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumPaymentTypeNullableFilter>;
  equals?: InputMaybe<PaymentType>;
  in?: InputMaybe<Array<InputMaybe<PaymentType>>>;
  not?: InputMaybe<NestedEnumPaymentTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentType>>>;
};

export type EnumProductTypeNullableFilter = {
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export type EnumProductTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export type EnumRequestStatusNullableFilter = {
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export type EnumRequestStatusNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  _min?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export type Event = {
  __typename?: 'Event';
  _count: EventCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  agenda: Array<Agenda>;
  attachments: Array<Attachment>;
  chain?: Maybe<Chain>;
  commissionFee?: Maybe<Scalars['Float']>;
  content?: Maybe<Scalars['Json']>;
  contractAddress?: Maybe<Scalars['String']>;
  coupons: Array<Coupon>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endDate?: Maybe<Scalars['DateTime']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventCollections: Array<EventCollection>;
  eventEndTime?: Maybe<Scalars['DateTime']>;
  eventGroups: Array<EventGroup>;
  eventStartTime?: Maybe<Scalars['DateTime']>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  gallery?: Maybe<Scalars['Json']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  isExternalNft?: Maybe<Scalars['Boolean']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  marketingLocation: Array<MarketingLocation>;
  maxOrderPerUser?: Maybe<Scalars['Int']>;
  maxQuantity?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  orderedProducts: Array<OrderedProduct>;
  payWithUSD?: Maybe<Scalars['Boolean']>;
  price?: Maybe<Scalars['Float']>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyBps?: Maybe<Scalars['Float']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  saleEnabled?: Maybe<Scalars['Boolean']>;
  salePrice?: Maybe<Scalars['Float']>;
  slug?: Maybe<Scalars['String']>;
  speakers: Array<Speaker>;
  startDate?: Maybe<Scalars['DateTime']>;
  startTime?: Maybe<Scalars['DateTime']>;
  telegramApiToken?: Maybe<Scalars['String']>;
  telegramBotId?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  useCommission?: Maybe<Scalars['Boolean']>;
  useExternalNft?: Maybe<Scalars['Boolean']>;
  useMultipleDays?: Maybe<Scalars['Boolean']>;
  useNft?: Maybe<Scalars['Boolean']>;
  usePrice?: Maybe<Scalars['Boolean']>;
  useQuantity?: Maybe<Scalars['Boolean']>;
  useRoyalty?: Maybe<Scalars['Boolean']>;
  useStartTime?: Maybe<Scalars['Boolean']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  useVariations?: Maybe<Scalars['Boolean']>;
  variationOptions?: Maybe<Scalars['Json']>;
  variations?: Maybe<Scalars['Json']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type EventAgendaArgs = {
  cursor?: InputMaybe<AgendaWhereUniqueInput>;
  distinct?: InputMaybe<AgendaScalarFieldEnum>;
  orderBy?: InputMaybe<AgendaOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgendaWhereInput>;
};


export type EventAttachmentsArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<AttachmentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type EventCouponsArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<CouponScalarFieldEnum>;
  orderBy?: InputMaybe<CouponOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type EventEventCollectionsArgs = {
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  distinct?: InputMaybe<EventCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<EventCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type EventEventGroupsArgs = {
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  distinct?: InputMaybe<EventGroupScalarFieldEnum>;
  orderBy?: InputMaybe<EventGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type EventMarketingLocationArgs = {
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  distinct?: InputMaybe<MarketingLocationScalarFieldEnum>;
  orderBy?: InputMaybe<MarketingLocationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type EventOrderedProductsArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type EventSpeakersArgs = {
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  distinct?: InputMaybe<SpeakerScalarFieldEnum>;
  orderBy?: InputMaybe<SpeakerOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SpeakerWhereInput>;
};

export type EventAvgAggregateOutputType = {
  __typename?: 'EventAvgAggregateOutputType';
  commissionFee?: Maybe<Scalars['Float']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxOrderPerUser?: Maybe<Scalars['Float']>;
  maxQuantity?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  quantitySold?: Maybe<Scalars['Float']>;
  royaltyBps?: Maybe<Scalars['Float']>;
  royaltyFee?: Maybe<Scalars['Float']>;
  salePrice?: Maybe<Scalars['Float']>;
};

export type EventAvgOrderByAggregateInput = {
  commissionFee?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxOrderPerUser?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyBps?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
};

export type EventCollection = {
  __typename?: 'EventCollection';
  _count: EventCollectionCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  events: Array<Event>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type EventCollectionEventsArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<EventOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};

export type EventCollectionCountAggregateOutputType = {
  __typename?: 'EventCollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type EventCollectionCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventCollectionCountOutputType = {
  __typename?: 'EventCollectionCountOutputType';
  events: Scalars['Int'];
};

export type EventCollectionCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  events?: InputMaybe<EventCreateNestedManyWithoutEventCollectionsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventCollectionsInput>;
};

export type EventCollectionCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventCollectionCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EventCollectionCreateManyWebsiteInputEnvelope = {
  data: EventCollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EventCollectionCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutEventsInput>>>;
};

export type EventCollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCollectionCreateManyWebsiteInputEnvelope>;
};

export type EventCollectionCreateOrConnectWithoutEventsInput = {
  create: EventCollectionUncheckedCreateWithoutEventsInput;
  where: EventCollectionWhereUniqueInput;
};

export type EventCollectionCreateOrConnectWithoutWebsiteInput = {
  create: EventCollectionUncheckedCreateWithoutWebsiteInput;
  where: EventCollectionWhereUniqueInput;
};

export type EventCollectionCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventCollectionsInput>;
};

export type EventCollectionCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  events?: InputMaybe<EventCreateNestedManyWithoutEventCollectionsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EventCollectionListRelationFilter = {
  every?: InputMaybe<EventCollectionWhereInput>;
  none?: InputMaybe<EventCollectionWhereInput>;
  some?: InputMaybe<EventCollectionWhereInput>;
};

export type EventCollectionMaxAggregateOutputType = {
  __typename?: 'EventCollectionMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type EventCollectionMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventCollectionMinAggregateOutputType = {
  __typename?: 'EventCollectionMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type EventCollectionMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventCollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type EventCollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<EventCollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<EventCollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<EventCollectionMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type EventCollectionOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  events?: InputMaybe<EventOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum EventCollectionScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type EventCollectionScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EventCollectionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EventCollectionUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutEventCollectionsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventCollectionUncheckedCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutEventsInput>>>;
};

export type EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCollectionCreateManyWebsiteInputEnvelope>;
};

export type EventCollectionUncheckedCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventCollectionUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutEventCollectionsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EventCollectionUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutEventCollectionsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventCollectionUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventCollectionUncheckedUpdateManyWithoutEventCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventCollectionUncheckedUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventCollectionUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventCollectionUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventCollectionUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type EventCollectionUncheckedUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventCollectionUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutEventCollectionsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type EventCollectionUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutEventCollectionsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventCollectionsNestedInput>;
};

export type EventCollectionUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type EventCollectionUpdateManyWithWhereWithoutEventsInput = {
  data: EventCollectionUncheckedUpdateManyWithoutEventCollectionsInput;
  where: EventCollectionScalarWhereInput;
};

export type EventCollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: EventCollectionUncheckedUpdateManyWithoutEventCollectionsInput;
  where: EventCollectionScalarWhereInput;
};

export type EventCollectionUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventCollectionUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventCollectionUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventCollectionUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type EventCollectionUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type EventCollectionUpdateWithWhereUniqueWithoutEventsInput = {
  data: EventCollectionUncheckedUpdateWithoutEventsInput;
  where: EventCollectionWhereUniqueInput;
};

export type EventCollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: EventCollectionUncheckedUpdateWithoutWebsiteInput;
  where: EventCollectionWhereUniqueInput;
};

export type EventCollectionUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventCollectionsNestedInput>;
};

export type EventCollectionUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutEventCollectionsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type EventCollectionUpsertWithWhereUniqueWithoutEventsInput = {
  create: EventCollectionUncheckedCreateWithoutEventsInput;
  update: EventCollectionUncheckedUpdateWithoutEventsInput;
  where: EventCollectionWhereUniqueInput;
};

export type EventCollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: EventCollectionUncheckedCreateWithoutWebsiteInput;
  update: EventCollectionUncheckedUpdateWithoutWebsiteInput;
  where: EventCollectionWhereUniqueInput;
};

export type EventCollectionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<EventCollectionWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventCollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventCollectionWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  events?: InputMaybe<EventListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EventCollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type EventCountAggregateOutputType = {
  __typename?: 'EventCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  chain: Scalars['Int'];
  commissionFee: Scalars['Int'];
  content: Scalars['Int'];
  contractAddress: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  endDate: Scalars['Int'];
  endTime: Scalars['Int'];
  eventEndTime: Scalars['Int'];
  eventStartTime: Scalars['Int'];
  externalNftChain: Scalars['Int'];
  externalNftContractAddress: Scalars['Int'];
  externalUrl: Scalars['Int'];
  gallery: Scalars['Int'];
  hasLocation: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  isExternalNft: Scalars['Int'];
  locationAddress: Scalars['Int'];
  locationLat: Scalars['Int'];
  locationLng: Scalars['Int'];
  maxOrderPerUser: Scalars['Int'];
  maxQuantity: Scalars['Int'];
  name: Scalars['Int'];
  payWithUSD: Scalars['Int'];
  price: Scalars['Int'];
  productType: Scalars['Int'];
  quantity: Scalars['Int'];
  quantitySold: Scalars['Int'];
  royaltyBps: Scalars['Int'];
  royaltyFee: Scalars['Int'];
  saleEnabled: Scalars['Int'];
  salePrice: Scalars['Int'];
  slug: Scalars['Int'];
  startDate: Scalars['Int'];
  startTime: Scalars['Int'];
  telegramApiToken: Scalars['Int'];
  telegramBotId: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  useCommission: Scalars['Int'];
  useExternalNft: Scalars['Int'];
  useMultipleDays: Scalars['Int'];
  useNft: Scalars['Int'];
  usePrice: Scalars['Int'];
  useQuantity: Scalars['Int'];
  useRoyalty: Scalars['Int'];
  useStartTime: Scalars['Int'];
  useUsd: Scalars['Int'];
  useVariations: Scalars['Int'];
  variationOptions: Scalars['Int'];
  variations: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type EventCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  commissionFee?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  contractAddress?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endDate?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventEndTime?: InputMaybe<SortOrder>;
  eventStartTime?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  gallery?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxOrderPerUser?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  payWithUSD?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyBps?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  saleEnabled?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startDate?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  telegramApiToken?: InputMaybe<SortOrder>;
  telegramBotId?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  useCommission?: InputMaybe<SortOrder>;
  useExternalNft?: InputMaybe<SortOrder>;
  useMultipleDays?: InputMaybe<SortOrder>;
  useNft?: InputMaybe<SortOrder>;
  usePrice?: InputMaybe<SortOrder>;
  useQuantity?: InputMaybe<SortOrder>;
  useRoyalty?: InputMaybe<SortOrder>;
  useStartTime?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  useVariations?: InputMaybe<SortOrder>;
  variationOptions?: InputMaybe<SortOrder>;
  variations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventCountOutputType = {
  __typename?: 'EventCountOutputType';
  agenda: Scalars['Int'];
  attachments: Scalars['Int'];
  coupons: Scalars['Int'];
  eventCollections: Scalars['Int'];
  eventGroups: Scalars['Int'];
  marketingLocation: Scalars['Int'];
  orderedProducts: Scalars['Int'];
  speakers: Scalars['Int'];
};

export type EventCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type EventCreateManyWebsiteInputEnvelope = {
  data: EventCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EventCreateNestedManyWithoutCouponsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutCouponsInput>>>;
};

export type EventCreateNestedManyWithoutEventCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventCollectionsInput>>>;
};

export type EventCreateNestedManyWithoutEventGroupsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventGroupsInput>>>;
};

export type EventCreateNestedManyWithoutMarketingLocationInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutMarketingLocationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutMarketingLocationInput>>>;
};

export type EventCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCreateManyWebsiteInputEnvelope>;
};

export type EventCreateNestedOneWithoutAgendaInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutAgendaInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutAgendaInput>;
};

export type EventCreateNestedOneWithoutAttachmentsInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutAttachmentsInput>;
};

export type EventCreateNestedOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutOrderedProductsInput>;
};

export type EventCreateNestedOneWithoutSpeakersInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutSpeakersInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutSpeakersInput>;
};

export type EventCreateOrConnectWithoutAgendaInput = {
  create: EventUncheckedCreateWithoutAgendaInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutAttachmentsInput = {
  create: EventUncheckedCreateWithoutAttachmentsInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutCouponsInput = {
  create: EventUncheckedCreateWithoutCouponsInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutEventCollectionsInput = {
  create: EventUncheckedCreateWithoutEventCollectionsInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutEventGroupsInput = {
  create: EventUncheckedCreateWithoutEventGroupsInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutMarketingLocationInput = {
  create: EventUncheckedCreateWithoutMarketingLocationInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutOrderedProductsInput = {
  create: EventUncheckedCreateWithoutOrderedProductsInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutSpeakersInput = {
  create: EventUncheckedCreateWithoutSpeakersInput;
  where: EventWhereUniqueInput;
};

export type EventCreateOrConnectWithoutWebsiteInput = {
  create: EventUncheckedCreateWithoutWebsiteInput;
  where: EventWhereUniqueInput;
};

export type EventCreateWithoutAgendaInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutEventCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutEventGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutMarketingLocationInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutSpeakersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventsInput>;
};

export type EventCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type EventGroup = {
  __typename?: 'EventGroup';
  _count: EventGroupCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  events: Array<Event>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  organization?: Maybe<Organization>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type EventGroupEventsArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<EventOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};

export type EventGroupCountAggregateOutputType = {
  __typename?: 'EventGroupCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  organizationId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type EventGroupCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventGroupCountOutputType = {
  __typename?: 'EventGroupCountOutputType';
  events: Scalars['Int'];
};

export type EventGroupCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutEventGroupsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutEventGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventGroupsInput>;
};

export type EventGroupCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventGroupCreateManyOrganizationInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventGroupCreateManyOrganizationInputEnvelope = {
  data: EventGroupCreateManyOrganizationInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EventGroupCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EventGroupCreateManyWebsiteInputEnvelope = {
  data: EventGroupCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EventGroupCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutEventsInput>>>;
};

export type EventGroupCreateNestedManyWithoutOrganizationInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyOrganizationInputEnvelope>;
};

export type EventGroupCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyWebsiteInputEnvelope>;
};

export type EventGroupCreateOrConnectWithoutEventsInput = {
  create: EventGroupUncheckedCreateWithoutEventsInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupCreateOrConnectWithoutOrganizationInput = {
  create: EventGroupUncheckedCreateWithoutOrganizationInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupCreateOrConnectWithoutWebsiteInput = {
  create: EventGroupUncheckedCreateWithoutWebsiteInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutEventGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventGroupsInput>;
};

export type EventGroupCreateWithoutOrganizationInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutEventGroupsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutEventGroupsInput>;
};

export type EventGroupCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutEventGroupsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutEventGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EventGroupListRelationFilter = {
  every?: InputMaybe<EventGroupWhereInput>;
  none?: InputMaybe<EventGroupWhereInput>;
  some?: InputMaybe<EventGroupWhereInput>;
};

export type EventGroupMaxAggregateOutputType = {
  __typename?: 'EventGroupMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type EventGroupMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventGroupMinAggregateOutputType = {
  __typename?: 'EventGroupMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type EventGroupMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventGroupOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type EventGroupOrderByWithAggregationInput = {
  _count?: InputMaybe<EventGroupCountOrderByAggregateInput>;
  _max?: InputMaybe<EventGroupMaxOrderByAggregateInput>;
  _min?: InputMaybe<EventGroupMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  organizationId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type EventGroupOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  events?: InputMaybe<EventOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  organization?: InputMaybe<OrganizationOrderByWithRelationInput>;
  organizationId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum EventGroupScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  Name = 'name',
  OrganizationId = 'organizationId',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type EventGroupScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  organizationId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EventGroupScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  organizationId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EventGroupUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutEventGroupsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventGroupUncheckedCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutEventsInput>>>;
};

export type EventGroupUncheckedCreateNestedManyWithoutOrganizationInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyOrganizationInputEnvelope>;
};

export type EventGroupUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyWebsiteInputEnvelope>;
};

export type EventGroupUncheckedCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventGroupUncheckedCreateWithoutOrganizationInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutEventGroupsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventGroupUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutEventGroupsInput>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EventGroupUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutEventGroupsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventGroupUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventGroupUncheckedUpdateManyWithoutEventGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventGroupUncheckedUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventGroupUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventGroupUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventGroupUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type EventGroupUncheckedUpdateManyWithoutOrganizationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyOrganizationInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventGroupUpdateWithWhereUniqueWithoutOrganizationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventGroupUpdateManyWithWhereWithoutOrganizationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventGroupUpsertWithWhereUniqueWithoutOrganizationInput>>>;
};

export type EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventGroupUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventGroupUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventGroupUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type EventGroupUncheckedUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventGroupUncheckedUpdateWithoutOrganizationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutEventGroupsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventGroupUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutEventGroupsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type EventGroupUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutEventGroupsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutEventGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventGroupsNestedInput>;
};

export type EventGroupUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type EventGroupUpdateManyWithWhereWithoutEventsInput = {
  data: EventGroupUncheckedUpdateManyWithoutEventGroupsInput;
  where: EventGroupScalarWhereInput;
};

export type EventGroupUpdateManyWithWhereWithoutOrganizationInput = {
  data: EventGroupUncheckedUpdateManyWithoutEventGroupsInput;
  where: EventGroupScalarWhereInput;
};

export type EventGroupUpdateManyWithWhereWithoutWebsiteInput = {
  data: EventGroupUncheckedUpdateManyWithoutEventGroupsInput;
  where: EventGroupScalarWhereInput;
};

export type EventGroupUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventGroupUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventGroupUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventGroupUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type EventGroupUpdateManyWithoutOrganizationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyOrganizationInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventGroupUpdateWithWhereUniqueWithoutOrganizationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventGroupUpdateManyWithWhereWithoutOrganizationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventGroupUpsertWithWhereUniqueWithoutOrganizationInput>>>;
};

export type EventGroupUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventGroupCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventGroupUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventGroupUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventGroupUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type EventGroupUpdateWithWhereUniqueWithoutEventsInput = {
  data: EventGroupUncheckedUpdateWithoutEventsInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupUpdateWithWhereUniqueWithoutOrganizationInput = {
  data: EventGroupUncheckedUpdateWithoutOrganizationInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: EventGroupUncheckedUpdateWithoutWebsiteInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutEventGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventGroupsNestedInput>;
};

export type EventGroupUpdateWithoutOrganizationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutEventGroupsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventGroupsNestedInput>;
};

export type EventGroupUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutEventGroupsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutEventGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type EventGroupUpsertWithWhereUniqueWithoutEventsInput = {
  create: EventGroupUncheckedCreateWithoutEventsInput;
  update: EventGroupUncheckedUpdateWithoutEventsInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupUpsertWithWhereUniqueWithoutOrganizationInput = {
  create: EventGroupUncheckedCreateWithoutOrganizationInput;
  update: EventGroupUncheckedUpdateWithoutOrganizationInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: EventGroupUncheckedCreateWithoutWebsiteInput;
  update: EventGroupUncheckedUpdateWithoutWebsiteInput;
  where: EventGroupWhereUniqueInput;
};

export type EventGroupWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<EventGroupWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventGroupWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventGroupWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  events?: InputMaybe<EventListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  organization?: InputMaybe<OrganizationWhereInput>;
  organizationId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EventGroupWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type EventListRelationFilter = {
  every?: InputMaybe<EventWhereInput>;
  none?: InputMaybe<EventWhereInput>;
  some?: InputMaybe<EventWhereInput>;
};

export type EventMaxAggregateOutputType = {
  __typename?: 'EventMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  chain?: Maybe<Chain>;
  commissionFee?: Maybe<Scalars['Float']>;
  contractAddress?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endDate?: Maybe<Scalars['DateTime']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventEndTime?: Maybe<Scalars['DateTime']>;
  eventStartTime?: Maybe<Scalars['DateTime']>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  isExternalNft?: Maybe<Scalars['Boolean']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxOrderPerUser?: Maybe<Scalars['Int']>;
  maxQuantity?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  payWithUSD?: Maybe<Scalars['Boolean']>;
  price?: Maybe<Scalars['Float']>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyBps?: Maybe<Scalars['Float']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  saleEnabled?: Maybe<Scalars['Boolean']>;
  salePrice?: Maybe<Scalars['Float']>;
  slug?: Maybe<Scalars['String']>;
  startDate?: Maybe<Scalars['DateTime']>;
  startTime?: Maybe<Scalars['DateTime']>;
  telegramApiToken?: Maybe<Scalars['String']>;
  telegramBotId?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  useCommission?: Maybe<Scalars['Boolean']>;
  useExternalNft?: Maybe<Scalars['Boolean']>;
  useMultipleDays?: Maybe<Scalars['Boolean']>;
  useNft?: Maybe<Scalars['Boolean']>;
  usePrice?: Maybe<Scalars['Boolean']>;
  useQuantity?: Maybe<Scalars['Boolean']>;
  useRoyalty?: Maybe<Scalars['Boolean']>;
  useStartTime?: Maybe<Scalars['Boolean']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  useVariations?: Maybe<Scalars['Boolean']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type EventMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  commissionFee?: InputMaybe<SortOrder>;
  contractAddress?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endDate?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventEndTime?: InputMaybe<SortOrder>;
  eventStartTime?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxOrderPerUser?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  payWithUSD?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyBps?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  saleEnabled?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startDate?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  telegramApiToken?: InputMaybe<SortOrder>;
  telegramBotId?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  useCommission?: InputMaybe<SortOrder>;
  useExternalNft?: InputMaybe<SortOrder>;
  useMultipleDays?: InputMaybe<SortOrder>;
  useNft?: InputMaybe<SortOrder>;
  usePrice?: InputMaybe<SortOrder>;
  useQuantity?: InputMaybe<SortOrder>;
  useRoyalty?: InputMaybe<SortOrder>;
  useStartTime?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  useVariations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventMinAggregateOutputType = {
  __typename?: 'EventMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  chain?: Maybe<Chain>;
  commissionFee?: Maybe<Scalars['Float']>;
  contractAddress?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endDate?: Maybe<Scalars['DateTime']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventEndTime?: Maybe<Scalars['DateTime']>;
  eventStartTime?: Maybe<Scalars['DateTime']>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  isExternalNft?: Maybe<Scalars['Boolean']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxOrderPerUser?: Maybe<Scalars['Int']>;
  maxQuantity?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  payWithUSD?: Maybe<Scalars['Boolean']>;
  price?: Maybe<Scalars['Float']>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyBps?: Maybe<Scalars['Float']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  saleEnabled?: Maybe<Scalars['Boolean']>;
  salePrice?: Maybe<Scalars['Float']>;
  slug?: Maybe<Scalars['String']>;
  startDate?: Maybe<Scalars['DateTime']>;
  startTime?: Maybe<Scalars['DateTime']>;
  telegramApiToken?: Maybe<Scalars['String']>;
  telegramBotId?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  useCommission?: Maybe<Scalars['Boolean']>;
  useExternalNft?: Maybe<Scalars['Boolean']>;
  useMultipleDays?: Maybe<Scalars['Boolean']>;
  useNft?: Maybe<Scalars['Boolean']>;
  usePrice?: Maybe<Scalars['Boolean']>;
  useQuantity?: Maybe<Scalars['Boolean']>;
  useRoyalty?: Maybe<Scalars['Boolean']>;
  useStartTime?: Maybe<Scalars['Boolean']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  useVariations?: Maybe<Scalars['Boolean']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type EventMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  commissionFee?: InputMaybe<SortOrder>;
  contractAddress?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endDate?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventEndTime?: InputMaybe<SortOrder>;
  eventStartTime?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxOrderPerUser?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  payWithUSD?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyBps?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  saleEnabled?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startDate?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  telegramApiToken?: InputMaybe<SortOrder>;
  telegramBotId?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  useCommission?: InputMaybe<SortOrder>;
  useExternalNft?: InputMaybe<SortOrder>;
  useMultipleDays?: InputMaybe<SortOrder>;
  useNft?: InputMaybe<SortOrder>;
  usePrice?: InputMaybe<SortOrder>;
  useQuantity?: InputMaybe<SortOrder>;
  useRoyalty?: InputMaybe<SortOrder>;
  useStartTime?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  useVariations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type EventOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type EventOrderByWithAggregationInput = {
  _avg?: InputMaybe<EventAvgOrderByAggregateInput>;
  _count?: InputMaybe<EventCountOrderByAggregateInput>;
  _max?: InputMaybe<EventMaxOrderByAggregateInput>;
  _min?: InputMaybe<EventMinOrderByAggregateInput>;
  _sum?: InputMaybe<EventSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  chain?: InputMaybe<SortOrderInput>;
  commissionFee?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  contractAddress?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  endDate?: InputMaybe<SortOrderInput>;
  endTime?: InputMaybe<SortOrderInput>;
  eventEndTime?: InputMaybe<SortOrderInput>;
  eventStartTime?: InputMaybe<SortOrderInput>;
  externalNftChain?: InputMaybe<SortOrderInput>;
  externalNftContractAddress?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  gallery?: InputMaybe<SortOrderInput>;
  hasLocation?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalNft?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  maxOrderPerUser?: InputMaybe<SortOrderInput>;
  maxQuantity?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  payWithUSD?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  productType?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  quantitySold?: InputMaybe<SortOrderInput>;
  royaltyBps?: InputMaybe<SortOrderInput>;
  royaltyFee?: InputMaybe<SortOrderInput>;
  saleEnabled?: InputMaybe<SortOrderInput>;
  salePrice?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  startDate?: InputMaybe<SortOrderInput>;
  startTime?: InputMaybe<SortOrderInput>;
  telegramApiToken?: InputMaybe<SortOrderInput>;
  telegramBotId?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  useCommission?: InputMaybe<SortOrderInput>;
  useExternalNft?: InputMaybe<SortOrderInput>;
  useMultipleDays?: InputMaybe<SortOrderInput>;
  useNft?: InputMaybe<SortOrderInput>;
  usePrice?: InputMaybe<SortOrderInput>;
  useQuantity?: InputMaybe<SortOrderInput>;
  useRoyalty?: InputMaybe<SortOrderInput>;
  useStartTime?: InputMaybe<SortOrderInput>;
  useUsd?: InputMaybe<SortOrderInput>;
  useVariations?: InputMaybe<SortOrderInput>;
  variationOptions?: InputMaybe<SortOrderInput>;
  variations?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type EventOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  agenda?: InputMaybe<AgendaOrderByRelationAggregateInput>;
  attachments?: InputMaybe<AttachmentOrderByRelationAggregateInput>;
  chain?: InputMaybe<SortOrderInput>;
  commissionFee?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  contractAddress?: InputMaybe<SortOrderInput>;
  coupons?: InputMaybe<CouponOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  endDate?: InputMaybe<SortOrderInput>;
  endTime?: InputMaybe<SortOrderInput>;
  eventCollections?: InputMaybe<EventCollectionOrderByRelationAggregateInput>;
  eventEndTime?: InputMaybe<SortOrderInput>;
  eventGroups?: InputMaybe<EventGroupOrderByRelationAggregateInput>;
  eventStartTime?: InputMaybe<SortOrderInput>;
  externalNftChain?: InputMaybe<SortOrderInput>;
  externalNftContractAddress?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  gallery?: InputMaybe<SortOrderInput>;
  hasLocation?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalNft?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  marketingLocation?: InputMaybe<MarketingLocationOrderByRelationAggregateInput>;
  maxOrderPerUser?: InputMaybe<SortOrderInput>;
  maxQuantity?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  orderedProducts?: InputMaybe<OrderedProductOrderByRelationAggregateInput>;
  payWithUSD?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  productType?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  quantitySold?: InputMaybe<SortOrderInput>;
  royaltyBps?: InputMaybe<SortOrderInput>;
  royaltyFee?: InputMaybe<SortOrderInput>;
  saleEnabled?: InputMaybe<SortOrderInput>;
  salePrice?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  speakers?: InputMaybe<SpeakerOrderByRelationAggregateInput>;
  startDate?: InputMaybe<SortOrderInput>;
  startTime?: InputMaybe<SortOrderInput>;
  telegramApiToken?: InputMaybe<SortOrderInput>;
  telegramBotId?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  useCommission?: InputMaybe<SortOrderInput>;
  useExternalNft?: InputMaybe<SortOrderInput>;
  useMultipleDays?: InputMaybe<SortOrderInput>;
  useNft?: InputMaybe<SortOrderInput>;
  usePrice?: InputMaybe<SortOrderInput>;
  useQuantity?: InputMaybe<SortOrderInput>;
  useRoyalty?: InputMaybe<SortOrderInput>;
  useStartTime?: InputMaybe<SortOrderInput>;
  useUsd?: InputMaybe<SortOrderInput>;
  useVariations?: InputMaybe<SortOrderInput>;
  variationOptions?: InputMaybe<SortOrderInput>;
  variations?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type EventRelationFilter = {
  is?: InputMaybe<EventWhereInput>;
  isNot?: InputMaybe<EventWhereInput>;
};

export enum EventScalarFieldEnum {
  Active = 'active',
  Chain = 'chain',
  CommissionFee = 'commissionFee',
  Content = 'content',
  ContractAddress = 'contractAddress',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EndDate = 'endDate',
  EndTime = 'endTime',
  EventEndTime = 'eventEndTime',
  EventStartTime = 'eventStartTime',
  ExternalNftChain = 'externalNftChain',
  ExternalNftContractAddress = 'externalNftContractAddress',
  ExternalUrl = 'externalUrl',
  Gallery = 'gallery',
  HasLocation = 'hasLocation',
  Id = 'id',
  ImageObj = 'imageObj',
  IsExternalNft = 'isExternalNft',
  LocationAddress = 'locationAddress',
  LocationLat = 'locationLat',
  LocationLng = 'locationLng',
  MaxOrderPerUser = 'maxOrderPerUser',
  MaxQuantity = 'maxQuantity',
  Name = 'name',
  PayWithUsd = 'payWithUSD',
  Price = 'price',
  ProductType = 'productType',
  Quantity = 'quantity',
  QuantitySold = 'quantitySold',
  RoyaltyBps = 'royaltyBps',
  RoyaltyFee = 'royaltyFee',
  SaleEnabled = 'saleEnabled',
  SalePrice = 'salePrice',
  Slug = 'slug',
  StartDate = 'startDate',
  StartTime = 'startTime',
  TelegramApiToken = 'telegramApiToken',
  TelegramBotId = 'telegramBotId',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  UseCommission = 'useCommission',
  UseExternalNft = 'useExternalNft',
  UseMultipleDays = 'useMultipleDays',
  UseNft = 'useNft',
  UsePrice = 'usePrice',
  UseQuantity = 'useQuantity',
  UseRoyalty = 'useRoyalty',
  UseStartTime = 'useStartTime',
  UseUsd = 'useUsd',
  UseVariations = 'useVariations',
  VariationOptions = 'variationOptions',
  Variations = 'variations',
  WebsiteId = 'websiteId'
}

export type EventScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  chain?: InputMaybe<EnumChainNullableFilter>;
  commissionFee?: InputMaybe<FloatNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  contractAddress?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  endDate?: InputMaybe<DateTimeNullableFilter>;
  endTime?: InputMaybe<DateTimeNullableFilter>;
  eventEndTime?: InputMaybe<DateTimeNullableFilter>;
  eventStartTime?: InputMaybe<DateTimeNullableFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  gallery?: InputMaybe<JsonNullableFilter>;
  hasLocation?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalNft?: InputMaybe<BoolNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  maxOrderPerUser?: InputMaybe<IntNullableFilter>;
  maxQuantity?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  payWithUSD?: InputMaybe<BoolNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  quantitySold?: InputMaybe<IntNullableFilter>;
  royaltyBps?: InputMaybe<FloatNullableFilter>;
  royaltyFee?: InputMaybe<IntNullableFilter>;
  saleEnabled?: InputMaybe<BoolNullableFilter>;
  salePrice?: InputMaybe<FloatNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  startDate?: InputMaybe<DateTimeNullableFilter>;
  startTime?: InputMaybe<DateTimeNullableFilter>;
  telegramApiToken?: InputMaybe<StringNullableFilter>;
  telegramBotId?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  useCommission?: InputMaybe<BoolNullableFilter>;
  useExternalNft?: InputMaybe<BoolNullableFilter>;
  useMultipleDays?: InputMaybe<BoolNullableFilter>;
  useNft?: InputMaybe<BoolNullableFilter>;
  usePrice?: InputMaybe<BoolNullableFilter>;
  useQuantity?: InputMaybe<BoolNullableFilter>;
  useRoyalty?: InputMaybe<BoolNullableFilter>;
  useStartTime?: InputMaybe<BoolNullableFilter>;
  useUsd?: InputMaybe<BoolNullableFilter>;
  useVariations?: InputMaybe<BoolNullableFilter>;
  variationOptions?: InputMaybe<JsonNullableFilter>;
  variations?: InputMaybe<JsonNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EventScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<EventScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  chain?: InputMaybe<EnumChainNullableWithAggregatesFilter>;
  commissionFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  contractAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  endDate?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  endTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  eventEndTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  eventStartTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableWithAggregatesFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  gallery?: InputMaybe<JsonNullableWithAggregatesFilter>;
  hasLocation?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  isExternalNft?: InputMaybe<BoolNullableWithAggregatesFilter>;
  locationAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  locationLat?: InputMaybe<FloatNullableWithAggregatesFilter>;
  locationLng?: InputMaybe<FloatNullableWithAggregatesFilter>;
  maxOrderPerUser?: InputMaybe<IntNullableWithAggregatesFilter>;
  maxQuantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  payWithUSD?: InputMaybe<BoolNullableWithAggregatesFilter>;
  price?: InputMaybe<FloatNullableWithAggregatesFilter>;
  productType?: InputMaybe<EnumProductTypeNullableWithAggregatesFilter>;
  quantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  quantitySold?: InputMaybe<IntNullableWithAggregatesFilter>;
  royaltyBps?: InputMaybe<FloatNullableWithAggregatesFilter>;
  royaltyFee?: InputMaybe<IntNullableWithAggregatesFilter>;
  saleEnabled?: InputMaybe<BoolNullableWithAggregatesFilter>;
  salePrice?: InputMaybe<FloatNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  startDate?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  startTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  telegramApiToken?: InputMaybe<StringNullableWithAggregatesFilter>;
  telegramBotId?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  useCommission?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useExternalNft?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useMultipleDays?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useNft?: InputMaybe<BoolNullableWithAggregatesFilter>;
  usePrice?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useQuantity?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useRoyalty?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useStartTime?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useUsd?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useVariations?: InputMaybe<BoolNullableWithAggregatesFilter>;
  variationOptions?: InputMaybe<JsonNullableWithAggregatesFilter>;
  variations?: InputMaybe<JsonNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EventSumAggregateOutputType = {
  __typename?: 'EventSumAggregateOutputType';
  commissionFee?: Maybe<Scalars['Float']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxOrderPerUser?: Maybe<Scalars['Int']>;
  maxQuantity?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyBps?: Maybe<Scalars['Float']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  salePrice?: Maybe<Scalars['Float']>;
};

export type EventSumOrderByAggregateInput = {
  commissionFee?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxOrderPerUser?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyBps?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
};

export type EventUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateNestedManyWithoutCouponsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutCouponsInput>>>;
};

export type EventUncheckedCreateNestedManyWithoutEventCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventCollectionsInput>>>;
};

export type EventUncheckedCreateNestedManyWithoutEventGroupsInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventGroupsInput>>>;
};

export type EventUncheckedCreateNestedManyWithoutMarketingLocationInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutMarketingLocationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutMarketingLocationInput>>>;
};

export type EventUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCreateManyWebsiteInputEnvelope>;
};

export type EventUncheckedCreateWithoutAgendaInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutEventCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutEventGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutMarketingLocationInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutSpeakersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type EventUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  agenda?: InputMaybe<AgendaUncheckedCreateNestedManyWithoutEventInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutEventInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutEventsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutEventsInput>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutEventsInput>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutEventsInput>;
  maxOrderPerUser?: InputMaybe<Scalars['Int']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutEventInput>;
  payWithUSD?: InputMaybe<Scalars['Boolean']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyBps?: InputMaybe<Scalars['Float']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  saleEnabled?: InputMaybe<Scalars['Boolean']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  speakers?: InputMaybe<SpeakerUncheckedCreateNestedManyWithoutEventInput>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useMultipleDays?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  usePrice?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type EventUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateManyWithoutCouponsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutCouponsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutCouponsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutCouponsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutCouponsInput>>>;
};

export type EventUncheckedUpdateManyWithoutEventCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutEventCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutEventCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutEventCollectionsInput>>>;
};

export type EventUncheckedUpdateManyWithoutEventGroupsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventGroupsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutEventGroupsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutEventGroupsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutEventGroupsInput>>>;
};

export type EventUncheckedUpdateManyWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateManyWithoutMarketingLocationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutMarketingLocationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutMarketingLocationInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutMarketingLocationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutMarketingLocationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutMarketingLocationInput>>>;
};

export type EventUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type EventUncheckedUpdateWithoutAgendaInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutEventCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutEventGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutMarketingLocationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutSpeakersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUncheckedUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUncheckedUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type EventUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type EventUpdateManyWithWhereWithoutCouponsInput = {
  data: EventUncheckedUpdateManyWithoutEventsInput;
  where: EventScalarWhereInput;
};

export type EventUpdateManyWithWhereWithoutEventCollectionsInput = {
  data: EventUncheckedUpdateManyWithoutEventsInput;
  where: EventScalarWhereInput;
};

export type EventUpdateManyWithWhereWithoutEventGroupsInput = {
  data: EventUncheckedUpdateManyWithoutEventsInput;
  where: EventScalarWhereInput;
};

export type EventUpdateManyWithWhereWithoutMarketingLocationInput = {
  data: EventUncheckedUpdateManyWithoutEventsInput;
  where: EventScalarWhereInput;
};

export type EventUpdateManyWithWhereWithoutWebsiteInput = {
  data: EventUncheckedUpdateManyWithoutEventsInput;
  where: EventScalarWhereInput;
};

export type EventUpdateManyWithoutCouponsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutCouponsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutCouponsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutCouponsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutCouponsInput>>>;
};

export type EventUpdateManyWithoutEventCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutEventCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutEventCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutEventCollectionsInput>>>;
};

export type EventUpdateManyWithoutEventGroupsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutEventGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutEventGroupsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutEventGroupsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutEventGroupsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutEventGroupsInput>>>;
};

export type EventUpdateManyWithoutMarketingLocationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutMarketingLocationInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutMarketingLocationInput>>>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutMarketingLocationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutMarketingLocationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutMarketingLocationInput>>>;
};

export type EventUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EventCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<EventCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<EventCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EventScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EventWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EventUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EventUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EventUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type EventUpdateOneWithoutAgendaNestedInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutAgendaInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutAgendaInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EventUncheckedUpdateWithoutAgendaInput>;
  upsert?: InputMaybe<EventUpsertWithoutAgendaInput>;
};

export type EventUpdateOneWithoutAttachmentsNestedInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutAttachmentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EventUncheckedUpdateWithoutAttachmentsInput>;
  upsert?: InputMaybe<EventUpsertWithoutAttachmentsInput>;
};

export type EventUpdateOneWithoutOrderedProductsNestedInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutOrderedProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EventUncheckedUpdateWithoutOrderedProductsInput>;
  upsert?: InputMaybe<EventUpsertWithoutOrderedProductsInput>;
};

export type EventUpdateOneWithoutSpeakersNestedInput = {
  connect?: InputMaybe<EventWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventCreateOrConnectWithoutSpeakersInput>;
  create?: InputMaybe<EventUncheckedCreateWithoutSpeakersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EventUncheckedUpdateWithoutSpeakersInput>;
  upsert?: InputMaybe<EventUpsertWithoutSpeakersInput>;
};

export type EventUpdateWithWhereUniqueWithoutCouponsInput = {
  data: EventUncheckedUpdateWithoutCouponsInput;
  where: EventWhereUniqueInput;
};

export type EventUpdateWithWhereUniqueWithoutEventCollectionsInput = {
  data: EventUncheckedUpdateWithoutEventCollectionsInput;
  where: EventWhereUniqueInput;
};

export type EventUpdateWithWhereUniqueWithoutEventGroupsInput = {
  data: EventUncheckedUpdateWithoutEventGroupsInput;
  where: EventWhereUniqueInput;
};

export type EventUpdateWithWhereUniqueWithoutMarketingLocationInput = {
  data: EventUncheckedUpdateWithoutMarketingLocationInput;
  where: EventWhereUniqueInput;
};

export type EventUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: EventUncheckedUpdateWithoutWebsiteInput;
  where: EventWhereUniqueInput;
};

export type EventUpdateWithoutAgendaInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutEventCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutEventGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutMarketingLocationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutSpeakersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutEventsNestedInput>;
};

export type EventUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  agenda?: InputMaybe<AgendaUpdateManyWithoutEventNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutEventNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutEventsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutEventsNestedInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutEventsNestedInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocation?: InputMaybe<MarketingLocationUpdateManyWithoutEventsNestedInput>;
  maxOrderPerUser?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutEventNestedInput>;
  payWithUSD?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyBps?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  saleEnabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  speakers?: InputMaybe<SpeakerUpdateManyWithoutEventNestedInput>;
  startDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useMultipleDays?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  usePrice?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type EventUpsertWithWhereUniqueWithoutCouponsInput = {
  create: EventUncheckedCreateWithoutCouponsInput;
  update: EventUncheckedUpdateWithoutCouponsInput;
  where: EventWhereUniqueInput;
};

export type EventUpsertWithWhereUniqueWithoutEventCollectionsInput = {
  create: EventUncheckedCreateWithoutEventCollectionsInput;
  update: EventUncheckedUpdateWithoutEventCollectionsInput;
  where: EventWhereUniqueInput;
};

export type EventUpsertWithWhereUniqueWithoutEventGroupsInput = {
  create: EventUncheckedCreateWithoutEventGroupsInput;
  update: EventUncheckedUpdateWithoutEventGroupsInput;
  where: EventWhereUniqueInput;
};

export type EventUpsertWithWhereUniqueWithoutMarketingLocationInput = {
  create: EventUncheckedCreateWithoutMarketingLocationInput;
  update: EventUncheckedUpdateWithoutMarketingLocationInput;
  where: EventWhereUniqueInput;
};

export type EventUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: EventUncheckedCreateWithoutWebsiteInput;
  update: EventUncheckedUpdateWithoutWebsiteInput;
  where: EventWhereUniqueInput;
};

export type EventUpsertWithoutAgendaInput = {
  create: EventUncheckedCreateWithoutAgendaInput;
  update: EventUncheckedUpdateWithoutAgendaInput;
};

export type EventUpsertWithoutAttachmentsInput = {
  create: EventUncheckedCreateWithoutAttachmentsInput;
  update: EventUncheckedUpdateWithoutAttachmentsInput;
};

export type EventUpsertWithoutOrderedProductsInput = {
  create: EventUncheckedCreateWithoutOrderedProductsInput;
  update: EventUncheckedUpdateWithoutOrderedProductsInput;
};

export type EventUpsertWithoutSpeakersInput = {
  create: EventUncheckedCreateWithoutSpeakersInput;
  update: EventUncheckedUpdateWithoutSpeakersInput;
};

export type EventWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<EventWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<EventWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EventWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  agenda?: InputMaybe<AgendaListRelationFilter>;
  attachments?: InputMaybe<AttachmentListRelationFilter>;
  chain?: InputMaybe<EnumChainNullableFilter>;
  commissionFee?: InputMaybe<FloatNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  contractAddress?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<CouponListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  endDate?: InputMaybe<DateTimeNullableFilter>;
  endTime?: InputMaybe<DateTimeNullableFilter>;
  eventCollections?: InputMaybe<EventCollectionListRelationFilter>;
  eventEndTime?: InputMaybe<DateTimeNullableFilter>;
  eventGroups?: InputMaybe<EventGroupListRelationFilter>;
  eventStartTime?: InputMaybe<DateTimeNullableFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  gallery?: InputMaybe<JsonNullableFilter>;
  hasLocation?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalNft?: InputMaybe<BoolNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  marketingLocation?: InputMaybe<MarketingLocationListRelationFilter>;
  maxOrderPerUser?: InputMaybe<IntNullableFilter>;
  maxQuantity?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orderedProducts?: InputMaybe<OrderedProductListRelationFilter>;
  payWithUSD?: InputMaybe<BoolNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  quantitySold?: InputMaybe<IntNullableFilter>;
  royaltyBps?: InputMaybe<FloatNullableFilter>;
  royaltyFee?: InputMaybe<IntNullableFilter>;
  saleEnabled?: InputMaybe<BoolNullableFilter>;
  salePrice?: InputMaybe<FloatNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  speakers?: InputMaybe<SpeakerListRelationFilter>;
  startDate?: InputMaybe<DateTimeNullableFilter>;
  startTime?: InputMaybe<DateTimeNullableFilter>;
  telegramApiToken?: InputMaybe<StringNullableFilter>;
  telegramBotId?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  useCommission?: InputMaybe<BoolNullableFilter>;
  useExternalNft?: InputMaybe<BoolNullableFilter>;
  useMultipleDays?: InputMaybe<BoolNullableFilter>;
  useNft?: InputMaybe<BoolNullableFilter>;
  usePrice?: InputMaybe<BoolNullableFilter>;
  useQuantity?: InputMaybe<BoolNullableFilter>;
  useRoyalty?: InputMaybe<BoolNullableFilter>;
  useStartTime?: InputMaybe<BoolNullableFilter>;
  useUsd?: InputMaybe<BoolNullableFilter>;
  useVariations?: InputMaybe<BoolNullableFilter>;
  variationOptions?: InputMaybe<JsonNullableFilter>;
  variations?: InputMaybe<JsonNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EventWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type Field = {
  __typename?: 'Field';
  create: Scalars['Boolean'];
  editor: Scalars['Boolean'];
  filter: Scalars['Boolean'];
  id: Scalars['String'];
  isId: Scalars['Boolean'];
  kind: KindEnum;
  list: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  read: Scalars['Boolean'];
  relationField?: Maybe<Scalars['Boolean']>;
  required: Scalars['Boolean'];
  sort: Scalars['Boolean'];
  title: Scalars['String'];
  type: Scalars['String'];
  unique: Scalars['Boolean'];
  update: Scalars['Boolean'];
  upload: Scalars['Boolean'];
};

export type FloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type FloatNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedFloatNullableFilter>;
  _min?: InputMaybe<NestedFloatNullableFilter>;
  _sum?: InputMaybe<NestedFloatNullableFilter>;
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type IntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type IntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedIntNullableFilter>;
  _min?: InputMaybe<NestedIntNullableFilter>;
  _sum?: InputMaybe<NestedIntNullableFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export enum JsonNullValueFilter {
  AnyNull = 'AnyNull',
  DbNull = 'DbNull',
  JsonNull = 'JsonNull'
}

export type JsonNullableFilter = {
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type JsonNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedJsonNullableFilter>;
  _min?: InputMaybe<NestedJsonNullableFilter>;
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export enum KindEnum {
  Enum = 'enum',
  Object = 'object',
  Scalar = 'scalar'
}

export enum LanguageCode {
  En = 'en',
  Zh = 'zh'
}

export type LoginToken = {
  __typename?: 'LoginToken';
  approved?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  domain?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  ip?: Maybe<Scalars['String']>;
  secret?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  user?: Maybe<User>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type LoginTokenCountAggregateOutputType = {
  __typename?: 'LoginTokenCountAggregateOutputType';
  _all: Scalars['Int'];
  approved: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  domain: Scalars['Int'];
  email: Scalars['Int'];
  expires: Scalars['Int'];
  geo: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  secret: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userAgent: Scalars['Int'];
  userAgentRaw: Scalars['Int'];
  userId: Scalars['Int'];
};

export type LoginTokenCountOrderByAggregateInput = {
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LoginTokenCreateInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  secret?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutLoginTokensInput>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
};

export type LoginTokenCreateManyInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  secret?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type LoginTokenCreateManyUserInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  secret?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
};

export type LoginTokenCreateManyUserInputEnvelope = {
  data: LoginTokenCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type LoginTokenCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
};

export type LoginTokenCreateOrConnectWithoutUserInput = {
  create: LoginTokenUncheckedCreateWithoutUserInput;
  where: LoginTokenWhereUniqueInput;
};

export type LoginTokenCreateWithoutUserInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  secret?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
};

export type LoginTokenListRelationFilter = {
  every?: InputMaybe<LoginTokenWhereInput>;
  none?: InputMaybe<LoginTokenWhereInput>;
  some?: InputMaybe<LoginTokenWhereInput>;
};

export type LoginTokenMaxAggregateOutputType = {
  __typename?: 'LoginTokenMaxAggregateOutputType';
  approved?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  domain?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  secret?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type LoginTokenMaxOrderByAggregateInput = {
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LoginTokenMinAggregateOutputType = {
  __typename?: 'LoginTokenMinAggregateOutputType';
  approved?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  domain?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  secret?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type LoginTokenMinOrderByAggregateInput = {
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LoginTokenOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type LoginTokenOrderByWithAggregationInput = {
  _count?: InputMaybe<LoginTokenCountOrderByAggregateInput>;
  _max?: InputMaybe<LoginTokenMaxOrderByAggregateInput>;
  _min?: InputMaybe<LoginTokenMinOrderByAggregateInput>;
  approved?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  domain?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  expires?: InputMaybe<SortOrderInput>;
  geo?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  secret?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  userAgent?: InputMaybe<SortOrderInput>;
  userAgentRaw?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
};

export type LoginTokenOrderByWithRelationInput = {
  approved?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  domain?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  expires?: InputMaybe<SortOrderInput>;
  geo?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  secret?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userAgent?: InputMaybe<SortOrderInput>;
  userAgentRaw?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
};

export enum LoginTokenScalarFieldEnum {
  Approved = 'approved',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Domain = 'domain',
  Email = 'email',
  Expires = 'expires',
  Geo = 'geo',
  Id = 'id',
  Ip = 'ip',
  Secret = 'secret',
  UpdatedAt = 'updatedAt',
  UserAgent = 'userAgent',
  UserAgentRaw = 'userAgentRaw',
  UserId = 'userId'
}

export type LoginTokenScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  approved?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  domain?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  expires?: InputMaybe<DateTimeNullableFilter>;
  geo?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  secret?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  userAgent?: InputMaybe<StringNullableFilter>;
  userAgentRaw?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type LoginTokenScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereWithAggregatesInput>>>;
  approved?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  domain?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  expires?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  geo?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  secret?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  userAgent?: InputMaybe<StringNullableWithAggregatesFilter>;
  userAgentRaw?: InputMaybe<StringNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type LoginTokenUncheckedCreateInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  secret?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type LoginTokenUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
};

export type LoginTokenUncheckedCreateWithoutUserInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  secret?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
};

export type LoginTokenUncheckedUpdateInput = {
  approved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LoginTokenUncheckedUpdateManyInput = {
  approved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LoginTokenUncheckedUpdateManyWithoutLoginTokensInput = {
  approved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LoginTokenUncheckedUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LoginTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LoginTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LoginTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type LoginTokenUncheckedUpdateWithoutUserInput = {
  approved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LoginTokenUpdateInput = {
  approved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutLoginTokensNestedInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LoginTokenUpdateManyMutationInput = {
  approved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LoginTokenUpdateManyWithWhereWithoutUserInput = {
  data: LoginTokenUncheckedUpdateManyWithoutLoginTokensInput;
  where: LoginTokenScalarWhereInput;
};

export type LoginTokenUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LoginTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LoginTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LoginTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type LoginTokenUpdateWithWhereUniqueWithoutUserInput = {
  data: LoginTokenUncheckedUpdateWithoutUserInput;
  where: LoginTokenWhereUniqueInput;
};

export type LoginTokenUpdateWithoutUserInput = {
  approved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LoginTokenUpsertWithWhereUniqueWithoutUserInput = {
  create: LoginTokenUncheckedCreateWithoutUserInput;
  update: LoginTokenUncheckedUpdateWithoutUserInput;
  where: LoginTokenWhereUniqueInput;
};

export type LoginTokenWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<LoginTokenWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<LoginTokenWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LoginTokenWhereInput>>>;
  approved?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  domain?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  expires?: InputMaybe<DateTimeNullableFilter>;
  geo?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  secret?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userAgent?: InputMaybe<StringNullableFilter>;
  userAgentRaw?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type LoginTokenWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type MarketingLocation = {
  __typename?: 'MarketingLocation';
  _count: MarketingLocationCountOutputType;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  events: Array<Event>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  products: Array<Product>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type MarketingLocationEventsArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<EventOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};


export type MarketingLocationProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type MarketingLocationAvgAggregateOutputType = {
  __typename?: 'MarketingLocationAvgAggregateOutputType';
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
};

export type MarketingLocationAvgOrderByAggregateInput = {
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
};

export type MarketingLocationCountAggregateOutputType = {
  __typename?: 'MarketingLocationCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  locationAddress: Scalars['Int'];
  locationLat: Scalars['Int'];
  locationLng: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type MarketingLocationCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type MarketingLocationCountOutputType = {
  __typename?: 'MarketingLocationCountOutputType';
  events: Scalars['Int'];
  products: Scalars['Int'];
};

export type MarketingLocationCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutMarketingLocationInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutMarketingLocationsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutMarketingLocationsInput>;
};

export type MarketingLocationCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type MarketingLocationCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type MarketingLocationCreateManyWebsiteInputEnvelope = {
  data: MarketingLocationCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type MarketingLocationCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutEventsInput>>>;
};

export type MarketingLocationCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutProductsInput>>>;
};

export type MarketingLocationCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<MarketingLocationCreateManyWebsiteInputEnvelope>;
};

export type MarketingLocationCreateOrConnectWithoutEventsInput = {
  create: MarketingLocationUncheckedCreateWithoutEventsInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationCreateOrConnectWithoutProductsInput = {
  create: MarketingLocationUncheckedCreateWithoutProductsInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationCreateOrConnectWithoutWebsiteInput = {
  create: MarketingLocationUncheckedCreateWithoutWebsiteInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationCreateWithoutEventsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutMarketingLocationsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutMarketingLocationsInput>;
};

export type MarketingLocationCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutMarketingLocationInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutMarketingLocationsInput>;
};

export type MarketingLocationCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventCreateNestedManyWithoutMarketingLocationInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutMarketingLocationsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type MarketingLocationListRelationFilter = {
  every?: InputMaybe<MarketingLocationWhereInput>;
  none?: InputMaybe<MarketingLocationWhereInput>;
  some?: InputMaybe<MarketingLocationWhereInput>;
};

export type MarketingLocationMaxAggregateOutputType = {
  __typename?: 'MarketingLocationMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type MarketingLocationMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type MarketingLocationMinAggregateOutputType = {
  __typename?: 'MarketingLocationMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type MarketingLocationMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type MarketingLocationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type MarketingLocationOrderByWithAggregationInput = {
  _avg?: InputMaybe<MarketingLocationAvgOrderByAggregateInput>;
  _count?: InputMaybe<MarketingLocationCountOrderByAggregateInput>;
  _max?: InputMaybe<MarketingLocationMaxOrderByAggregateInput>;
  _min?: InputMaybe<MarketingLocationMinOrderByAggregateInput>;
  _sum?: InputMaybe<MarketingLocationSumOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type MarketingLocationOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  events?: InputMaybe<EventOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum MarketingLocationScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  LocationAddress = 'locationAddress',
  LocationLat = 'locationLat',
  LocationLng = 'locationLng',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type MarketingLocationScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type MarketingLocationScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  locationAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  locationLat?: InputMaybe<FloatNullableWithAggregatesFilter>;
  locationLng?: InputMaybe<FloatNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type MarketingLocationSumAggregateOutputType = {
  __typename?: 'MarketingLocationSumAggregateOutputType';
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
};

export type MarketingLocationSumOrderByAggregateInput = {
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
};

export type MarketingLocationUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutMarketingLocationInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutMarketingLocationsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type MarketingLocationUncheckedCreateNestedManyWithoutEventsInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutEventsInput>>>;
};

export type MarketingLocationUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutProductsInput>>>;
};

export type MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<MarketingLocationCreateManyWebsiteInputEnvelope>;
};

export type MarketingLocationUncheckedCreateWithoutEventsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutMarketingLocationsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type MarketingLocationUncheckedCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutMarketingLocationInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type MarketingLocationUncheckedCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutMarketingLocationInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutMarketingLocationsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type MarketingLocationUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutMarketingLocationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutMarketingLocationsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MarketingLocationUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MarketingLocationUncheckedUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<MarketingLocationUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type MarketingLocationUncheckedUpdateManyWithoutMarketingLocationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MarketingLocationUncheckedUpdateManyWithoutMarketingLocationsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<MarketingLocationUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<MarketingLocationCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<MarketingLocationUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type MarketingLocationUncheckedUpdateWithoutEventsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutMarketingLocationsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MarketingLocationUncheckedUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutMarketingLocationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MarketingLocationUncheckedUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutMarketingLocationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutMarketingLocationsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type MarketingLocationUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutMarketingLocationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutMarketingLocationsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutMarketingLocationsNestedInput>;
};

export type MarketingLocationUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type MarketingLocationUpdateManyWithWhereWithoutEventsInput = {
  data: MarketingLocationUncheckedUpdateManyWithoutMarketingLocationInput;
  where: MarketingLocationScalarWhereInput;
};

export type MarketingLocationUpdateManyWithWhereWithoutProductsInput = {
  data: MarketingLocationUncheckedUpdateManyWithoutMarketingLocationsInput;
  where: MarketingLocationScalarWhereInput;
};

export type MarketingLocationUpdateManyWithWhereWithoutWebsiteInput = {
  data: MarketingLocationUncheckedUpdateManyWithoutMarketingLocationsInput;
  where: MarketingLocationScalarWhereInput;
};

export type MarketingLocationUpdateManyWithoutEventsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutEventsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutEventsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateWithWhereUniqueWithoutEventsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateManyWithWhereWithoutEventsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<MarketingLocationUpsertWithWhereUniqueWithoutEventsInput>>>;
};

export type MarketingLocationUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<MarketingLocationUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type MarketingLocationUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<MarketingLocationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<MarketingLocationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<MarketingLocationCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<MarketingLocationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<MarketingLocationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<MarketingLocationUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<MarketingLocationUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type MarketingLocationUpdateWithWhereUniqueWithoutEventsInput = {
  data: MarketingLocationUncheckedUpdateWithoutEventsInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationUpdateWithWhereUniqueWithoutProductsInput = {
  data: MarketingLocationUncheckedUpdateWithoutProductsInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: MarketingLocationUncheckedUpdateWithoutWebsiteInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationUpdateWithoutEventsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutMarketingLocationsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutMarketingLocationsNestedInput>;
};

export type MarketingLocationUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutMarketingLocationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutMarketingLocationsNestedInput>;
};

export type MarketingLocationUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  events?: InputMaybe<EventUpdateManyWithoutMarketingLocationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutMarketingLocationsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type MarketingLocationUpsertWithWhereUniqueWithoutEventsInput = {
  create: MarketingLocationUncheckedCreateWithoutEventsInput;
  update: MarketingLocationUncheckedUpdateWithoutEventsInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationUpsertWithWhereUniqueWithoutProductsInput = {
  create: MarketingLocationUncheckedCreateWithoutProductsInput;
  update: MarketingLocationUncheckedUpdateWithoutProductsInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: MarketingLocationUncheckedCreateWithoutWebsiteInput;
  update: MarketingLocationUncheckedUpdateWithoutWebsiteInput;
  where: MarketingLocationWhereUniqueInput;
};

export type MarketingLocationWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<MarketingLocationWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<MarketingLocationWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<MarketingLocationWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  events?: InputMaybe<EventListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type MarketingLocationWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type Model = {
  __typename?: 'Model';
  create: Scalars['Boolean'];
  delete: Scalars['Boolean'];
  displayFields: Array<Scalars['String']>;
  fields: Array<Field>;
  id: Scalars['String'];
  idField: Scalars['String'];
  name: Scalars['String'];
  update: Scalars['Boolean'];
};

export type Mutation = {
  __typename?: 'Mutation';
  addCollection?: Maybe<Scalars['Json']>;
  addResource?: Maybe<Scalars['Json']>;
  addTemplate?: Maybe<Scalars['Json']>;
  adminMintNft?: Maybe<Order>;
  createCheckoutSession?: Maybe<Scalars['Json']>;
  createOneAffiliate: Affiliate;
  createOneAgenda: Agenda;
  createOneAttachment: Attachment;
  createOneAttribute: Attribute;
  createOneAudio: Audio;
  createOneAudioCollection: AudioCollection;
  createOneAudioView: AudioView;
  createOneCoupon: Coupon;
  createOneCustomer: Customer;
  createOneEvent: Event;
  createOneEventCollection: EventCollection;
  createOneEventGroup: EventGroup;
  createOneLoginToken: LoginToken;
  createOneMarketingLocation: MarketingLocation;
  createOneNotification: Notification;
  createOneOrder: Order;
  createOneOrderedProduct: OrderedProduct;
  createOneOrganization: Organization;
  createOnePage: Page;
  createOnePageCollection: PageCollection;
  createOnePageView: PageView;
  createOneProduct: Product;
  createOneProductCollection: ProductCollection;
  createOneProductGroup: ProductGroup;
  createOneRefreshToken: RefreshToken;
  createOneRequest: Request;
  createOneRequestClick: RequestClick;
  createOneSlugCounter: SlugCounter;
  createOneSpeaker: Speaker;
  createOneUser: User;
  createOneVideo: Video;
  createOneVideoCollection: VideoCollection;
  createOneVideoView: VideoView;
  createOneWebsite: Website;
  createOneWebsiteGroup: WebsiteGroup;
  deleteManyAffiliate: BatchPayload;
  deleteManyAgenda: BatchPayload;
  deleteManyAttachment: BatchPayload;
  deleteManyAttribute: BatchPayload;
  deleteManyAudio: BatchPayload;
  deleteManyAudioCollection: BatchPayload;
  deleteManyAudioView: BatchPayload;
  deleteManyCoupon: BatchPayload;
  deleteManyCustomer: BatchPayload;
  deleteManyEvent: BatchPayload;
  deleteManyEventCollection: BatchPayload;
  deleteManyEventGroup: BatchPayload;
  deleteManyLoginToken: BatchPayload;
  deleteManyMarketingLocation: BatchPayload;
  deleteManyNotification: BatchPayload;
  deleteManyOrder: BatchPayload;
  deleteManyOrderedProduct: BatchPayload;
  deleteManyOrganization: BatchPayload;
  deleteManyPage: BatchPayload;
  deleteManyPageCollection: BatchPayload;
  deleteManyPageView: BatchPayload;
  deleteManyProduct: BatchPayload;
  deleteManyProductCollection: BatchPayload;
  deleteManyProductGroup: BatchPayload;
  deleteManyRefreshToken: BatchPayload;
  deleteManyRequest: BatchPayload;
  deleteManyRequestClick: BatchPayload;
  deleteManySlugCounter: BatchPayload;
  deleteManySpeaker: BatchPayload;
  deleteManyUser: BatchPayload;
  deleteManyVideo: BatchPayload;
  deleteManyVideoCollection: BatchPayload;
  deleteManyVideoView: BatchPayload;
  deleteManyWebsite: BatchPayload;
  deleteManyWebsiteGroup: BatchPayload;
  deleteOneAffiliate?: Maybe<Affiliate>;
  deleteOneAgenda?: Maybe<Agenda>;
  deleteOneAttachment?: Maybe<Attachment>;
  deleteOneAttribute?: Maybe<Attribute>;
  deleteOneAudio?: Maybe<Audio>;
  deleteOneAudioCollection?: Maybe<AudioCollection>;
  deleteOneAudioView?: Maybe<AudioView>;
  deleteOneCoupon?: Maybe<Coupon>;
  deleteOneCustomer?: Maybe<Customer>;
  deleteOneEvent?: Maybe<Event>;
  deleteOneEventCollection?: Maybe<EventCollection>;
  deleteOneEventGroup?: Maybe<EventGroup>;
  deleteOneLoginToken?: Maybe<LoginToken>;
  deleteOneMarketingLocation?: Maybe<MarketingLocation>;
  deleteOneNotification?: Maybe<Notification>;
  deleteOneOrder?: Maybe<Order>;
  deleteOneOrderedProduct?: Maybe<OrderedProduct>;
  deleteOneOrganization?: Maybe<Organization>;
  deleteOnePage?: Maybe<Page>;
  deleteOnePageCollection?: Maybe<PageCollection>;
  deleteOnePageView?: Maybe<PageView>;
  deleteOneProduct?: Maybe<Product>;
  deleteOneProductCollection?: Maybe<ProductCollection>;
  deleteOneProductGroup?: Maybe<ProductGroup>;
  deleteOneRefreshToken?: Maybe<RefreshToken>;
  deleteOneRequest?: Maybe<Request>;
  deleteOneRequestClick?: Maybe<RequestClick>;
  deleteOneSlugCounter?: Maybe<SlugCounter>;
  deleteOneSpeaker?: Maybe<Speaker>;
  deleteOneUser?: Maybe<User>;
  deleteOneVideo?: Maybe<Video>;
  deleteOneVideoCollection?: Maybe<VideoCollection>;
  deleteOneVideoView?: Maybe<VideoView>;
  deleteOneWebsite?: Maybe<Website>;
  deleteOneWebsiteGroup?: Maybe<WebsiteGroup>;
  enterAdmin?: Maybe<Scalars['Json']>;
  finishPurchase?: Maybe<Scalars['Json']>;
  getAnalytics?: Maybe<Scalars['Json']>;
  getMetadata?: Maybe<Scalars['Json']>;
  installTemplate?: Maybe<Website>;
  login?: Maybe<User>;
  logout?: Maybe<Scalars['Boolean']>;
  logoutAdmin?: Maybe<Scalars['Json']>;
  payProduct?: Maybe<Order>;
  preparePurchase?: Maybe<Scalars['Json']>;
  prepareRequest?: Maybe<Scalars['Json']>;
  prepareStripePurchase?: Maybe<Scalars['Json']>;
  serverMint?: Maybe<Scalars['Json']>;
  signUploadUrl?: Maybe<Scalars['String']>;
  signup?: Maybe<User>;
  stripeCheckout?: Maybe<Scalars['Json']>;
  updateAdminSettingsField?: Maybe<Field>;
  updateAdminSettingsModel?: Maybe<Model>;
  updateField: Field;
  updateManyAffiliate: BatchPayload;
  updateManyAgenda: BatchPayload;
  updateManyAttachment: BatchPayload;
  updateManyAttribute: BatchPayload;
  updateManyAudio: BatchPayload;
  updateManyAudioCollection: BatchPayload;
  updateManyAudioView: BatchPayload;
  updateManyCoupon: BatchPayload;
  updateManyCustomer: BatchPayload;
  updateManyEvent: BatchPayload;
  updateManyEventCollection: BatchPayload;
  updateManyEventGroup: BatchPayload;
  updateManyLoginToken: BatchPayload;
  updateManyMarketingLocation: BatchPayload;
  updateManyNotification: BatchPayload;
  updateManyOrder: BatchPayload;
  updateManyOrderedProduct: BatchPayload;
  updateManyOrganization: BatchPayload;
  updateManyPage: BatchPayload;
  updateManyPageCollection: BatchPayload;
  updateManyPageView: BatchPayload;
  updateManyProduct: BatchPayload;
  updateManyProductCollection: BatchPayload;
  updateManyProductGroup: BatchPayload;
  updateManyRefreshToken: BatchPayload;
  updateManyRequest: BatchPayload;
  updateManyRequestClick: BatchPayload;
  updateManySlugCounter: BatchPayload;
  updateManySpeaker: BatchPayload;
  updateManyUser: BatchPayload;
  updateManyVideo: BatchPayload;
  updateManyVideoCollection: BatchPayload;
  updateManyVideoView: BatchPayload;
  updateManyWebsite: BatchPayload;
  updateManyWebsiteGroup: BatchPayload;
  updateModel: Model;
  updateOneAffiliate: Affiliate;
  updateOneAgenda: Agenda;
  updateOneAttachment: Attachment;
  updateOneAttribute: Attribute;
  updateOneAudio: Audio;
  updateOneAudioCollection: AudioCollection;
  updateOneAudioView: AudioView;
  updateOneCoupon: Coupon;
  updateOneCustomer: Customer;
  updateOneEvent: Event;
  updateOneEventCollection: EventCollection;
  updateOneEventGroup: EventGroup;
  updateOneLoginToken: LoginToken;
  updateOneMarketingLocation: MarketingLocation;
  updateOneNotification: Notification;
  updateOneOrder: Order;
  updateOneOrderedProduct: OrderedProduct;
  updateOneOrganization: Organization;
  updateOnePage: Page;
  updateOnePageCollection: PageCollection;
  updateOnePageView: PageView;
  updateOneProduct: Product;
  updateOneProductCollection: ProductCollection;
  updateOneProductGroup: ProductGroup;
  updateOneRefreshToken: RefreshToken;
  updateOneRequest: Request;
  updateOneRequestClick: RequestClick;
  updateOneSlugCounter: SlugCounter;
  updateOneSpeaker: Speaker;
  updateOneUser: User;
  updateOneVideo: Video;
  updateOneVideoCollection: VideoCollection;
  updateOneVideoView: VideoView;
  updateOneWebsite: Website;
  updateOneWebsiteGroup: WebsiteGroup;
  updateOrder?: Maybe<Order>;
  updatePassword?: Maybe<Scalars['Boolean']>;
  upsertOneAffiliate: Affiliate;
  upsertOneAgenda: Agenda;
  upsertOneAttachment: Attachment;
  upsertOneAttribute: Attribute;
  upsertOneAudio: Audio;
  upsertOneAudioCollection: AudioCollection;
  upsertOneAudioView: AudioView;
  upsertOneCoupon: Coupon;
  upsertOneCustomer: Customer;
  upsertOneEvent: Event;
  upsertOneEventCollection: EventCollection;
  upsertOneEventGroup: EventGroup;
  upsertOneLoginToken: LoginToken;
  upsertOneMarketingLocation: MarketingLocation;
  upsertOneNotification: Notification;
  upsertOneOrder: Order;
  upsertOneOrderedProduct: OrderedProduct;
  upsertOneOrganization: Organization;
  upsertOnePage: Page;
  upsertOnePageCollection: PageCollection;
  upsertOnePageView: PageView;
  upsertOneProduct: Product;
  upsertOneProductCollection: ProductCollection;
  upsertOneProductGroup: ProductGroup;
  upsertOneRefreshToken: RefreshToken;
  upsertOneRequest: Request;
  upsertOneRequestClick: RequestClick;
  upsertOneSlugCounter: SlugCounter;
  upsertOneSpeaker: Speaker;
  upsertOneUser: User;
  upsertOneVideo: Video;
  upsertOneVideoCollection: VideoCollection;
  upsertOneVideoView: VideoView;
  upsertOneWebsite: Website;
  upsertOneWebsiteGroup: WebsiteGroup;
};


export type MutationAddCollectionArgs = {
  collectionId: Scalars['String'];
  currentJson: Scalars['String'];
};


export type MutationAddResourceArgs = {
  currentJson: Scalars['String'];
  items?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  resource: Scalars['String'];
};


export type MutationAddTemplateArgs = {
  currentJson: Scalars['String'];
  id: Scalars['String'];
};


export type MutationAdminMintNftArgs = {
  orderId: Scalars['String'];
};


export type MutationCreateCheckoutSessionArgs = {
  id: Scalars['String'];
  model: Scalars['String'];
  priceId: Scalars['String'];
};


export type MutationCreateOneAffiliateArgs = {
  data?: InputMaybe<AffiliateCreateInput>;
};


export type MutationCreateOneAgendaArgs = {
  data?: InputMaybe<AgendaCreateInput>;
};


export type MutationCreateOneAttachmentArgs = {
  data?: InputMaybe<AttachmentCreateInput>;
};


export type MutationCreateOneAttributeArgs = {
  data?: InputMaybe<AttributeCreateInput>;
};


export type MutationCreateOneAudioArgs = {
  data?: InputMaybe<AudioCreateInput>;
};


export type MutationCreateOneAudioCollectionArgs = {
  data?: InputMaybe<AudioCollectionCreateInput>;
};


export type MutationCreateOneAudioViewArgs = {
  data?: InputMaybe<AudioViewCreateInput>;
};


export type MutationCreateOneCouponArgs = {
  data?: InputMaybe<CouponCreateInput>;
};


export type MutationCreateOneCustomerArgs = {
  data?: InputMaybe<CustomerCreateInput>;
};


export type MutationCreateOneEventArgs = {
  data?: InputMaybe<EventCreateInput>;
};


export type MutationCreateOneEventCollectionArgs = {
  data?: InputMaybe<EventCollectionCreateInput>;
};


export type MutationCreateOneEventGroupArgs = {
  data?: InputMaybe<EventGroupCreateInput>;
};


export type MutationCreateOneLoginTokenArgs = {
  data?: InputMaybe<LoginTokenCreateInput>;
};


export type MutationCreateOneMarketingLocationArgs = {
  data?: InputMaybe<MarketingLocationCreateInput>;
};


export type MutationCreateOneNotificationArgs = {
  data?: InputMaybe<NotificationCreateInput>;
};


export type MutationCreateOneOrderArgs = {
  data?: InputMaybe<OrderCreateInput>;
};


export type MutationCreateOneOrderedProductArgs = {
  data?: InputMaybe<OrderedProductCreateInput>;
};


export type MutationCreateOneOrganizationArgs = {
  data?: InputMaybe<OrganizationCreateInput>;
};


export type MutationCreateOnePageArgs = {
  data?: InputMaybe<PageCreateInput>;
};


export type MutationCreateOnePageCollectionArgs = {
  data?: InputMaybe<PageCollectionCreateInput>;
};


export type MutationCreateOnePageViewArgs = {
  data?: InputMaybe<PageViewCreateInput>;
};


export type MutationCreateOneProductArgs = {
  data?: InputMaybe<ProductCreateInput>;
};


export type MutationCreateOneProductCollectionArgs = {
  data?: InputMaybe<ProductCollectionCreateInput>;
};


export type MutationCreateOneProductGroupArgs = {
  data?: InputMaybe<ProductGroupCreateInput>;
};


export type MutationCreateOneRefreshTokenArgs = {
  data: RefreshTokenCreateInput;
};


export type MutationCreateOneRequestArgs = {
  data?: InputMaybe<RequestCreateInput>;
};


export type MutationCreateOneRequestClickArgs = {
  data?: InputMaybe<RequestClickCreateInput>;
};


export type MutationCreateOneSlugCounterArgs = {
  data?: InputMaybe<SlugCounterCreateInput>;
};


export type MutationCreateOneSpeakerArgs = {
  data?: InputMaybe<SpeakerCreateInput>;
};


export type MutationCreateOneUserArgs = {
  data?: InputMaybe<UserCreateInput>;
};


export type MutationCreateOneVideoArgs = {
  data?: InputMaybe<VideoCreateInput>;
};


export type MutationCreateOneVideoCollectionArgs = {
  data?: InputMaybe<VideoCollectionCreateInput>;
};


export type MutationCreateOneVideoViewArgs = {
  data?: InputMaybe<VideoViewCreateInput>;
};


export type MutationCreateOneWebsiteArgs = {
  data?: InputMaybe<WebsiteCreateInput>;
};


export type MutationCreateOneWebsiteGroupArgs = {
  data?: InputMaybe<WebsiteGroupCreateInput>;
};


export type MutationDeleteManyAffiliateArgs = {
  where?: InputMaybe<AffiliateWhereInput>;
};


export type MutationDeleteManyAgendaArgs = {
  where?: InputMaybe<AgendaWhereInput>;
};


export type MutationDeleteManyAttachmentArgs = {
  where?: InputMaybe<AttachmentWhereInput>;
};


export type MutationDeleteManyAttributeArgs = {
  where?: InputMaybe<AttributeWhereInput>;
};


export type MutationDeleteManyAudioArgs = {
  where?: InputMaybe<AudioWhereInput>;
};


export type MutationDeleteManyAudioCollectionArgs = {
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type MutationDeleteManyAudioViewArgs = {
  where?: InputMaybe<AudioViewWhereInput>;
};


export type MutationDeleteManyCouponArgs = {
  where?: InputMaybe<CouponWhereInput>;
};


export type MutationDeleteManyCustomerArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type MutationDeleteManyEventArgs = {
  where?: InputMaybe<EventWhereInput>;
};


export type MutationDeleteManyEventCollectionArgs = {
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type MutationDeleteManyEventGroupArgs = {
  where?: InputMaybe<EventGroupWhereInput>;
};


export type MutationDeleteManyLoginTokenArgs = {
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type MutationDeleteManyMarketingLocationArgs = {
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type MutationDeleteManyNotificationArgs = {
  where?: InputMaybe<NotificationWhereInput>;
};


export type MutationDeleteManyOrderArgs = {
  where?: InputMaybe<OrderWhereInput>;
};


export type MutationDeleteManyOrderedProductArgs = {
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type MutationDeleteManyOrganizationArgs = {
  where?: InputMaybe<OrganizationWhereInput>;
};


export type MutationDeleteManyPageArgs = {
  where?: InputMaybe<PageWhereInput>;
};


export type MutationDeleteManyPageCollectionArgs = {
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type MutationDeleteManyPageViewArgs = {
  where?: InputMaybe<PageViewWhereInput>;
};


export type MutationDeleteManyProductArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type MutationDeleteManyProductCollectionArgs = {
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type MutationDeleteManyProductGroupArgs = {
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type MutationDeleteManyRefreshTokenArgs = {
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type MutationDeleteManyRequestArgs = {
  where?: InputMaybe<RequestWhereInput>;
};


export type MutationDeleteManyRequestClickArgs = {
  where?: InputMaybe<RequestClickWhereInput>;
};


export type MutationDeleteManySlugCounterArgs = {
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type MutationDeleteManySpeakerArgs = {
  where?: InputMaybe<SpeakerWhereInput>;
};


export type MutationDeleteManyUserArgs = {
  where?: InputMaybe<UserWhereInput>;
};


export type MutationDeleteManyVideoArgs = {
  where?: InputMaybe<VideoWhereInput>;
};


export type MutationDeleteManyVideoCollectionArgs = {
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type MutationDeleteManyVideoViewArgs = {
  where?: InputMaybe<VideoViewWhereInput>;
};


export type MutationDeleteManyWebsiteArgs = {
  where?: InputMaybe<WebsiteWhereInput>;
};


export type MutationDeleteManyWebsiteGroupArgs = {
  where?: InputMaybe<WebsiteGroupWhereInput>;
};


export type MutationDeleteOneAffiliateArgs = {
  where: AffiliateWhereUniqueInput;
};


export type MutationDeleteOneAgendaArgs = {
  where: AgendaWhereUniqueInput;
};


export type MutationDeleteOneAttachmentArgs = {
  where: AttachmentWhereUniqueInput;
};


export type MutationDeleteOneAttributeArgs = {
  where: AttributeWhereUniqueInput;
};


export type MutationDeleteOneAudioArgs = {
  where: AudioWhereUniqueInput;
};


export type MutationDeleteOneAudioCollectionArgs = {
  where: AudioCollectionWhereUniqueInput;
};


export type MutationDeleteOneAudioViewArgs = {
  where: AudioViewWhereUniqueInput;
};


export type MutationDeleteOneCouponArgs = {
  where: CouponWhereUniqueInput;
};


export type MutationDeleteOneCustomerArgs = {
  where: CustomerWhereUniqueInput;
};


export type MutationDeleteOneEventArgs = {
  where: EventWhereUniqueInput;
};


export type MutationDeleteOneEventCollectionArgs = {
  where: EventCollectionWhereUniqueInput;
};


export type MutationDeleteOneEventGroupArgs = {
  where: EventGroupWhereUniqueInput;
};


export type MutationDeleteOneLoginTokenArgs = {
  where: LoginTokenWhereUniqueInput;
};


export type MutationDeleteOneMarketingLocationArgs = {
  where: MarketingLocationWhereUniqueInput;
};


export type MutationDeleteOneNotificationArgs = {
  where: NotificationWhereUniqueInput;
};


export type MutationDeleteOneOrderArgs = {
  where: OrderWhereUniqueInput;
};


export type MutationDeleteOneOrderedProductArgs = {
  where: OrderedProductWhereUniqueInput;
};


export type MutationDeleteOneOrganizationArgs = {
  where: OrganizationWhereUniqueInput;
};


export type MutationDeleteOnePageArgs = {
  where: PageWhereUniqueInput;
};


export type MutationDeleteOnePageCollectionArgs = {
  where: PageCollectionWhereUniqueInput;
};


export type MutationDeleteOnePageViewArgs = {
  where: PageViewWhereUniqueInput;
};


export type MutationDeleteOneProductArgs = {
  where: ProductWhereUniqueInput;
};


export type MutationDeleteOneProductCollectionArgs = {
  where: ProductCollectionWhereUniqueInput;
};


export type MutationDeleteOneProductGroupArgs = {
  where: ProductGroupWhereUniqueInput;
};


export type MutationDeleteOneRefreshTokenArgs = {
  where: RefreshTokenWhereUniqueInput;
};


export type MutationDeleteOneRequestArgs = {
  where: RequestWhereUniqueInput;
};


export type MutationDeleteOneRequestClickArgs = {
  where: RequestClickWhereUniqueInput;
};


export type MutationDeleteOneSlugCounterArgs = {
  where: SlugCounterWhereUniqueInput;
};


export type MutationDeleteOneSpeakerArgs = {
  where: SpeakerWhereUniqueInput;
};


export type MutationDeleteOneUserArgs = {
  where: UserWhereUniqueInput;
};


export type MutationDeleteOneVideoArgs = {
  where: VideoWhereUniqueInput;
};


export type MutationDeleteOneVideoCollectionArgs = {
  where: VideoCollectionWhereUniqueInput;
};


export type MutationDeleteOneVideoViewArgs = {
  where: VideoViewWhereUniqueInput;
};


export type MutationDeleteOneWebsiteArgs = {
  where: WebsiteWhereUniqueInput;
};


export type MutationDeleteOneWebsiteGroupArgs = {
  where: WebsiteGroupWhereUniqueInput;
};


export type MutationEnterAdminArgs = {
  admin: Scalars['String'];
  id: Scalars['String'];
};


export type MutationFinishPurchaseArgs = {
  orderId: Scalars['String'];
  transactionHash: Scalars['String'];
};


export type MutationGetAnalyticsArgs = {
  beginSec: Scalars['Int'];
  endSec: Scalars['Int'];
  isRenew?: InputMaybe<Scalars['Boolean']>;
  type: Scalars['String'];
  wedsiteId: Scalars['String'];
};


export type MutationGetMetadataArgs = {
  pageUrl: Scalars['String'];
};


export type MutationInstallTemplateArgs = {
  templateId: Scalars['String'];
  websiteId: Scalars['String'];
};


export type MutationLoginArgs = {
  email: Scalars['String'];
  password: Scalars['String'];
};


export type MutationPayProductArgs = {
  customerId: Scalars['String'];
  paymentAddress: Scalars['String'];
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
};


export type MutationPreparePurchaseArgs = {
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  paymentAddress: Scalars['String'];
  productId: Scalars['String'];
  quantity: Scalars['Int'];
  websiteSlug: Scalars['String'];
};


export type MutationPrepareRequestArgs = {
  requestId: Scalars['String'];
};


export type MutationPrepareStripePurchaseArgs = {
  customerId: Scalars['String'];
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
};


export type MutationServerMintArgs = {
  orderedProductId: Scalars['String'];
  walletAddress: Scalars['String'];
};


export type MutationSignUploadUrlArgs = {
  acl?: InputMaybe<Scalars['String']>;
  contentType?: InputMaybe<Scalars['String']>;
  filename?: InputMaybe<Scalars['String']>;
};


export type MutationSignupArgs = {
  email: Scalars['String'];
  name?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
};


export type MutationStripeCheckoutArgs = {
  couponCode?: InputMaybe<Scalars['String']>;
  customerId: Scalars['String'];
  items: Scalars['Json'];
  shippingId?: InputMaybe<Scalars['String']>;
  websiteSlug: Scalars['String'];
};


export type MutationUpdateAdminSettingsFieldArgs = {
  data?: InputMaybe<Scalars['Json']>;
  fieldName: Scalars['String'];
  modelName: Scalars['String'];
};


export type MutationUpdateAdminSettingsModelArgs = {
  data?: InputMaybe<Scalars['Json']>;
  modelName: Scalars['String'];
};


export type MutationUpdateFieldArgs = {
  data: UpdateFieldInput;
  id: Scalars['String'];
  modelId: Scalars['String'];
};


export type MutationUpdateManyAffiliateArgs = {
  data: AffiliateUpdateManyMutationInput;
  where?: InputMaybe<AffiliateWhereInput>;
};


export type MutationUpdateManyAgendaArgs = {
  data: AgendaUpdateManyMutationInput;
  where?: InputMaybe<AgendaWhereInput>;
};


export type MutationUpdateManyAttachmentArgs = {
  data: AttachmentUpdateManyMutationInput;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type MutationUpdateManyAttributeArgs = {
  data: AttributeUpdateManyMutationInput;
  where?: InputMaybe<AttributeWhereInput>;
};


export type MutationUpdateManyAudioArgs = {
  data: AudioUpdateManyMutationInput;
  where?: InputMaybe<AudioWhereInput>;
};


export type MutationUpdateManyAudioCollectionArgs = {
  data: AudioCollectionUpdateManyMutationInput;
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type MutationUpdateManyAudioViewArgs = {
  data: AudioViewUpdateManyMutationInput;
  where?: InputMaybe<AudioViewWhereInput>;
};


export type MutationUpdateManyCouponArgs = {
  data: CouponUpdateManyMutationInput;
  where?: InputMaybe<CouponWhereInput>;
};


export type MutationUpdateManyCustomerArgs = {
  data: CustomerUpdateManyMutationInput;
  where?: InputMaybe<CustomerWhereInput>;
};


export type MutationUpdateManyEventArgs = {
  data: EventUpdateManyMutationInput;
  where?: InputMaybe<EventWhereInput>;
};


export type MutationUpdateManyEventCollectionArgs = {
  data: EventCollectionUpdateManyMutationInput;
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type MutationUpdateManyEventGroupArgs = {
  data: EventGroupUpdateManyMutationInput;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type MutationUpdateManyLoginTokenArgs = {
  data: LoginTokenUpdateManyMutationInput;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type MutationUpdateManyMarketingLocationArgs = {
  data: MarketingLocationUpdateManyMutationInput;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type MutationUpdateManyNotificationArgs = {
  data: NotificationUpdateManyMutationInput;
  where?: InputMaybe<NotificationWhereInput>;
};


export type MutationUpdateManyOrderArgs = {
  data: OrderUpdateManyMutationInput;
  where?: InputMaybe<OrderWhereInput>;
};


export type MutationUpdateManyOrderedProductArgs = {
  data: OrderedProductUpdateManyMutationInput;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type MutationUpdateManyOrganizationArgs = {
  data: OrganizationUpdateManyMutationInput;
  where?: InputMaybe<OrganizationWhereInput>;
};


export type MutationUpdateManyPageArgs = {
  data: PageUpdateManyMutationInput;
  where?: InputMaybe<PageWhereInput>;
};


export type MutationUpdateManyPageCollectionArgs = {
  data: PageCollectionUpdateManyMutationInput;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type MutationUpdateManyPageViewArgs = {
  data: PageViewUpdateManyMutationInput;
  where?: InputMaybe<PageViewWhereInput>;
};


export type MutationUpdateManyProductArgs = {
  data: ProductUpdateManyMutationInput;
  where?: InputMaybe<ProductWhereInput>;
};


export type MutationUpdateManyProductCollectionArgs = {
  data: ProductCollectionUpdateManyMutationInput;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type MutationUpdateManyProductGroupArgs = {
  data: ProductGroupUpdateManyMutationInput;
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type MutationUpdateManyRefreshTokenArgs = {
  data: RefreshTokenUpdateManyMutationInput;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type MutationUpdateManyRequestArgs = {
  data: RequestUpdateManyMutationInput;
  where?: InputMaybe<RequestWhereInput>;
};


export type MutationUpdateManyRequestClickArgs = {
  data: RequestClickUpdateManyMutationInput;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type MutationUpdateManySlugCounterArgs = {
  data: SlugCounterUpdateManyMutationInput;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type MutationUpdateManySpeakerArgs = {
  data: SpeakerUpdateManyMutationInput;
  where?: InputMaybe<SpeakerWhereInput>;
};


export type MutationUpdateManyUserArgs = {
  data: UserUpdateManyMutationInput;
  where?: InputMaybe<UserWhereInput>;
};


export type MutationUpdateManyVideoArgs = {
  data: VideoUpdateManyMutationInput;
  where?: InputMaybe<VideoWhereInput>;
};


export type MutationUpdateManyVideoCollectionArgs = {
  data: VideoCollectionUpdateManyMutationInput;
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type MutationUpdateManyVideoViewArgs = {
  data: VideoViewUpdateManyMutationInput;
  where?: InputMaybe<VideoViewWhereInput>;
};


export type MutationUpdateManyWebsiteArgs = {
  data: WebsiteUpdateManyMutationInput;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type MutationUpdateManyWebsiteGroupArgs = {
  data: WebsiteGroupUpdateManyMutationInput;
  where?: InputMaybe<WebsiteGroupWhereInput>;
};


export type MutationUpdateModelArgs = {
  data: UpdateModelInput;
  id: Scalars['String'];
};


export type MutationUpdateOneAffiliateArgs = {
  data: AffiliateUpdateInput;
  where: AffiliateWhereUniqueInput;
};


export type MutationUpdateOneAgendaArgs = {
  data: AgendaUpdateInput;
  where: AgendaWhereUniqueInput;
};


export type MutationUpdateOneAttachmentArgs = {
  data: AttachmentUpdateInput;
  where: AttachmentWhereUniqueInput;
};


export type MutationUpdateOneAttributeArgs = {
  data: AttributeUpdateInput;
  where: AttributeWhereUniqueInput;
};


export type MutationUpdateOneAudioArgs = {
  data: AudioUpdateInput;
  where: AudioWhereUniqueInput;
};


export type MutationUpdateOneAudioCollectionArgs = {
  data: AudioCollectionUpdateInput;
  where: AudioCollectionWhereUniqueInput;
};


export type MutationUpdateOneAudioViewArgs = {
  data: AudioViewUpdateInput;
  where: AudioViewWhereUniqueInput;
};


export type MutationUpdateOneCouponArgs = {
  data: CouponUpdateInput;
  where: CouponWhereUniqueInput;
};


export type MutationUpdateOneCustomerArgs = {
  data: CustomerUpdateInput;
  where: CustomerWhereUniqueInput;
};


export type MutationUpdateOneEventArgs = {
  data: EventUpdateInput;
  where: EventWhereUniqueInput;
};


export type MutationUpdateOneEventCollectionArgs = {
  data: EventCollectionUpdateInput;
  where: EventCollectionWhereUniqueInput;
};


export type MutationUpdateOneEventGroupArgs = {
  data: EventGroupUpdateInput;
  where: EventGroupWhereUniqueInput;
};


export type MutationUpdateOneLoginTokenArgs = {
  data: LoginTokenUpdateInput;
  where: LoginTokenWhereUniqueInput;
};


export type MutationUpdateOneMarketingLocationArgs = {
  data: MarketingLocationUpdateInput;
  where: MarketingLocationWhereUniqueInput;
};


export type MutationUpdateOneNotificationArgs = {
  data: NotificationUpdateInput;
  where: NotificationWhereUniqueInput;
};


export type MutationUpdateOneOrderArgs = {
  data: OrderUpdateInput;
  where: OrderWhereUniqueInput;
};


export type MutationUpdateOneOrderedProductArgs = {
  data: OrderedProductUpdateInput;
  where: OrderedProductWhereUniqueInput;
};


export type MutationUpdateOneOrganizationArgs = {
  data: OrganizationUpdateInput;
  where: OrganizationWhereUniqueInput;
};


export type MutationUpdateOnePageArgs = {
  data: PageUpdateInput;
  where: PageWhereUniqueInput;
};


export type MutationUpdateOnePageCollectionArgs = {
  data: PageCollectionUpdateInput;
  where: PageCollectionWhereUniqueInput;
};


export type MutationUpdateOnePageViewArgs = {
  data: PageViewUpdateInput;
  where: PageViewWhereUniqueInput;
};


export type MutationUpdateOneProductArgs = {
  data: ProductUpdateInput;
  where: ProductWhereUniqueInput;
};


export type MutationUpdateOneProductCollectionArgs = {
  data: ProductCollectionUpdateInput;
  where: ProductCollectionWhereUniqueInput;
};


export type MutationUpdateOneProductGroupArgs = {
  data: ProductGroupUpdateInput;
  where: ProductGroupWhereUniqueInput;
};


export type MutationUpdateOneRefreshTokenArgs = {
  data: RefreshTokenUpdateInput;
  where: RefreshTokenWhereUniqueInput;
};


export type MutationUpdateOneRequestArgs = {
  data: RequestUpdateInput;
  where: RequestWhereUniqueInput;
};


export type MutationUpdateOneRequestClickArgs = {
  data: RequestClickUpdateInput;
  where: RequestClickWhereUniqueInput;
};


export type MutationUpdateOneSlugCounterArgs = {
  data: SlugCounterUpdateInput;
  where: SlugCounterWhereUniqueInput;
};


export type MutationUpdateOneSpeakerArgs = {
  data: SpeakerUpdateInput;
  where: SpeakerWhereUniqueInput;
};


export type MutationUpdateOneUserArgs = {
  data: UserUpdateInput;
  where: UserWhereUniqueInput;
};


export type MutationUpdateOneVideoArgs = {
  data: VideoUpdateInput;
  where: VideoWhereUniqueInput;
};


export type MutationUpdateOneVideoCollectionArgs = {
  data: VideoCollectionUpdateInput;
  where: VideoCollectionWhereUniqueInput;
};


export type MutationUpdateOneVideoViewArgs = {
  data: VideoViewUpdateInput;
  where: VideoViewWhereUniqueInput;
};


export type MutationUpdateOneWebsiteArgs = {
  data: WebsiteUpdateInput;
  where: WebsiteWhereUniqueInput;
};


export type MutationUpdateOneWebsiteGroupArgs = {
  data: WebsiteGroupUpdateInput;
  where: WebsiteGroupWhereUniqueInput;
};


export type MutationUpdateOrderArgs = {
  orderId: Scalars['String'];
  transactionHash?: InputMaybe<Scalars['String']>;
};


export type MutationUpdatePasswordArgs = {
  currentPassword: Scalars['String'];
  password: Scalars['String'];
};


export type MutationUpsertOneAffiliateArgs = {
  create: AffiliateCreateInput;
  update: AffiliateUpdateInput;
  where: AffiliateWhereUniqueInput;
};


export type MutationUpsertOneAgendaArgs = {
  create: AgendaCreateInput;
  update: AgendaUpdateInput;
  where: AgendaWhereUniqueInput;
};


export type MutationUpsertOneAttachmentArgs = {
  create: AttachmentCreateInput;
  update: AttachmentUpdateInput;
  where: AttachmentWhereUniqueInput;
};


export type MutationUpsertOneAttributeArgs = {
  create: AttributeCreateInput;
  update: AttributeUpdateInput;
  where: AttributeWhereUniqueInput;
};


export type MutationUpsertOneAudioArgs = {
  create: AudioCreateInput;
  update: AudioUpdateInput;
  where: AudioWhereUniqueInput;
};


export type MutationUpsertOneAudioCollectionArgs = {
  create: AudioCollectionCreateInput;
  update: AudioCollectionUpdateInput;
  where: AudioCollectionWhereUniqueInput;
};


export type MutationUpsertOneAudioViewArgs = {
  create: AudioViewCreateInput;
  update: AudioViewUpdateInput;
  where: AudioViewWhereUniqueInput;
};


export type MutationUpsertOneCouponArgs = {
  create: CouponCreateInput;
  update: CouponUpdateInput;
  where: CouponWhereUniqueInput;
};


export type MutationUpsertOneCustomerArgs = {
  create: CustomerCreateInput;
  update: CustomerUpdateInput;
  where: CustomerWhereUniqueInput;
};


export type MutationUpsertOneEventArgs = {
  create: EventCreateInput;
  update: EventUpdateInput;
  where: EventWhereUniqueInput;
};


export type MutationUpsertOneEventCollectionArgs = {
  create: EventCollectionCreateInput;
  update: EventCollectionUpdateInput;
  where: EventCollectionWhereUniqueInput;
};


export type MutationUpsertOneEventGroupArgs = {
  create: EventGroupCreateInput;
  update: EventGroupUpdateInput;
  where: EventGroupWhereUniqueInput;
};


export type MutationUpsertOneLoginTokenArgs = {
  create: LoginTokenCreateInput;
  update: LoginTokenUpdateInput;
  where: LoginTokenWhereUniqueInput;
};


export type MutationUpsertOneMarketingLocationArgs = {
  create: MarketingLocationCreateInput;
  update: MarketingLocationUpdateInput;
  where: MarketingLocationWhereUniqueInput;
};


export type MutationUpsertOneNotificationArgs = {
  create: NotificationCreateInput;
  update: NotificationUpdateInput;
  where: NotificationWhereUniqueInput;
};


export type MutationUpsertOneOrderArgs = {
  create: OrderCreateInput;
  update: OrderUpdateInput;
  where: OrderWhereUniqueInput;
};


export type MutationUpsertOneOrderedProductArgs = {
  create: OrderedProductCreateInput;
  update: OrderedProductUpdateInput;
  where: OrderedProductWhereUniqueInput;
};


export type MutationUpsertOneOrganizationArgs = {
  create: OrganizationCreateInput;
  update: OrganizationUpdateInput;
  where: OrganizationWhereUniqueInput;
};


export type MutationUpsertOnePageArgs = {
  create: PageCreateInput;
  update: PageUpdateInput;
  where: PageWhereUniqueInput;
};


export type MutationUpsertOnePageCollectionArgs = {
  create: PageCollectionCreateInput;
  update: PageCollectionUpdateInput;
  where: PageCollectionWhereUniqueInput;
};


export type MutationUpsertOnePageViewArgs = {
  create: PageViewCreateInput;
  update: PageViewUpdateInput;
  where: PageViewWhereUniqueInput;
};


export type MutationUpsertOneProductArgs = {
  create: ProductCreateInput;
  update: ProductUpdateInput;
  where: ProductWhereUniqueInput;
};


export type MutationUpsertOneProductCollectionArgs = {
  create: ProductCollectionCreateInput;
  update: ProductCollectionUpdateInput;
  where: ProductCollectionWhereUniqueInput;
};


export type MutationUpsertOneProductGroupArgs = {
  create: ProductGroupCreateInput;
  update: ProductGroupUpdateInput;
  where: ProductGroupWhereUniqueInput;
};


export type MutationUpsertOneRefreshTokenArgs = {
  create: RefreshTokenCreateInput;
  update: RefreshTokenUpdateInput;
  where: RefreshTokenWhereUniqueInput;
};


export type MutationUpsertOneRequestArgs = {
  create: RequestCreateInput;
  update: RequestUpdateInput;
  where: RequestWhereUniqueInput;
};


export type MutationUpsertOneRequestClickArgs = {
  create: RequestClickCreateInput;
  update: RequestClickUpdateInput;
  where: RequestClickWhereUniqueInput;
};


export type MutationUpsertOneSlugCounterArgs = {
  create: SlugCounterCreateInput;
  update: SlugCounterUpdateInput;
  where: SlugCounterWhereUniqueInput;
};


export type MutationUpsertOneSpeakerArgs = {
  create: SpeakerCreateInput;
  update: SpeakerUpdateInput;
  where: SpeakerWhereUniqueInput;
};


export type MutationUpsertOneUserArgs = {
  create: UserCreateInput;
  update: UserUpdateInput;
  where: UserWhereUniqueInput;
};


export type MutationUpsertOneVideoArgs = {
  create: VideoCreateInput;
  update: VideoUpdateInput;
  where: VideoWhereUniqueInput;
};


export type MutationUpsertOneVideoCollectionArgs = {
  create: VideoCollectionCreateInput;
  update: VideoCollectionUpdateInput;
  where: VideoCollectionWhereUniqueInput;
};


export type MutationUpsertOneVideoViewArgs = {
  create: VideoViewCreateInput;
  update: VideoViewUpdateInput;
  where: VideoViewWhereUniqueInput;
};


export type MutationUpsertOneWebsiteArgs = {
  create: WebsiteCreateInput;
  update: WebsiteUpdateInput;
  where: WebsiteWhereUniqueInput;
};


export type MutationUpsertOneWebsiteGroupArgs = {
  create: WebsiteGroupCreateInput;
  update: WebsiteGroupUpdateInput;
  where: WebsiteGroupWhereUniqueInput;
};

export enum NavColor {
  Black = 'black',
  White = 'white'
}

export type NestedBoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type NestedBoolNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBoolNullableFilter>;
  _min?: InputMaybe<NestedBoolNullableFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableWithAggregatesFilter>;
};

export type NestedDateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type NestedDateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type NestedEnumAttachmentTypeNullableFilter = {
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export type NestedEnumAttachmentTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export type NestedEnumChainNullableFilter = {
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export type NestedEnumChainNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumChainNullableFilter>;
  _min?: InputMaybe<NestedEnumChainNullableFilter>;
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export type NestedEnumColorNullableFilter = {
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export type NestedEnumColorNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumColorNullableFilter>;
  _min?: InputMaybe<NestedEnumColorNullableFilter>;
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export type NestedEnumCouponTypeNullableFilter = {
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export type NestedEnumCouponTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCouponTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumCouponTypeNullableFilter>;
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export type NestedEnumCurrencyCodeNullableFilter = {
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export type NestedEnumCurrencyCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export type NestedEnumLanguageCodeNullableFilter = {
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export type NestedEnumLanguageCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumLanguageCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumLanguageCodeNullableFilter>;
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export type NestedEnumNavColorNullableFilter = {
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export type NestedEnumNavColorNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumNavColorNullableFilter>;
  _min?: InputMaybe<NestedEnumNavColorNullableFilter>;
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export type NestedEnumPaymentTypeNullableFilter = {
  equals?: InputMaybe<PaymentType>;
  in?: InputMaybe<Array<InputMaybe<PaymentType>>>;
  not?: InputMaybe<NestedEnumPaymentTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentType>>>;
};

export type NestedEnumPaymentTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumPaymentTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumPaymentTypeNullableFilter>;
  equals?: InputMaybe<PaymentType>;
  in?: InputMaybe<Array<InputMaybe<PaymentType>>>;
  not?: InputMaybe<NestedEnumPaymentTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentType>>>;
};

export type NestedEnumProductTypeNullableFilter = {
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export type NestedEnumProductTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export type NestedEnumRequestStatusNullableFilter = {
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export type NestedEnumRequestStatusNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  _min?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export type NestedFloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type NestedFloatNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedFloatNullableFilter>;
  _min?: InputMaybe<NestedFloatNullableFilter>;
  _sum?: InputMaybe<NestedFloatNullableFilter>;
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type NestedIntFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type NestedIntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type NestedIntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedIntNullableFilter>;
  _min?: InputMaybe<NestedIntNullableFilter>;
  _sum?: InputMaybe<NestedIntNullableFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type NestedJsonNullableFilter = {
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type NestedStringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type Notification = {
  __typename?: 'Notification';
  action?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  isUnRead?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  modelId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export type NotificationCountAggregateOutputType = {
  __typename?: 'NotificationCountAggregateOutputType';
  _all: Scalars['Int'];
  action: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isUnRead: Scalars['Int'];
  message: Scalars['Int'];
  model: Scalars['Int'];
  modelId: Scalars['Int'];
  title: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  userId: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type NotificationCountOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type NotificationCreateInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutNotificationsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutNotificationsInput>;
};

export type NotificationCreateManyInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type NotificationCreateManyUserInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type NotificationCreateManyUserInputEnvelope = {
  data: NotificationCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type NotificationCreateManyWebsiteInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type NotificationCreateManyWebsiteInputEnvelope = {
  data: NotificationCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type NotificationCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
};

export type NotificationCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
};

export type NotificationCreateOrConnectWithoutUserInput = {
  create: NotificationUncheckedCreateWithoutUserInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationCreateOrConnectWithoutWebsiteInput = {
  create: NotificationUncheckedCreateWithoutWebsiteInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationCreateWithoutUserInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutNotificationsInput>;
};

export type NotificationCreateWithoutWebsiteInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutNotificationsInput>;
};

export type NotificationListRelationFilter = {
  every?: InputMaybe<NotificationWhereInput>;
  none?: InputMaybe<NotificationWhereInput>;
  some?: InputMaybe<NotificationWhereInput>;
};

export type NotificationMaxAggregateOutputType = {
  __typename?: 'NotificationMaxAggregateOutputType';
  action?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isUnRead?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  modelId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type NotificationMaxOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type NotificationMinAggregateOutputType = {
  __typename?: 'NotificationMinAggregateOutputType';
  action?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isUnRead?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  modelId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type NotificationMinOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type NotificationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type NotificationOrderByWithAggregationInput = {
  _count?: InputMaybe<NotificationCountOrderByAggregateInput>;
  _max?: InputMaybe<NotificationMaxOrderByAggregateInput>;
  _min?: InputMaybe<NotificationMinOrderByAggregateInput>;
  action?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrderInput>;
  message?: InputMaybe<SortOrderInput>;
  model?: InputMaybe<SortOrderInput>;
  modelId?: InputMaybe<SortOrderInput>;
  title?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type NotificationOrderByWithRelationInput = {
  action?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrderInput>;
  message?: InputMaybe<SortOrderInput>;
  model?: InputMaybe<SortOrderInput>;
  modelId?: InputMaybe<SortOrderInput>;
  title?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum NotificationScalarFieldEnum {
  Action = 'action',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  IsUnRead = 'isUnRead',
  Message = 'message',
  Model = 'model',
  ModelId = 'modelId',
  Title = 'title',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  UserId = 'userId',
  WebsiteId = 'websiteId'
}

export type NotificationScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  action?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isUnRead?: InputMaybe<BoolNullableFilter>;
  message?: InputMaybe<StringNullableFilter>;
  model?: InputMaybe<StringNullableFilter>;
  modelId?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type NotificationScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<NotificationScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<NotificationScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<NotificationScalarWhereWithAggregatesInput>>>;
  action?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  isUnRead?: InputMaybe<BoolNullableWithAggregatesFilter>;
  message?: InputMaybe<StringNullableWithAggregatesFilter>;
  model?: InputMaybe<StringNullableWithAggregatesFilter>;
  modelId?: InputMaybe<StringNullableWithAggregatesFilter>;
  title?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type NotificationUncheckedCreateInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
};

export type NotificationUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
};

export type NotificationUncheckedCreateWithoutUserInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type NotificationUncheckedCreateWithoutWebsiteInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type NotificationUncheckedUpdateInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUncheckedUpdateManyInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUncheckedUpdateManyWithoutNotificationsInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type NotificationUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type NotificationUncheckedUpdateWithoutUserInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUncheckedUpdateWithoutWebsiteInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUpdateInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutNotificationsNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutNotificationsNestedInput>;
};

export type NotificationUpdateManyMutationInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUpdateManyWithWhereWithoutUserInput = {
  data: NotificationUncheckedUpdateManyWithoutNotificationsInput;
  where: NotificationScalarWhereInput;
};

export type NotificationUpdateManyWithWhereWithoutWebsiteInput = {
  data: NotificationUncheckedUpdateManyWithoutNotificationsInput;
  where: NotificationScalarWhereInput;
};

export type NotificationUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type NotificationUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
  data: NotificationUncheckedUpdateWithoutUserInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: NotificationUncheckedUpdateWithoutWebsiteInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationUpdateWithoutUserInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutNotificationsNestedInput>;
};

export type NotificationUpdateWithoutWebsiteInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutNotificationsNestedInput>;
};

export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
  create: NotificationUncheckedCreateWithoutUserInput;
  update: NotificationUncheckedUpdateWithoutUserInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: NotificationUncheckedCreateWithoutWebsiteInput;
  update: NotificationUncheckedUpdateWithoutWebsiteInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<NotificationWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<NotificationWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<NotificationWhereInput>>>;
  action?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isUnRead?: InputMaybe<BoolNullableFilter>;
  message?: InputMaybe<StringNullableFilter>;
  model?: InputMaybe<StringNullableFilter>;
  modelId?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type NotificationWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type NullableBoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']>;
};

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']>;
};

export type NullableEnumAttachmentTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<AttachmentType>;
};

export type NullableEnumChainFieldUpdateOperationsInput = {
  set?: InputMaybe<Chain>;
};

export type NullableEnumColorFieldUpdateOperationsInput = {
  set?: InputMaybe<Color>;
};

export type NullableEnumCouponTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<CouponType>;
};

export type NullableEnumCurrencyCodeFieldUpdateOperationsInput = {
  set?: InputMaybe<CurrencyCode>;
};

export type NullableEnumLanguageCodeFieldUpdateOperationsInput = {
  set?: InputMaybe<LanguageCode>;
};

export type NullableEnumNavColorFieldUpdateOperationsInput = {
  set?: InputMaybe<NavColor>;
};

export type NullableEnumPaymentTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<PaymentType>;
};

export type NullableEnumProductTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<ProductType>;
};

export type NullableEnumRequestStatusFieldUpdateOperationsInput = {
  set?: InputMaybe<RequestStatus>;
};

export type NullableFloatFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Float']>;
  divide?: InputMaybe<Scalars['Float']>;
  increment?: InputMaybe<Scalars['Float']>;
  multiply?: InputMaybe<Scalars['Float']>;
  set?: InputMaybe<Scalars['Float']>;
};

export type NullableIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']>;
  divide?: InputMaybe<Scalars['Int']>;
  increment?: InputMaybe<Scalars['Int']>;
  multiply?: InputMaybe<Scalars['Int']>;
  set?: InputMaybe<Scalars['Int']>;
};

export enum NullableJsonNullValueInput {
  DbNull = 'DbNull',
  JsonNull = 'JsonNull'
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export enum NullsOrder {
  First = 'first',
  Last = 'last'
}

export type Order = {
  __typename?: 'Order';
  _count: OrderCountOutputType;
  affiliateFee?: Maybe<Scalars['Float']>;
  affiliateWalletAddress?: Maybe<Scalars['String']>;
  affiliateWebsiteSlug?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  completed?: Maybe<Scalars['Boolean']>;
  coupon?: Maybe<Coupon>;
  couponId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  customer?: Maybe<Customer>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  discount?: Maybe<Scalars['Float']>;
  id: Scalars['String'];
  isAirdrop?: Maybe<Scalars['Boolean']>;
  orderedProducts: Array<OrderedProduct>;
  paid?: Maybe<Scalars['Boolean']>;
  paymentType?: Maybe<PaymentType>;
  stripeFee?: Maybe<Scalars['Boolean']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  walletAddress?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type OrderOrderedProductsArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};

export type OrderAvgAggregateOutputType = {
  __typename?: 'OrderAvgAggregateOutputType';
  affiliateFee?: Maybe<Scalars['Float']>;
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  discount?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type OrderAvgOrderByAggregateInput = {
  affiliateFee?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type OrderCountAggregateOutputType = {
  __typename?: 'OrderCountAggregateOutputType';
  _all: Scalars['Int'];
  affiliateFee: Scalars['Int'];
  affiliateWalletAddress: Scalars['Int'];
  affiliateWebsiteSlug: Scalars['Int'];
  amount: Scalars['Int'];
  applicationFee: Scalars['Int'];
  completed: Scalars['Int'];
  couponId: Scalars['Int'];
  createdAt: Scalars['Int'];
  currencyCode: Scalars['Int'];
  customerId: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  discount: Scalars['Int'];
  id: Scalars['Int'];
  isAirdrop: Scalars['Int'];
  paid: Scalars['Int'];
  paymentType: Scalars['Int'];
  stripeFee: Scalars['Int'];
  total: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  walletAddress: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type OrderCountOrderByAggregateInput = {
  affiliateFee?: InputMaybe<SortOrder>;
  affiliateWalletAddress?: InputMaybe<SortOrder>;
  affiliateWebsiteSlug?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  completed?: InputMaybe<SortOrder>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isAirdrop?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paymentType?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderCountOutputType = {
  __typename?: 'OrderCountOutputType';
  orderedProducts: Scalars['Int'];
};

export type OrderCreateInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type OrderCreateManyCouponInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderCreateManyCouponInputEnvelope = {
  data: OrderCreateManyCouponInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderCreateManyCustomerInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderCreateManyCustomerInputEnvelope = {
  data: OrderCreateManyCustomerInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderCreateManyInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderCreateManyWebsiteInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderCreateManyWebsiteInputEnvelope = {
  data: OrderCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderCreateNestedManyWithoutCouponInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
};

export type OrderCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
};

export type OrderCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
};

export type OrderCreateNestedOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<OrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<OrderUncheckedCreateWithoutOrderedProductsInput>;
};

export type OrderCreateOrConnectWithoutCouponInput = {
  create: OrderUncheckedCreateWithoutCouponInput;
  where: OrderWhereUniqueInput;
};

export type OrderCreateOrConnectWithoutCustomerInput = {
  create: OrderUncheckedCreateWithoutCustomerInput;
  where: OrderWhereUniqueInput;
};

export type OrderCreateOrConnectWithoutOrderedProductsInput = {
  create: OrderUncheckedCreateWithoutOrderedProductsInput;
  where: OrderWhereUniqueInput;
};

export type OrderCreateOrConnectWithoutWebsiteInput = {
  create: OrderUncheckedCreateWithoutWebsiteInput;
  where: OrderWhereUniqueInput;
};

export type OrderCreateWithoutCouponInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type OrderCreateWithoutCustomerInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type OrderCreateWithoutOrderedProductsInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type OrderCreateWithoutWebsiteInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderListRelationFilter = {
  every?: InputMaybe<OrderWhereInput>;
  none?: InputMaybe<OrderWhereInput>;
  some?: InputMaybe<OrderWhereInput>;
};

export type OrderMaxAggregateOutputType = {
  __typename?: 'OrderMaxAggregateOutputType';
  affiliateFee?: Maybe<Scalars['Float']>;
  affiliateWalletAddress?: Maybe<Scalars['String']>;
  affiliateWebsiteSlug?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  completed?: Maybe<Scalars['Boolean']>;
  couponId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  discount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['String']>;
  isAirdrop?: Maybe<Scalars['Boolean']>;
  paid?: Maybe<Scalars['Boolean']>;
  paymentType?: Maybe<PaymentType>;
  stripeFee?: Maybe<Scalars['Boolean']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type OrderMaxOrderByAggregateInput = {
  affiliateFee?: InputMaybe<SortOrder>;
  affiliateWalletAddress?: InputMaybe<SortOrder>;
  affiliateWebsiteSlug?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  completed?: InputMaybe<SortOrder>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isAirdrop?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paymentType?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderMinAggregateOutputType = {
  __typename?: 'OrderMinAggregateOutputType';
  affiliateFee?: Maybe<Scalars['Float']>;
  affiliateWalletAddress?: Maybe<Scalars['String']>;
  affiliateWebsiteSlug?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  completed?: Maybe<Scalars['Boolean']>;
  couponId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  discount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['String']>;
  isAirdrop?: Maybe<Scalars['Boolean']>;
  paid?: Maybe<Scalars['Boolean']>;
  paymentType?: Maybe<PaymentType>;
  stripeFee?: Maybe<Scalars['Boolean']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type OrderMinOrderByAggregateInput = {
  affiliateFee?: InputMaybe<SortOrder>;
  affiliateWalletAddress?: InputMaybe<SortOrder>;
  affiliateWebsiteSlug?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  completed?: InputMaybe<SortOrder>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isAirdrop?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paymentType?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrderOrderByWithAggregationInput = {
  _avg?: InputMaybe<OrderAvgOrderByAggregateInput>;
  _count?: InputMaybe<OrderCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderMinOrderByAggregateInput>;
  _sum?: InputMaybe<OrderSumOrderByAggregateInput>;
  affiliateFee?: InputMaybe<SortOrderInput>;
  affiliateWalletAddress?: InputMaybe<SortOrderInput>;
  affiliateWebsiteSlug?: InputMaybe<SortOrderInput>;
  amount?: InputMaybe<SortOrderInput>;
  applicationFee?: InputMaybe<SortOrderInput>;
  completed?: InputMaybe<SortOrderInput>;
  couponId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  currencyCode?: InputMaybe<SortOrderInput>;
  customerId?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  discount?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isAirdrop?: InputMaybe<SortOrderInput>;
  paid?: InputMaybe<SortOrderInput>;
  paymentType?: InputMaybe<SortOrderInput>;
  stripeFee?: InputMaybe<SortOrderInput>;
  total?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type OrderOrderByWithRelationInput = {
  affiliateFee?: InputMaybe<SortOrderInput>;
  affiliateWalletAddress?: InputMaybe<SortOrderInput>;
  affiliateWebsiteSlug?: InputMaybe<SortOrderInput>;
  amount?: InputMaybe<SortOrderInput>;
  applicationFee?: InputMaybe<SortOrderInput>;
  completed?: InputMaybe<SortOrderInput>;
  coupon?: InputMaybe<CouponOrderByWithRelationInput>;
  couponId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  currencyCode?: InputMaybe<SortOrderInput>;
  customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  customerId?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  discount?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isAirdrop?: InputMaybe<SortOrderInput>;
  orderedProducts?: InputMaybe<OrderedProductOrderByRelationAggregateInput>;
  paid?: InputMaybe<SortOrderInput>;
  paymentType?: InputMaybe<SortOrderInput>;
  stripeFee?: InputMaybe<SortOrderInput>;
  total?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type OrderRelationFilter = {
  is?: InputMaybe<OrderWhereInput>;
  isNot?: InputMaybe<OrderWhereInput>;
};

export enum OrderScalarFieldEnum {
  AffiliateFee = 'affiliateFee',
  AffiliateWalletAddress = 'affiliateWalletAddress',
  AffiliateWebsiteSlug = 'affiliateWebsiteSlug',
  Amount = 'amount',
  ApplicationFee = 'applicationFee',
  Completed = 'completed',
  CouponId = 'couponId',
  CreatedAt = 'createdAt',
  CurrencyCode = 'currencyCode',
  CustomerId = 'customerId',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Discount = 'discount',
  Id = 'id',
  IsAirdrop = 'isAirdrop',
  Paid = 'paid',
  PaymentType = 'paymentType',
  StripeFee = 'stripeFee',
  Total = 'total',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  WalletAddress = 'walletAddress',
  WebsiteId = 'websiteId'
}

export type OrderScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  affiliateFee?: InputMaybe<FloatNullableFilter>;
  affiliateWalletAddress?: InputMaybe<StringNullableFilter>;
  affiliateWebsiteSlug?: InputMaybe<StringNullableFilter>;
  amount?: InputMaybe<FloatNullableFilter>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  completed?: InputMaybe<BoolNullableFilter>;
  couponId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isAirdrop?: InputMaybe<BoolNullableFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  paymentType?: InputMaybe<EnumPaymentTypeNullableFilter>;
  stripeFee?: InputMaybe<BoolNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type OrderScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrderScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderScalarWhereWithAggregatesInput>>>;
  affiliateFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  affiliateWalletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  affiliateWebsiteSlug?: InputMaybe<StringNullableWithAggregatesFilter>;
  amount?: InputMaybe<FloatNullableWithAggregatesFilter>;
  applicationFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  completed?: InputMaybe<BoolNullableWithAggregatesFilter>;
  couponId?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  customerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  discount?: InputMaybe<FloatNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  isAirdrop?: InputMaybe<BoolNullableWithAggregatesFilter>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  paymentType?: InputMaybe<EnumPaymentTypeNullableWithAggregatesFilter>;
  stripeFee?: InputMaybe<BoolNullableWithAggregatesFilter>;
  total?: InputMaybe<FloatNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderSumAggregateOutputType = {
  __typename?: 'OrderSumAggregateOutputType';
  affiliateFee?: Maybe<Scalars['Float']>;
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  discount?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type OrderSumOrderByAggregateInput = {
  affiliateFee?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type OrderUncheckedCreateInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedCreateNestedManyWithoutCouponInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
};

export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
};

export type OrderUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
};

export type OrderUncheckedCreateWithoutCouponInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedCreateWithoutCustomerInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedCreateWithoutOrderedProductsInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedCreateWithoutWebsiteInput = {
  affiliateFee?: InputMaybe<Scalars['Float']>;
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
  affiliateWebsiteSlug?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  completed?: InputMaybe<Scalars['Boolean']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  isAirdrop?: InputMaybe<Scalars['Boolean']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paymentType?: InputMaybe<PaymentType>;
  stripeFee?: InputMaybe<Scalars['Boolean']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedUpdateInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateManyInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateManyWithoutCouponNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCouponInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCouponInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCouponInput>>>;
};

export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type OrderUncheckedUpdateManyWithoutOrdersInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type OrderUncheckedUpdateWithoutCouponInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateWithoutCustomerInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateWithoutOrderedProductsInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateWithoutWebsiteInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpdateInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersNestedInput>;
};

export type OrderUpdateManyMutationInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpdateManyWithWhereWithoutCouponInput = {
  data: OrderUncheckedUpdateManyWithoutOrdersInput;
  where: OrderScalarWhereInput;
};

export type OrderUpdateManyWithWhereWithoutCustomerInput = {
  data: OrderUncheckedUpdateManyWithoutOrdersInput;
  where: OrderScalarWhereInput;
};

export type OrderUpdateManyWithWhereWithoutWebsiteInput = {
  data: OrderUncheckedUpdateManyWithoutOrdersInput;
  where: OrderScalarWhereInput;
};

export type OrderUpdateManyWithoutCouponNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCouponInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCouponInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCouponInput>>>;
};

export type OrderUpdateManyWithoutCustomerNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type OrderUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type OrderUpdateOneWithoutOrderedProductsNestedInput = {
  connect?: InputMaybe<OrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<OrderUncheckedCreateWithoutOrderedProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderUncheckedUpdateWithoutOrderedProductsInput>;
  upsert?: InputMaybe<OrderUpsertWithoutOrderedProductsInput>;
};

export type OrderUpdateWithWhereUniqueWithoutCouponInput = {
  data: OrderUncheckedUpdateWithoutCouponInput;
  where: OrderWhereUniqueInput;
};

export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
  data: OrderUncheckedUpdateWithoutCustomerInput;
  where: OrderWhereUniqueInput;
};

export type OrderUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: OrderUncheckedUpdateWithoutWebsiteInput;
  where: OrderWhereUniqueInput;
};

export type OrderUpdateWithoutCouponInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersNestedInput>;
};

export type OrderUpdateWithoutCustomerInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersNestedInput>;
};

export type OrderUpdateWithoutOrderedProductsInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersNestedInput>;
};

export type OrderUpdateWithoutWebsiteInput = {
  affiliateFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  affiliateWalletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  affiliateWebsiteSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  completed?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAirdrop?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpsertWithWhereUniqueWithoutCouponInput = {
  create: OrderUncheckedCreateWithoutCouponInput;
  update: OrderUncheckedUpdateWithoutCouponInput;
  where: OrderWhereUniqueInput;
};

export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
  create: OrderUncheckedCreateWithoutCustomerInput;
  update: OrderUncheckedUpdateWithoutCustomerInput;
  where: OrderWhereUniqueInput;
};

export type OrderUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: OrderUncheckedCreateWithoutWebsiteInput;
  update: OrderUncheckedUpdateWithoutWebsiteInput;
  where: OrderWhereUniqueInput;
};

export type OrderUpsertWithoutOrderedProductsInput = {
  create: OrderUncheckedCreateWithoutOrderedProductsInput;
  update: OrderUncheckedUpdateWithoutOrderedProductsInput;
};

export type OrderWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrderWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderWhereInput>>>;
  affiliateFee?: InputMaybe<FloatNullableFilter>;
  affiliateWalletAddress?: InputMaybe<StringNullableFilter>;
  affiliateWebsiteSlug?: InputMaybe<StringNullableFilter>;
  amount?: InputMaybe<FloatNullableFilter>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  completed?: InputMaybe<BoolNullableFilter>;
  coupon?: InputMaybe<CouponWhereInput>;
  couponId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customer?: InputMaybe<CustomerWhereInput>;
  customerId?: InputMaybe<StringNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isAirdrop?: InputMaybe<BoolNullableFilter>;
  orderedProducts?: InputMaybe<OrderedProductListRelationFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  paymentType?: InputMaybe<EnumPaymentTypeNullableFilter>;
  stripeFee?: InputMaybe<BoolNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type OrderWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderedProduct = {
  __typename?: 'OrderedProduct';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  event?: Maybe<Event>;
  eventId?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  minted?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Order>;
  orderId?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  product?: Maybe<Product>;
  productId?: Maybe<Scalars['String']>;
  productSlug?: Maybe<Scalars['String']>;
  productType?: Maybe<ProductType>;
  productUrl?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemedQuantity?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  tokenId?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  variationId?: Maybe<Scalars['String']>;
  variationName?: Maybe<Scalars['String']>;
  variationOption?: Maybe<Scalars['Json']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type OrderedProductAvgAggregateOutputType = {
  __typename?: 'OrderedProductAvgAggregateOutputType';
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  redeemedQuantity?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type OrderedProductAvgOrderByAggregateInput = {
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemedQuantity?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type OrderedProductCountAggregateOutputType = {
  __typename?: 'OrderedProductCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  eventId: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  minted: Scalars['Int'];
  name: Scalars['Int'];
  orderId: Scalars['Int'];
  price: Scalars['Int'];
  productId: Scalars['Int'];
  productSlug: Scalars['Int'];
  productType: Scalars['Int'];
  productUrl: Scalars['Int'];
  quantity: Scalars['Int'];
  redeemedQuantity: Scalars['Int'];
  slug: Scalars['Int'];
  tokenId: Scalars['Int'];
  total: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  variationId: Scalars['Int'];
  variationName: Scalars['Int'];
  variationOption: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type OrderedProductCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  productUrl?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemedQuantity?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  tokenId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  variationName?: InputMaybe<SortOrder>;
  variationOption?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrderedProductCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutOrderedProductsInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateManyEventInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateManyEventInputEnvelope = {
  data: OrderedProductCreateManyEventInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedProductCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateManyOrderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateManyOrderInputEnvelope = {
  data: OrderedProductCreateManyOrderInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedProductCreateManyProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateManyProductInputEnvelope = {
  data: OrderedProductCreateManyProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedProductCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutEventInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyEventInputEnvelope>;
};

export type OrderedProductCreateNestedManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
};

export type OrderedProductCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
};

export type OrderedProductCreateOrConnectWithoutEventInput = {
  create: OrderedProductUncheckedCreateWithoutEventInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductCreateOrConnectWithoutOrderInput = {
  create: OrderedProductUncheckedCreateWithoutOrderInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductCreateOrConnectWithoutProductInput = {
  create: OrderedProductUncheckedCreateWithoutProductInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductCreateWithoutEventInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateWithoutOrderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutOrderedProductsInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateWithoutProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutOrderedProductsInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductListRelationFilter = {
  every?: InputMaybe<OrderedProductWhereInput>;
  none?: InputMaybe<OrderedProductWhereInput>;
  some?: InputMaybe<OrderedProductWhereInput>;
};

export type OrderedProductMaxAggregateOutputType = {
  __typename?: 'OrderedProductMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  minted?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  orderId?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productId?: Maybe<Scalars['String']>;
  productSlug?: Maybe<Scalars['String']>;
  productType?: Maybe<ProductType>;
  productUrl?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemedQuantity?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  tokenId?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  variationId?: Maybe<Scalars['String']>;
  variationName?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type OrderedProductMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  productUrl?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemedQuantity?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  tokenId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  variationName?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrderedProductMinAggregateOutputType = {
  __typename?: 'OrderedProductMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  minted?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  orderId?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productId?: Maybe<Scalars['String']>;
  productSlug?: Maybe<Scalars['String']>;
  productType?: Maybe<ProductType>;
  productUrl?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemedQuantity?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  tokenId?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  variationId?: Maybe<Scalars['String']>;
  variationName?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type OrderedProductMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  productUrl?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemedQuantity?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  tokenId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  variationName?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrderedProductOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrderedProductOrderByWithAggregationInput = {
  _avg?: InputMaybe<OrderedProductAvgOrderByAggregateInput>;
  _count?: InputMaybe<OrderedProductCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedProductMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedProductMinOrderByAggregateInput>;
  _sum?: InputMaybe<OrderedProductSumOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  minted?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  orderId?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  productId?: InputMaybe<SortOrderInput>;
  productSlug?: InputMaybe<SortOrderInput>;
  productType?: InputMaybe<SortOrderInput>;
  productUrl?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  redeemedQuantity?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  tokenId?: InputMaybe<SortOrderInput>;
  total?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  variationId?: InputMaybe<SortOrderInput>;
  variationName?: InputMaybe<SortOrderInput>;
  variationOption?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
};

export type OrderedProductOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  event?: InputMaybe<EventOrderByWithRelationInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  minted?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  order?: InputMaybe<OrderOrderByWithRelationInput>;
  orderId?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  productId?: InputMaybe<SortOrderInput>;
  productSlug?: InputMaybe<SortOrderInput>;
  productType?: InputMaybe<SortOrderInput>;
  productUrl?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  redeemedQuantity?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  tokenId?: InputMaybe<SortOrderInput>;
  total?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  variationId?: InputMaybe<SortOrderInput>;
  variationName?: InputMaybe<SortOrderInput>;
  variationOption?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
};

export enum OrderedProductScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  Id = 'id',
  ImageObj = 'imageObj',
  Minted = 'minted',
  Name = 'name',
  OrderId = 'orderId',
  Price = 'price',
  ProductId = 'productId',
  ProductSlug = 'productSlug',
  ProductType = 'productType',
  ProductUrl = 'productUrl',
  Quantity = 'quantity',
  RedeemedQuantity = 'redeemedQuantity',
  Slug = 'slug',
  TokenId = 'tokenId',
  Total = 'total',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  VariationId = 'variationId',
  VariationName = 'variationName',
  VariationOption = 'variationOption',
  WalletAddress = 'walletAddress'
}

export type OrderedProductScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  minted?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orderId?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  productId?: InputMaybe<StringNullableFilter>;
  productSlug?: InputMaybe<StringNullableFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  productUrl?: InputMaybe<StringNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  redeemedQuantity?: InputMaybe<IntNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  tokenId?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  variationId?: InputMaybe<StringNullableFilter>;
  variationName?: InputMaybe<StringNullableFilter>;
  variationOption?: InputMaybe<JsonNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type OrderedProductScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  eventId?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  minted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  orderId?: InputMaybe<StringNullableWithAggregatesFilter>;
  price?: InputMaybe<FloatNullableWithAggregatesFilter>;
  productId?: InputMaybe<StringNullableWithAggregatesFilter>;
  productSlug?: InputMaybe<StringNullableWithAggregatesFilter>;
  productType?: InputMaybe<EnumProductTypeNullableWithAggregatesFilter>;
  productUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  quantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  redeemedQuantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  tokenId?: InputMaybe<StringNullableWithAggregatesFilter>;
  total?: InputMaybe<FloatNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  variationId?: InputMaybe<StringNullableWithAggregatesFilter>;
  variationName?: InputMaybe<StringNullableWithAggregatesFilter>;
  variationOption?: InputMaybe<JsonNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderedProductSumAggregateOutputType = {
  __typename?: 'OrderedProductSumAggregateOutputType';
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemedQuantity?: Maybe<Scalars['Int']>;
  total?: Maybe<Scalars['Float']>;
};

export type OrderedProductSumOrderByAggregateInput = {
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemedQuantity?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type OrderedProductUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductUncheckedCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutEventInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyEventInputEnvelope>;
};

export type OrderedProductUncheckedCreateNestedManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
};

export type OrderedProductUncheckedCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
};

export type OrderedProductUncheckedCreateWithoutEventInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductUncheckedCreateWithoutOrderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductUncheckedCreateWithoutProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productSlug?: InputMaybe<Scalars['String']>;
  productType?: InputMaybe<ProductType>;
  productUrl?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemedQuantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  tokenId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variationId?: InputMaybe<Scalars['String']>;
  variationName?: InputMaybe<Scalars['String']>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutEventInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type OrderedProductUncheckedUpdateManyWithoutOrderNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutOrderInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutOrderInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutOrderInput>>>;
};

export type OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type OrderedProductUncheckedUpdateWithoutEventInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateWithoutOrderInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateWithoutProductInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutOrderedProductsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsNestedInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateManyWithWhereWithoutEventInput = {
  data: OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput;
  where: OrderedProductScalarWhereInput;
};

export type OrderedProductUpdateManyWithWhereWithoutOrderInput = {
  data: OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput;
  where: OrderedProductScalarWhereInput;
};

export type OrderedProductUpdateManyWithWhereWithoutProductInput = {
  data: OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput;
  where: OrderedProductScalarWhereInput;
};

export type OrderedProductUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutEventInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type OrderedProductUpdateManyWithoutOrderNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutOrderInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutOrderInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutOrderInput>>>;
};

export type OrderedProductUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type OrderedProductUpdateWithWhereUniqueWithoutEventInput = {
  data: OrderedProductUncheckedUpdateWithoutEventInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUpdateWithWhereUniqueWithoutOrderInput = {
  data: OrderedProductUncheckedUpdateWithoutOrderInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUpdateWithWhereUniqueWithoutProductInput = {
  data: OrderedProductUncheckedUpdateWithoutProductInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUpdateWithoutEventInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsNestedInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateWithoutOrderInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutOrderedProductsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsNestedInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateWithoutProductInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutOrderedProductsNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  productUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemedQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tokenId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationOption?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithWhereUniqueWithoutEventInput = {
  create: OrderedProductUncheckedCreateWithoutEventInput;
  update: OrderedProductUncheckedUpdateWithoutEventInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUpsertWithWhereUniqueWithoutOrderInput = {
  create: OrderedProductUncheckedCreateWithoutOrderInput;
  update: OrderedProductUncheckedUpdateWithoutOrderInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUpsertWithWhereUniqueWithoutProductInput = {
  create: OrderedProductUncheckedCreateWithoutProductInput;
  update: OrderedProductUncheckedUpdateWithoutProductInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedProductWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedProductWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedProductWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  event?: InputMaybe<EventWhereInput>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  minted?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  order?: InputMaybe<OrderWhereInput>;
  orderId?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  product?: InputMaybe<ProductWhereInput>;
  productId?: InputMaybe<StringNullableFilter>;
  productSlug?: InputMaybe<StringNullableFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  productUrl?: InputMaybe<StringNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  redeemedQuantity?: InputMaybe<IntNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  tokenId?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  variationId?: InputMaybe<StringNullableFilter>;
  variationName?: InputMaybe<StringNullableFilter>;
  variationOption?: InputMaybe<JsonNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type OrderedProductWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type Organization = {
  __typename?: 'Organization';
  _count: OrganizationCountOutputType;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventGroups: Array<EventGroup>;
  id: Scalars['String'];
  logoObj?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  productGroups: Array<ProductGroup>;
  slug?: Maybe<Scalars['String']>;
  telegramApiToken?: Maybe<Scalars['String']>;
  telegramBotId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteGroups: Array<WebsiteGroup>;
};


export type OrganizationEventGroupsArgs = {
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  distinct?: InputMaybe<EventGroupScalarFieldEnum>;
  orderBy?: InputMaybe<EventGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type OrganizationProductGroupsArgs = {
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  distinct?: InputMaybe<ProductGroupScalarFieldEnum>;
  orderBy?: InputMaybe<ProductGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type OrganizationWebsiteGroupsArgs = {
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteGroupScalarFieldEnum>;
  orderBy?: InputMaybe<WebsiteGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteGroupWhereInput>;
};

export type OrganizationCountAggregateOutputType = {
  __typename?: 'OrganizationCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  logoObj: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  telegramApiToken: Scalars['Int'];
  telegramBotId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type OrganizationCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  logoObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  telegramApiToken?: InputMaybe<SortOrder>;
  telegramBotId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrganizationCountOutputType = {
  __typename?: 'OrganizationCountOutputType';
  eventGroups: Scalars['Int'];
  productGroups: Scalars['Int'];
  websiteGroups: Scalars['Int'];
};

export type OrganizationCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutOrganizationsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrganizationCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrganizationCreateManyUserInputEnvelope = {
  data: OrganizationCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrganizationCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrganizationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrganizationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<OrganizationCreateManyUserInputEnvelope>;
};

export type OrganizationCreateNestedOneWithoutEventGroupsInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutEventGroupsInput>;
  create?: InputMaybe<OrganizationUncheckedCreateWithoutEventGroupsInput>;
};

export type OrganizationCreateNestedOneWithoutProductGroupsInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProductGroupsInput>;
  create?: InputMaybe<OrganizationUncheckedCreateWithoutProductGroupsInput>;
};

export type OrganizationCreateNestedOneWithoutWebsiteGroupsInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutWebsiteGroupsInput>;
  create?: InputMaybe<OrganizationUncheckedCreateWithoutWebsiteGroupsInput>;
};

export type OrganizationCreateOrConnectWithoutEventGroupsInput = {
  create: OrganizationUncheckedCreateWithoutEventGroupsInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutProductGroupsInput = {
  create: OrganizationUncheckedCreateWithoutProductGroupsInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutUserInput = {
  create: OrganizationUncheckedCreateWithoutUserInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutWebsiteGroupsInput = {
  create: OrganizationUncheckedCreateWithoutWebsiteGroupsInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateWithoutEventGroupsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutOrganizationsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationCreateWithoutProductGroupsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutOrganizationsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationCreateWithoutUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationCreateWithoutWebsiteGroupsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutOrganizationsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrganizationListRelationFilter = {
  every?: InputMaybe<OrganizationWhereInput>;
  none?: InputMaybe<OrganizationWhereInput>;
  some?: InputMaybe<OrganizationWhereInput>;
};

export type OrganizationMaxAggregateOutputType = {
  __typename?: 'OrganizationMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  telegramApiToken?: Maybe<Scalars['String']>;
  telegramBotId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type OrganizationMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  telegramApiToken?: InputMaybe<SortOrder>;
  telegramBotId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrganizationMinAggregateOutputType = {
  __typename?: 'OrganizationMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  telegramApiToken?: Maybe<Scalars['String']>;
  telegramBotId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type OrganizationMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  telegramApiToken?: InputMaybe<SortOrder>;
  telegramBotId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrganizationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrganizationOrderByWithAggregationInput = {
  _count?: InputMaybe<OrganizationCountOrderByAggregateInput>;
  _max?: InputMaybe<OrganizationMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrganizationMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  logoObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  telegramApiToken?: InputMaybe<SortOrderInput>;
  telegramBotId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
};

export type OrganizationOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  eventGroups?: InputMaybe<EventGroupOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  logoObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  productGroups?: InputMaybe<ProductGroupOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrderInput>;
  telegramApiToken?: InputMaybe<SortOrderInput>;
  telegramBotId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  websiteGroups?: InputMaybe<WebsiteGroupOrderByRelationAggregateInput>;
};

export type OrganizationRelationFilter = {
  is?: InputMaybe<OrganizationWhereInput>;
  isNot?: InputMaybe<OrganizationWhereInput>;
};

export enum OrganizationScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  LogoObj = 'logoObj',
  Name = 'name',
  Slug = 'slug',
  TelegramApiToken = 'telegramApiToken',
  TelegramBotId = 'telegramBotId',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress'
}

export type OrganizationScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  logoObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  telegramApiToken?: InputMaybe<StringNullableFilter>;
  telegramBotId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type OrganizationScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  logoObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  telegramApiToken?: InputMaybe<StringNullableWithAggregatesFilter>;
  telegramBotId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrganizationUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrganizationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrganizationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<OrganizationCreateManyUserInputEnvelope>;
};

export type OrganizationUncheckedCreateWithoutEventGroupsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationUncheckedCreateWithoutProductGroupsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationUncheckedCreateWithoutUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
};

export type OrganizationUncheckedCreateWithoutWebsiteGroupsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  id?: InputMaybe<Scalars['String']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutOrganizationInput>;
  slug?: InputMaybe<Scalars['String']>;
  telegramApiToken?: InputMaybe<Scalars['String']>;
  telegramBotId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrganizationUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationUncheckedUpdateManyWithoutOrganizationsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationUncheckedUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrganizationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrganizationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<OrganizationCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrganizationUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrganizationUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrganizationUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type OrganizationUncheckedUpdateWithoutEventGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUncheckedUpdateWithoutProductGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUncheckedUpdateWithoutUserInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUncheckedUpdateWithoutWebsiteGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutOrganizationsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationUpdateManyWithWhereWithoutUserInput = {
  data: OrganizationUncheckedUpdateManyWithoutOrganizationsInput;
  where: OrganizationScalarWhereInput;
};

export type OrganizationUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrganizationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrganizationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<OrganizationCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrganizationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrganizationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrganizationUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrganizationUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrganizationUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type OrganizationUpdateOneWithoutEventGroupsNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutEventGroupsInput>;
  create?: InputMaybe<OrganizationUncheckedCreateWithoutEventGroupsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrganizationUncheckedUpdateWithoutEventGroupsInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutEventGroupsInput>;
};

export type OrganizationUpdateOneWithoutProductGroupsNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProductGroupsInput>;
  create?: InputMaybe<OrganizationUncheckedCreateWithoutProductGroupsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrganizationUncheckedUpdateWithoutProductGroupsInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutProductGroupsInput>;
};

export type OrganizationUpdateOneWithoutWebsiteGroupsNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutWebsiteGroupsInput>;
  create?: InputMaybe<OrganizationUncheckedCreateWithoutWebsiteGroupsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrganizationUncheckedUpdateWithoutWebsiteGroupsInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutWebsiteGroupsInput>;
};

export type OrganizationUpdateWithWhereUniqueWithoutUserInput = {
  data: OrganizationUncheckedUpdateWithoutUserInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpdateWithoutEventGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutOrganizationsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUpdateWithoutProductGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutOrganizationsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUpdateWithoutUserInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutOrganizationNestedInput>;
};

export type OrganizationUpdateWithoutWebsiteGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutOrganizationNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutOrganizationNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramApiToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramBotId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutOrganizationsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationUpsertWithWhereUniqueWithoutUserInput = {
  create: OrganizationUncheckedCreateWithoutUserInput;
  update: OrganizationUncheckedUpdateWithoutUserInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpsertWithoutEventGroupsInput = {
  create: OrganizationUncheckedCreateWithoutEventGroupsInput;
  update: OrganizationUncheckedUpdateWithoutEventGroupsInput;
};

export type OrganizationUpsertWithoutProductGroupsInput = {
  create: OrganizationUncheckedCreateWithoutProductGroupsInput;
  update: OrganizationUncheckedUpdateWithoutProductGroupsInput;
};

export type OrganizationUpsertWithoutWebsiteGroupsInput = {
  create: OrganizationUncheckedCreateWithoutWebsiteGroupsInput;
  update: OrganizationUncheckedUpdateWithoutWebsiteGroupsInput;
};

export type OrganizationWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrganizationWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<OrganizationWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrganizationWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  eventGroups?: InputMaybe<EventGroupListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  logoObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  productGroups?: InputMaybe<ProductGroupListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  telegramApiToken?: InputMaybe<StringNullableFilter>;
  telegramBotId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteGroups?: InputMaybe<WebsiteGroupListRelationFilter>;
};

export type OrganizationWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type Page = {
  __typename?: 'Page';
  _count: PageCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  content?: Maybe<Scalars['Json']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  pageCollections: Array<PageCollection>;
  pageViews: Array<PageView>;
  password?: Maybe<Scalars['String']>;
  products: Array<Product>;
  requestClicks: Array<RequestClick>;
  requests: Array<Request>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type PagePageCollectionsArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<PageCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<PageCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type PagePageViewsArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<PageViewScalarFieldEnum>;
  orderBy?: InputMaybe<PageViewOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type PageProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type PageRequestClicksArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<RequestClickOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type PageRequestsArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<RequestOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};

export type PageCollection = {
  __typename?: 'PageCollection';
  _count: PageCollectionCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  pages: Array<Page>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type PageCollectionPagesArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<PageOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};

export type PageCollectionCountAggregateOutputType = {
  __typename?: 'PageCollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type PageCollectionCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCollectionCountOutputType = {
  __typename?: 'PageCollectionCountOutputType';
  pages: Scalars['Int'];
};

export type PageCollectionCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPageCollectionsInput>;
};

export type PageCollectionCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCollectionCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCollectionCreateManyWebsiteInputEnvelope = {
  data: PageCollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type PageCollectionCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
};

export type PageCollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
};

export type PageCollectionCreateOrConnectWithoutPagesInput = {
  create: PageCollectionUncheckedCreateWithoutPagesInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionCreateOrConnectWithoutWebsiteInput = {
  create: PageCollectionUncheckedCreateWithoutWebsiteInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPageCollectionsInput>;
};

export type PageCollectionCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCollectionListRelationFilter = {
  every?: InputMaybe<PageCollectionWhereInput>;
  none?: InputMaybe<PageCollectionWhereInput>;
  some?: InputMaybe<PageCollectionWhereInput>;
};

export type PageCollectionMaxAggregateOutputType = {
  __typename?: 'PageCollectionMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageCollectionMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCollectionMinAggregateOutputType = {
  __typename?: 'PageCollectionMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageCollectionMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PageCollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<PageCollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<PageCollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<PageCollectionMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type PageCollectionOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  pages?: InputMaybe<PageOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum PageCollectionScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type PageCollectionScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type PageCollectionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PageCollectionUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCollectionUncheckedCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
};

export type PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
};

export type PageCollectionUncheckedCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCollectionUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCollectionUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutPageCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUncheckedUpdateManyWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUncheckedUpdateManyWithoutPagesNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageCollectionUncheckedUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutPageCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageCollectionUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutPageCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPageCollectionsNestedInput>;
};

export type PageCollectionUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageCollectionUpdateManyWithWhereWithoutPagesInput = {
  data: PageCollectionUncheckedUpdateManyWithoutPageCollectionsInput;
  where: PageCollectionScalarWhereInput;
};

export type PageCollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: PageCollectionUncheckedUpdateManyWithoutPageCollectionsInput;
  where: PageCollectionScalarWhereInput;
};

export type PageCollectionUpdateManyWithoutPagesNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type PageCollectionUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageCollectionUpdateWithWhereUniqueWithoutPagesInput = {
  data: PageCollectionUncheckedUpdateWithoutPagesInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: PageCollectionUncheckedUpdateWithoutWebsiteInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPageCollectionsNestedInput>;
};

export type PageCollectionUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutPageCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageCollectionUpsertWithWhereUniqueWithoutPagesInput = {
  create: PageCollectionUncheckedCreateWithoutPagesInput;
  update: PageCollectionUncheckedUpdateWithoutPagesInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: PageCollectionUncheckedCreateWithoutWebsiteInput;
  update: PageCollectionUncheckedUpdateWithoutWebsiteInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageCollectionWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageCollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageCollectionWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  pages?: InputMaybe<PageListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type PageCollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type PageCountAggregateOutputType = {
  __typename?: 'PageCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  externalUrl: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  isExternalLink: Scalars['Int'];
  isIndex: Scalars['Int'];
  menu: Scalars['Int'];
  name: Scalars['Int'];
  navColor: Scalars['Int'];
  password: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type PageCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCountOutputType = {
  __typename?: 'PageCountOutputType';
  pageCollections: Scalars['Int'];
  pageViews: Scalars['Int'];
  products: Scalars['Int'];
  requestClicks: Scalars['Int'];
  requests: Scalars['Int'];
};

export type PageCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateManyWebsiteInputEnvelope = {
  data: PageCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type PageCreateNestedManyWithoutPageCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
};

export type PageCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutProductsInput>>>;
};

export type PageCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
};

export type PageCreateNestedOneWithoutPageViewsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutPageViewsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutPageViewsInput>;
};

export type PageCreateNestedOneWithoutRequestClicksInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestClicksInput>;
};

export type PageCreateNestedOneWithoutRequestsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestsInput>;
};

export type PageCreateOrConnectWithoutPageCollectionsInput = {
  create: PageUncheckedCreateWithoutPageCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageCreateOrConnectWithoutPageViewsInput = {
  create: PageUncheckedCreateWithoutPageViewsInput;
  where: PageWhereUniqueInput;
};

export type PageCreateOrConnectWithoutProductsInput = {
  create: PageUncheckedCreateWithoutProductsInput;
  where: PageWhereUniqueInput;
};

export type PageCreateOrConnectWithoutRequestClicksInput = {
  create: PageUncheckedCreateWithoutRequestClicksInput;
  where: PageWhereUniqueInput;
};

export type PageCreateOrConnectWithoutRequestsInput = {
  create: PageUncheckedCreateWithoutRequestsInput;
  where: PageWhereUniqueInput;
};

export type PageCreateOrConnectWithoutWebsiteInput = {
  create: PageUncheckedCreateWithoutWebsiteInput;
  where: PageWhereUniqueInput;
};

export type PageCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutPageViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPagesInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageListRelationFilter = {
  every?: InputMaybe<PageWhereInput>;
  none?: InputMaybe<PageWhereInput>;
  some?: InputMaybe<PageWhereInput>;
};

export type PageMaxAggregateOutputType = {
  __typename?: 'PageMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageMinAggregateOutputType = {
  __typename?: 'PageMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PageOrderByWithAggregationInput = {
  _count?: InputMaybe<PageCountOrderByAggregateInput>;
  _max?: InputMaybe<PageMaxOrderByAggregateInput>;
  _min?: InputMaybe<PageMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalLink?: InputMaybe<SortOrderInput>;
  isIndex?: InputMaybe<SortOrderInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  navColor?: InputMaybe<SortOrderInput>;
  password?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type PageOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalLink?: InputMaybe<SortOrderInput>;
  isIndex?: InputMaybe<SortOrderInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  navColor?: InputMaybe<SortOrderInput>;
  pageCollections?: InputMaybe<PageCollectionOrderByRelationAggregateInput>;
  pageViews?: InputMaybe<PageViewOrderByRelationAggregateInput>;
  password?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  requestClicks?: InputMaybe<RequestClickOrderByRelationAggregateInput>;
  requests?: InputMaybe<RequestOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type PageRelationFilter = {
  is?: InputMaybe<PageWhereInput>;
  isNot?: InputMaybe<PageWhereInput>;
};

export enum PageScalarFieldEnum {
  Active = 'active',
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExternalUrl = 'externalUrl',
  Id = 'id',
  ImageObj = 'imageObj',
  IsExternalLink = 'isExternalLink',
  IsIndex = 'isIndex',
  Menu = 'menu',
  Name = 'name',
  NavColor = 'navColor',
  Password = 'password',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type PageScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalLink?: InputMaybe<BoolNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  password?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type PageScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<PageScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  isExternalLink?: InputMaybe<BoolNullableWithAggregatesFilter>;
  isIndex?: InputMaybe<BoolNullableWithAggregatesFilter>;
  menu?: InputMaybe<BoolNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  navColor?: InputMaybe<EnumNavColorNullableWithAggregatesFilter>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PageUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateNestedManyWithoutPageCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
};

export type PageUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutProductsInput>>>;
};

export type PageUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
};

export type PageUncheckedCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateWithoutPageViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPagesInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  password?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateManyWithoutPageCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutPageCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutPageCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutPageCollectionsInput>>>;
};

export type PageUncheckedUpdateManyWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type PageUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageUncheckedUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateWithoutPageViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPagesNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesNestedInput>;
};

export type PageUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageUpdateManyWithWhereWithoutPageCollectionsInput = {
  data: PageUncheckedUpdateManyWithoutPagesInput;
  where: PageScalarWhereInput;
};

export type PageUpdateManyWithWhereWithoutProductsInput = {
  data: PageUncheckedUpdateManyWithoutPagesInput;
  where: PageScalarWhereInput;
};

export type PageUpdateManyWithWhereWithoutWebsiteInput = {
  data: PageUncheckedUpdateManyWithoutPagesInput;
  where: PageScalarWhereInput;
};

export type PageUpdateManyWithoutPageCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutPageCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutPageCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutPageCollectionsInput>>>;
};

export type PageUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type PageUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageUpdateOneWithoutPageViewsNestedInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutPageViewsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutPageViewsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PageUncheckedUpdateWithoutPageViewsInput>;
  upsert?: InputMaybe<PageUpsertWithoutPageViewsInput>;
};

export type PageUpdateOneWithoutRequestClicksNestedInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestClicksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PageUncheckedUpdateWithoutRequestClicksInput>;
  upsert?: InputMaybe<PageUpsertWithoutRequestClicksInput>;
};

export type PageUpdateOneWithoutRequestsNestedInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PageUncheckedUpdateWithoutRequestsInput>;
  upsert?: InputMaybe<PageUpsertWithoutRequestsInput>;
};

export type PageUpdateWithWhereUniqueWithoutPageCollectionsInput = {
  data: PageUncheckedUpdateWithoutPageCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageUpdateWithWhereUniqueWithoutProductsInput = {
  data: PageUncheckedUpdateWithoutProductsInput;
  where: PageWhereUniqueInput;
};

export type PageUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: PageUncheckedUpdateWithoutWebsiteInput;
  where: PageWhereUniqueInput;
};

export type PageUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesNestedInput>;
};

export type PageUpdateWithoutPageViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesNestedInput>;
};

export type PageUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesNestedInput>;
};

export type PageUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPagesNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesNestedInput>;
};

export type PageUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesNestedInput>;
};

export type PageUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesNestedInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPagesNestedInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageUpsertWithWhereUniqueWithoutPageCollectionsInput = {
  create: PageUncheckedCreateWithoutPageCollectionsInput;
  update: PageUncheckedUpdateWithoutPageCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageUpsertWithWhereUniqueWithoutProductsInput = {
  create: PageUncheckedCreateWithoutProductsInput;
  update: PageUncheckedUpdateWithoutProductsInput;
  where: PageWhereUniqueInput;
};

export type PageUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: PageUncheckedCreateWithoutWebsiteInput;
  update: PageUncheckedUpdateWithoutWebsiteInput;
  where: PageWhereUniqueInput;
};

export type PageUpsertWithoutPageViewsInput = {
  create: PageUncheckedCreateWithoutPageViewsInput;
  update: PageUncheckedUpdateWithoutPageViewsInput;
};

export type PageUpsertWithoutRequestClicksInput = {
  create: PageUncheckedCreateWithoutRequestClicksInput;
  update: PageUncheckedUpdateWithoutRequestClicksInput;
};

export type PageUpsertWithoutRequestsInput = {
  create: PageUncheckedCreateWithoutRequestsInput;
  update: PageUncheckedUpdateWithoutRequestsInput;
};

export type PageView = {
  __typename?: 'PageView';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  ip?: Maybe<Scalars['String']>;
  page?: Maybe<Page>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type PageViewCountAggregateOutputType = {
  __typename?: 'PageViewCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  pageId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type PageViewCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageViewCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutPageViewsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewCreateManyPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewCreateManyPageInputEnvelope = {
  data: PageViewCreateManyPageInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type PageViewCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
};

export type PageViewCreateOrConnectWithoutPageInput = {
  create: PageViewUncheckedCreateWithoutPageInput;
  where: PageViewWhereUniqueInput;
};

export type PageViewCreateWithoutPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewListRelationFilter = {
  every?: InputMaybe<PageViewWhereInput>;
  none?: InputMaybe<PageViewWhereInput>;
  some?: InputMaybe<PageViewWhereInput>;
};

export type PageViewMaxAggregateOutputType = {
  __typename?: 'PageViewMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type PageViewMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageViewMinAggregateOutputType = {
  __typename?: 'PageViewMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type PageViewMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageViewOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PageViewOrderByWithAggregationInput = {
  _count?: InputMaybe<PageViewCountOrderByAggregateInput>;
  _max?: InputMaybe<PageViewMaxOrderByAggregateInput>;
  _min?: InputMaybe<PageViewMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  pageId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type PageViewOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  page?: InputMaybe<PageOrderByWithRelationInput>;
  pageId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export enum PageViewScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Ip = 'ip',
  PageId = 'pageId',
  UpdatedAt = 'updatedAt'
}

export type PageViewScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type PageViewScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<PageViewScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageViewScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageViewScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  pageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type PageViewUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewUncheckedCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
};

export type PageViewUncheckedCreateWithoutPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageViewUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageViewUncheckedUpdateManyWithoutPageNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageViewUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageViewUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageViewUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type PageViewUncheckedUpdateManyWithoutPageViewsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageViewUncheckedUpdateWithoutPageInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutPageViewsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpdateManyWithWhereWithoutPageInput = {
  data: PageViewUncheckedUpdateManyWithoutPageViewsInput;
  where: PageViewScalarWhereInput;
};

export type PageViewUpdateManyWithoutPageNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageViewUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageViewUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageViewUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type PageViewUpdateWithWhereUniqueWithoutPageInput = {
  data: PageViewUncheckedUpdateWithoutPageInput;
  where: PageViewWhereUniqueInput;
};

export type PageViewUpdateWithoutPageInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpsertWithWhereUniqueWithoutPageInput = {
  create: PageViewUncheckedCreateWithoutPageInput;
  update: PageViewUncheckedUpdateWithoutPageInput;
  where: PageViewWhereUniqueInput;
};

export type PageViewWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageViewWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageViewWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageViewWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  page?: InputMaybe<PageWhereInput>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type PageViewWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type PageWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<PageWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalLink?: InputMaybe<BoolNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  pageCollections?: InputMaybe<PageCollectionListRelationFilter>;
  pageViews?: InputMaybe<PageViewListRelationFilter>;
  password?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  requestClicks?: InputMaybe<RequestClickListRelationFilter>;
  requests?: InputMaybe<RequestListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type PageWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export enum PaymentType {
  Crypto = 'crypto',
  Stripe = 'stripe'
}

export type Product = {
  __typename?: 'Product';
  _count: ProductCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  attachments: Array<Attachment>;
  chain?: Maybe<Chain>;
  commissionFee?: Maybe<Scalars['Float']>;
  content?: Maybe<Scalars['Json']>;
  contractAddress?: Maybe<Scalars['String']>;
  coupons: Array<Coupon>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventEndTime?: Maybe<Scalars['DateTime']>;
  eventStartTime?: Maybe<Scalars['DateTime']>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  gallery?: Maybe<Scalars['Json']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  marketingLocations: Array<MarketingLocation>;
  maxQuantity?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  orderedProducts: Array<OrderedProduct>;
  pages: Array<Page>;
  price?: Maybe<Scalars['Float']>;
  productCollections: Array<ProductCollection>;
  productGroups: Array<ProductGroup>;
  productType?: Maybe<ProductType>;
  prodyctType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  salePrice?: Maybe<Scalars['Float']>;
  slug?: Maybe<Scalars['String']>;
  startTime?: Maybe<Scalars['DateTime']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  useCommission?: Maybe<Scalars['Boolean']>;
  useExternalNft?: Maybe<Scalars['Boolean']>;
  useNft?: Maybe<Scalars['Boolean']>;
  useQuantity?: Maybe<Scalars['Boolean']>;
  useRoyalty?: Maybe<Scalars['Boolean']>;
  useStartTime?: Maybe<Scalars['Boolean']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  useVariations?: Maybe<Scalars['Boolean']>;
  variationOptions?: Maybe<Scalars['Json']>;
  variations?: Maybe<Scalars['Json']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type ProductAttachmentsArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<AttachmentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type ProductCouponsArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<CouponScalarFieldEnum>;
  orderBy?: InputMaybe<CouponOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type ProductMarketingLocationsArgs = {
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  distinct?: InputMaybe<MarketingLocationScalarFieldEnum>;
  orderBy?: InputMaybe<MarketingLocationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type ProductOrderedProductsArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type ProductPagesArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<PageOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type ProductProductCollectionsArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<ProductCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<ProductCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type ProductProductGroupsArgs = {
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  distinct?: InputMaybe<ProductGroupScalarFieldEnum>;
  orderBy?: InputMaybe<ProductGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductGroupWhereInput>;
};

export type ProductAvgAggregateOutputType = {
  __typename?: 'ProductAvgAggregateOutputType';
  commissionFee?: Maybe<Scalars['Float']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxQuantity?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  quantitySold?: Maybe<Scalars['Float']>;
  royaltyFee?: Maybe<Scalars['Float']>;
  salePrice?: Maybe<Scalars['Float']>;
};

export type ProductAvgOrderByAggregateInput = {
  commissionFee?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
};

export type ProductCollection = {
  __typename?: 'ProductCollection';
  _count: ProductCollectionCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  products: Array<Product>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type ProductCollectionProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductCollectionCountAggregateOutputType = {
  __typename?: 'ProductCollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type ProductCollectionCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCollectionCountOutputType = {
  __typename?: 'ProductCollectionCountOutputType';
  products: Scalars['Int'];
};

export type ProductCollectionCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductCollectionsInput>;
};

export type ProductCollectionCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCollectionCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCollectionCreateManyWebsiteInputEnvelope = {
  data: ProductCollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCollectionCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
};

export type ProductCollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
};

export type ProductCollectionCreateOrConnectWithoutProductsInput = {
  create: ProductCollectionUncheckedCreateWithoutProductsInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionCreateOrConnectWithoutWebsiteInput = {
  create: ProductCollectionUncheckedCreateWithoutWebsiteInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductCollectionsInput>;
};

export type ProductCollectionCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCollectionListRelationFilter = {
  every?: InputMaybe<ProductCollectionWhereInput>;
  none?: InputMaybe<ProductCollectionWhereInput>;
  some?: InputMaybe<ProductCollectionWhereInput>;
};

export type ProductCollectionMaxAggregateOutputType = {
  __typename?: 'ProductCollectionMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ProductCollectionMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCollectionMinAggregateOutputType = {
  __typename?: 'ProductCollectionMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ProductCollectionMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductCollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<ProductCollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductCollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductCollectionMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type ProductCollectionOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum ProductCollectionScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type ProductCollectionScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ProductCollectionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProductCollectionUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCollectionUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
};

export type ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
};

export type ProductCollectionUncheckedCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCollectionUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCollectionUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutProductCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUncheckedUpdateManyWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductCollectionUncheckedUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutProductCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCollectionUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutProductCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductCollectionsNestedInput>;
};

export type ProductCollectionUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCollectionUpdateManyWithWhereWithoutProductsInput = {
  data: ProductCollectionUncheckedUpdateManyWithoutProductCollectionsInput;
  where: ProductCollectionScalarWhereInput;
};

export type ProductCollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: ProductCollectionUncheckedUpdateManyWithoutProductCollectionsInput;
  where: ProductCollectionScalarWhereInput;
};

export type ProductCollectionUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type ProductCollectionUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductCollectionUpdateWithWhereUniqueWithoutProductsInput = {
  data: ProductCollectionUncheckedUpdateWithoutProductsInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: ProductCollectionUncheckedUpdateWithoutWebsiteInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductCollectionsNestedInput>;
};

export type ProductCollectionUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutProductCollectionsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCollectionUpsertWithWhereUniqueWithoutProductsInput = {
  create: ProductCollectionUncheckedCreateWithoutProductsInput;
  update: ProductCollectionUncheckedUpdateWithoutProductsInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: ProductCollectionUncheckedCreateWithoutWebsiteInput;
  update: ProductCollectionUncheckedUpdateWithoutWebsiteInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductCollectionWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductCollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductCollectionWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ProductCollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type ProductCountAggregateOutputType = {
  __typename?: 'ProductCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  chain: Scalars['Int'];
  commissionFee: Scalars['Int'];
  content: Scalars['Int'];
  contractAddress: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  endTime: Scalars['Int'];
  eventEndTime: Scalars['Int'];
  eventStartTime: Scalars['Int'];
  externalNftChain: Scalars['Int'];
  externalNftContractAddress: Scalars['Int'];
  externalUrl: Scalars['Int'];
  gallery: Scalars['Int'];
  hasLocation: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  locationAddress: Scalars['Int'];
  locationLat: Scalars['Int'];
  locationLng: Scalars['Int'];
  maxQuantity: Scalars['Int'];
  name: Scalars['Int'];
  price: Scalars['Int'];
  productType: Scalars['Int'];
  prodyctType: Scalars['Int'];
  quantity: Scalars['Int'];
  quantitySold: Scalars['Int'];
  royaltyFee: Scalars['Int'];
  salePrice: Scalars['Int'];
  slug: Scalars['Int'];
  startTime: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  useCommission: Scalars['Int'];
  useExternalNft: Scalars['Int'];
  useNft: Scalars['Int'];
  useQuantity: Scalars['Int'];
  useRoyalty: Scalars['Int'];
  useStartTime: Scalars['Int'];
  useUsd: Scalars['Int'];
  useVariations: Scalars['Int'];
  variationOptions: Scalars['Int'];
  variations: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type ProductCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  commissionFee?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  contractAddress?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventEndTime?: InputMaybe<SortOrder>;
  eventStartTime?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  gallery?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  prodyctType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  useCommission?: InputMaybe<SortOrder>;
  useExternalNft?: InputMaybe<SortOrder>;
  useNft?: InputMaybe<SortOrder>;
  useQuantity?: InputMaybe<SortOrder>;
  useRoyalty?: InputMaybe<SortOrder>;
  useStartTime?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  useVariations?: InputMaybe<SortOrder>;
  variationOptions?: InputMaybe<SortOrder>;
  variations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCountOutputType = {
  __typename?: 'ProductCountOutputType';
  attachments: Scalars['Int'];
  coupons: Scalars['Int'];
  marketingLocations: Scalars['Int'];
  orderedProducts: Scalars['Int'];
  pages: Scalars['Int'];
  productCollections: Scalars['Int'];
  productGroups: Scalars['Int'];
};

export type ProductCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type ProductCreateManyWebsiteInputEnvelope = {
  data: ProductCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCreateNestedManyWithoutCouponsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCouponsInput>>>;
};

export type ProductCreateNestedManyWithoutMarketingLocationsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutMarketingLocationsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutMarketingLocationsInput>>>;
};

export type ProductCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPagesInput>>>;
};

export type ProductCreateNestedManyWithoutProductCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
};

export type ProductCreateNestedManyWithoutProductGroupsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductGroupsInput>>>;
};

export type ProductCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
};

export type ProductCreateNestedOneWithoutAttachmentsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutAttachmentsInput>;
};

export type ProductCreateNestedOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutOrderedProductsInput>;
};

export type ProductCreateOrConnectWithoutAttachmentsInput = {
  create: ProductUncheckedCreateWithoutAttachmentsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutCouponsInput = {
  create: ProductUncheckedCreateWithoutCouponsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutMarketingLocationsInput = {
  create: ProductUncheckedCreateWithoutMarketingLocationsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutOrderedProductsInput = {
  create: ProductUncheckedCreateWithoutOrderedProductsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutPagesInput = {
  create: ProductUncheckedCreateWithoutPagesInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutProductCollectionsInput = {
  create: ProductUncheckedCreateWithoutProductCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutProductGroupsInput = {
  create: ProductUncheckedCreateWithoutProductGroupsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutWebsiteInput = {
  create: ProductUncheckedCreateWithoutWebsiteInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateWithoutMarketingLocationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateWithoutProductGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
};

export type ProductCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type ProductGroup = {
  __typename?: 'ProductGroup';
  _count: ProductGroupCountOutputType;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  organization?: Maybe<Organization>;
  organizationId?: Maybe<Scalars['String']>;
  products: Array<Product>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type ProductGroupProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductGroupCountAggregateOutputType = {
  __typename?: 'ProductGroupCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  organizationId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type ProductGroupCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductGroupCountOutputType = {
  __typename?: 'ProductGroupCountOutputType';
  products: Scalars['Int'];
};

export type ProductGroupCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutProductGroupsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutProductGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductGroupsInput>;
};

export type ProductGroupCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductGroupCreateManyOrganizationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductGroupCreateManyOrganizationInputEnvelope = {
  data: ProductGroupCreateManyOrganizationInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductGroupCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductGroupCreateManyWebsiteInputEnvelope = {
  data: ProductGroupCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductGroupCreateNestedManyWithoutOrganizationInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyOrganizationInputEnvelope>;
};

export type ProductGroupCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutProductsInput>>>;
};

export type ProductGroupCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyWebsiteInputEnvelope>;
};

export type ProductGroupCreateOrConnectWithoutOrganizationInput = {
  create: ProductGroupUncheckedCreateWithoutOrganizationInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupCreateOrConnectWithoutProductsInput = {
  create: ProductGroupUncheckedCreateWithoutProductsInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupCreateOrConnectWithoutWebsiteInput = {
  create: ProductGroupUncheckedCreateWithoutWebsiteInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupCreateWithoutOrganizationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutProductGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductGroupsInput>;
};

export type ProductGroupCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutProductGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductGroupsInput>;
};

export type ProductGroupCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutProductGroupsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutProductGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductGroupListRelationFilter = {
  every?: InputMaybe<ProductGroupWhereInput>;
  none?: InputMaybe<ProductGroupWhereInput>;
  some?: InputMaybe<ProductGroupWhereInput>;
};

export type ProductGroupMaxAggregateOutputType = {
  __typename?: 'ProductGroupMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ProductGroupMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductGroupMinAggregateOutputType = {
  __typename?: 'ProductGroupMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ProductGroupMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductGroupOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductGroupOrderByWithAggregationInput = {
  _count?: InputMaybe<ProductGroupCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductGroupMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductGroupMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  organizationId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type ProductGroupOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  organization?: InputMaybe<OrganizationOrderByWithRelationInput>;
  organizationId?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum ProductGroupScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  OrganizationId = 'organizationId',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type ProductGroupScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  organizationId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ProductGroupScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  organizationId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProductGroupUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutProductGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductGroupUncheckedCreateNestedManyWithoutOrganizationInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyOrganizationInputEnvelope>;
};

export type ProductGroupUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutProductsInput>>>;
};

export type ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyWebsiteInputEnvelope>;
};

export type ProductGroupUncheckedCreateWithoutOrganizationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutProductGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductGroupUncheckedCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductGroupUncheckedCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutProductGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductGroupUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutProductGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGroupUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGroupUncheckedUpdateManyWithoutOrganizationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyOrganizationInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductGroupUpdateWithWhereUniqueWithoutOrganizationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductGroupUpdateManyWithWhereWithoutOrganizationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductGroupUpsertWithWhereUniqueWithoutOrganizationInput>>>;
};

export type ProductGroupUncheckedUpdateManyWithoutProductGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGroupUncheckedUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductGroupUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductGroupUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductGroupUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductGroupUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductGroupUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductGroupUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductGroupUncheckedUpdateWithoutOrganizationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutProductGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGroupUncheckedUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGroupUncheckedUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutProductGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductGroupUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutProductGroupsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutProductGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductGroupsNestedInput>;
};

export type ProductGroupUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductGroupUpdateManyWithWhereWithoutOrganizationInput = {
  data: ProductGroupUncheckedUpdateManyWithoutProductGroupsInput;
  where: ProductGroupScalarWhereInput;
};

export type ProductGroupUpdateManyWithWhereWithoutProductsInput = {
  data: ProductGroupUncheckedUpdateManyWithoutProductGroupsInput;
  where: ProductGroupScalarWhereInput;
};

export type ProductGroupUpdateManyWithWhereWithoutWebsiteInput = {
  data: ProductGroupUncheckedUpdateManyWithoutProductGroupsInput;
  where: ProductGroupScalarWhereInput;
};

export type ProductGroupUpdateManyWithoutOrganizationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyOrganizationInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductGroupUpdateWithWhereUniqueWithoutOrganizationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductGroupUpdateManyWithWhereWithoutOrganizationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductGroupUpsertWithWhereUniqueWithoutOrganizationInput>>>;
};

export type ProductGroupUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductGroupUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductGroupUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductGroupUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type ProductGroupUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductGroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductGroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductGroupCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductGroupUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductGroupUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductGroupUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductGroupUpdateWithWhereUniqueWithoutOrganizationInput = {
  data: ProductGroupUncheckedUpdateWithoutOrganizationInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupUpdateWithWhereUniqueWithoutProductsInput = {
  data: ProductGroupUncheckedUpdateWithoutProductsInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: ProductGroupUncheckedUpdateWithoutWebsiteInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupUpdateWithoutOrganizationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutProductGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductGroupsNestedInput>;
};

export type ProductGroupUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutProductGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductGroupsNestedInput>;
};

export type ProductGroupUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutProductGroupsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutProductGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductGroupUpsertWithWhereUniqueWithoutOrganizationInput = {
  create: ProductGroupUncheckedCreateWithoutOrganizationInput;
  update: ProductGroupUncheckedUpdateWithoutOrganizationInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupUpsertWithWhereUniqueWithoutProductsInput = {
  create: ProductGroupUncheckedCreateWithoutProductsInput;
  update: ProductGroupUncheckedUpdateWithoutProductsInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: ProductGroupUncheckedCreateWithoutWebsiteInput;
  update: ProductGroupUncheckedUpdateWithoutWebsiteInput;
  where: ProductGroupWhereUniqueInput;
};

export type ProductGroupWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductGroupWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductGroupWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductGroupWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  organization?: InputMaybe<OrganizationWhereInput>;
  organizationId?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ProductGroupWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type ProductListRelationFilter = {
  every?: InputMaybe<ProductWhereInput>;
  none?: InputMaybe<ProductWhereInput>;
  some?: InputMaybe<ProductWhereInput>;
};

export type ProductMaxAggregateOutputType = {
  __typename?: 'ProductMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  chain?: Maybe<Chain>;
  commissionFee?: Maybe<Scalars['Float']>;
  contractAddress?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventEndTime?: Maybe<Scalars['DateTime']>;
  eventStartTime?: Maybe<Scalars['DateTime']>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxQuantity?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productType?: Maybe<ProductType>;
  prodyctType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  salePrice?: Maybe<Scalars['Float']>;
  slug?: Maybe<Scalars['String']>;
  startTime?: Maybe<Scalars['DateTime']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  useCommission?: Maybe<Scalars['Boolean']>;
  useExternalNft?: Maybe<Scalars['Boolean']>;
  useNft?: Maybe<Scalars['Boolean']>;
  useQuantity?: Maybe<Scalars['Boolean']>;
  useRoyalty?: Maybe<Scalars['Boolean']>;
  useStartTime?: Maybe<Scalars['Boolean']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  useVariations?: Maybe<Scalars['Boolean']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ProductMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  commissionFee?: InputMaybe<SortOrder>;
  contractAddress?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventEndTime?: InputMaybe<SortOrder>;
  eventStartTime?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  prodyctType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  useCommission?: InputMaybe<SortOrder>;
  useExternalNft?: InputMaybe<SortOrder>;
  useNft?: InputMaybe<SortOrder>;
  useQuantity?: InputMaybe<SortOrder>;
  useRoyalty?: InputMaybe<SortOrder>;
  useStartTime?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  useVariations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductMinAggregateOutputType = {
  __typename?: 'ProductMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  chain?: Maybe<Chain>;
  commissionFee?: Maybe<Scalars['Float']>;
  contractAddress?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  endTime?: Maybe<Scalars['DateTime']>;
  eventEndTime?: Maybe<Scalars['DateTime']>;
  eventStartTime?: Maybe<Scalars['DateTime']>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxQuantity?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productType?: Maybe<ProductType>;
  prodyctType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  salePrice?: Maybe<Scalars['Float']>;
  slug?: Maybe<Scalars['String']>;
  startTime?: Maybe<Scalars['DateTime']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  useCommission?: Maybe<Scalars['Boolean']>;
  useExternalNft?: Maybe<Scalars['Boolean']>;
  useNft?: Maybe<Scalars['Boolean']>;
  useQuantity?: Maybe<Scalars['Boolean']>;
  useRoyalty?: Maybe<Scalars['Boolean']>;
  useStartTime?: Maybe<Scalars['Boolean']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  useVariations?: Maybe<Scalars['Boolean']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ProductMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  commissionFee?: InputMaybe<SortOrder>;
  contractAddress?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  endTime?: InputMaybe<SortOrder>;
  eventEndTime?: InputMaybe<SortOrder>;
  eventStartTime?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  prodyctType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  startTime?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  useCommission?: InputMaybe<SortOrder>;
  useExternalNft?: InputMaybe<SortOrder>;
  useNft?: InputMaybe<SortOrder>;
  useQuantity?: InputMaybe<SortOrder>;
  useRoyalty?: InputMaybe<SortOrder>;
  useStartTime?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  useVariations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  chain?: InputMaybe<SortOrderInput>;
  commissionFee?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  contractAddress?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  endTime?: InputMaybe<SortOrderInput>;
  eventEndTime?: InputMaybe<SortOrderInput>;
  eventStartTime?: InputMaybe<SortOrderInput>;
  externalNftChain?: InputMaybe<SortOrderInput>;
  externalNftContractAddress?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  gallery?: InputMaybe<SortOrderInput>;
  hasLocation?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  maxQuantity?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  productType?: InputMaybe<SortOrderInput>;
  prodyctType?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  quantitySold?: InputMaybe<SortOrderInput>;
  royaltyFee?: InputMaybe<SortOrderInput>;
  salePrice?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  startTime?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  useCommission?: InputMaybe<SortOrderInput>;
  useExternalNft?: InputMaybe<SortOrderInput>;
  useNft?: InputMaybe<SortOrderInput>;
  useQuantity?: InputMaybe<SortOrderInput>;
  useRoyalty?: InputMaybe<SortOrderInput>;
  useStartTime?: InputMaybe<SortOrderInput>;
  useUsd?: InputMaybe<SortOrderInput>;
  useVariations?: InputMaybe<SortOrderInput>;
  variationOptions?: InputMaybe<SortOrderInput>;
  variations?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type ProductOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  attachments?: InputMaybe<AttachmentOrderByRelationAggregateInput>;
  chain?: InputMaybe<SortOrderInput>;
  commissionFee?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  contractAddress?: InputMaybe<SortOrderInput>;
  coupons?: InputMaybe<CouponOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  endTime?: InputMaybe<SortOrderInput>;
  eventEndTime?: InputMaybe<SortOrderInput>;
  eventStartTime?: InputMaybe<SortOrderInput>;
  externalNftChain?: InputMaybe<SortOrderInput>;
  externalNftContractAddress?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  gallery?: InputMaybe<SortOrderInput>;
  hasLocation?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  marketingLocations?: InputMaybe<MarketingLocationOrderByRelationAggregateInput>;
  maxQuantity?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  orderedProducts?: InputMaybe<OrderedProductOrderByRelationAggregateInput>;
  pages?: InputMaybe<PageOrderByRelationAggregateInput>;
  price?: InputMaybe<SortOrderInput>;
  productCollections?: InputMaybe<ProductCollectionOrderByRelationAggregateInput>;
  productGroups?: InputMaybe<ProductGroupOrderByRelationAggregateInput>;
  productType?: InputMaybe<SortOrderInput>;
  prodyctType?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  quantitySold?: InputMaybe<SortOrderInput>;
  royaltyFee?: InputMaybe<SortOrderInput>;
  salePrice?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  startTime?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  useCommission?: InputMaybe<SortOrderInput>;
  useExternalNft?: InputMaybe<SortOrderInput>;
  useNft?: InputMaybe<SortOrderInput>;
  useQuantity?: InputMaybe<SortOrderInput>;
  useRoyalty?: InputMaybe<SortOrderInput>;
  useStartTime?: InputMaybe<SortOrderInput>;
  useUsd?: InputMaybe<SortOrderInput>;
  useVariations?: InputMaybe<SortOrderInput>;
  variationOptions?: InputMaybe<SortOrderInput>;
  variations?: InputMaybe<SortOrderInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type ProductRelationFilter = {
  is?: InputMaybe<ProductWhereInput>;
  isNot?: InputMaybe<ProductWhereInput>;
};

export enum ProductScalarFieldEnum {
  Active = 'active',
  Chain = 'chain',
  CommissionFee = 'commissionFee',
  Content = 'content',
  ContractAddress = 'contractAddress',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EndTime = 'endTime',
  EventEndTime = 'eventEndTime',
  EventStartTime = 'eventStartTime',
  ExternalNftChain = 'externalNftChain',
  ExternalNftContractAddress = 'externalNftContractAddress',
  ExternalUrl = 'externalUrl',
  Gallery = 'gallery',
  HasLocation = 'hasLocation',
  Id = 'id',
  ImageObj = 'imageObj',
  LocationAddress = 'locationAddress',
  LocationLat = 'locationLat',
  LocationLng = 'locationLng',
  MaxQuantity = 'maxQuantity',
  Name = 'name',
  Price = 'price',
  ProductType = 'productType',
  ProdyctType = 'prodyctType',
  Quantity = 'quantity',
  QuantitySold = 'quantitySold',
  RoyaltyFee = 'royaltyFee',
  SalePrice = 'salePrice',
  Slug = 'slug',
  StartTime = 'startTime',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  UseCommission = 'useCommission',
  UseExternalNft = 'useExternalNft',
  UseNft = 'useNft',
  UseQuantity = 'useQuantity',
  UseRoyalty = 'useRoyalty',
  UseStartTime = 'useStartTime',
  UseUsd = 'useUsd',
  UseVariations = 'useVariations',
  VariationOptions = 'variationOptions',
  Variations = 'variations',
  WebsiteId = 'websiteId'
}

export type ProductScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  chain?: InputMaybe<EnumChainNullableFilter>;
  commissionFee?: InputMaybe<FloatNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  contractAddress?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  endTime?: InputMaybe<DateTimeNullableFilter>;
  eventEndTime?: InputMaybe<DateTimeNullableFilter>;
  eventStartTime?: InputMaybe<DateTimeNullableFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  gallery?: InputMaybe<JsonNullableFilter>;
  hasLocation?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  maxQuantity?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  prodyctType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  quantitySold?: InputMaybe<IntNullableFilter>;
  royaltyFee?: InputMaybe<IntNullableFilter>;
  salePrice?: InputMaybe<FloatNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  startTime?: InputMaybe<DateTimeNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  useCommission?: InputMaybe<BoolNullableFilter>;
  useExternalNft?: InputMaybe<BoolNullableFilter>;
  useNft?: InputMaybe<BoolNullableFilter>;
  useQuantity?: InputMaybe<BoolNullableFilter>;
  useRoyalty?: InputMaybe<BoolNullableFilter>;
  useStartTime?: InputMaybe<BoolNullableFilter>;
  useUsd?: InputMaybe<BoolNullableFilter>;
  useVariations?: InputMaybe<BoolNullableFilter>;
  variationOptions?: InputMaybe<JsonNullableFilter>;
  variations?: InputMaybe<JsonNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ProductScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  chain?: InputMaybe<EnumChainNullableWithAggregatesFilter>;
  commissionFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  contractAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  endTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  eventEndTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  eventStartTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableWithAggregatesFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  gallery?: InputMaybe<JsonNullableWithAggregatesFilter>;
  hasLocation?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  locationAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  locationLat?: InputMaybe<FloatNullableWithAggregatesFilter>;
  locationLng?: InputMaybe<FloatNullableWithAggregatesFilter>;
  maxQuantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  price?: InputMaybe<FloatNullableWithAggregatesFilter>;
  productType?: InputMaybe<EnumProductTypeNullableWithAggregatesFilter>;
  prodyctType?: InputMaybe<EnumProductTypeNullableWithAggregatesFilter>;
  quantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  quantitySold?: InputMaybe<IntNullableWithAggregatesFilter>;
  royaltyFee?: InputMaybe<IntNullableWithAggregatesFilter>;
  salePrice?: InputMaybe<FloatNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  startTime?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  useCommission?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useExternalNft?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useNft?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useQuantity?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useRoyalty?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useStartTime?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useUsd?: InputMaybe<BoolNullableWithAggregatesFilter>;
  useVariations?: InputMaybe<BoolNullableWithAggregatesFilter>;
  variationOptions?: InputMaybe<JsonNullableWithAggregatesFilter>;
  variations?: InputMaybe<JsonNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProductSumAggregateOutputType = {
  __typename?: 'ProductSumAggregateOutputType';
  commissionFee?: Maybe<Scalars['Float']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  maxQuantity?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  quantitySold?: Maybe<Scalars['Int']>;
  royaltyFee?: Maybe<Scalars['Int']>;
  salePrice?: Maybe<Scalars['Float']>;
};

export type ProductSumOrderByAggregateInput = {
  commissionFee?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  maxQuantity?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  quantitySold?: InputMaybe<SortOrder>;
  royaltyFee?: InputMaybe<SortOrder>;
  salePrice?: InputMaybe<SortOrder>;
};

export enum ProductType {
  Deal = 'deal',
  Event = 'event',
  Membership = 'membership',
  Product = 'product'
}

export type ProductUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutCouponsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCouponsInput>>>;
};

export type ProductUncheckedCreateNestedManyWithoutMarketingLocationsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutMarketingLocationsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutMarketingLocationsInput>>>;
};

export type ProductUncheckedCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPagesInput>>>;
};

export type ProductUncheckedCreateNestedManyWithoutProductCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
};

export type ProductUncheckedCreateNestedManyWithoutProductGroupsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductGroupsInput>>>;
};

export type ProductUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
};

export type ProductUncheckedCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateWithoutMarketingLocationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateWithoutProductGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutProductInput>;
  chain?: InputMaybe<Chain>;
  commissionFee?: InputMaybe<Scalars['Float']>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['DateTime']>;
  eventEndTime?: InputMaybe<Scalars['DateTime']>;
  eventStartTime?: InputMaybe<Scalars['DateTime']>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutProductsInput>;
  maxQuantity?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutProductsInput>;
  price?: InputMaybe<Scalars['Float']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  prodyctType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  quantitySold?: InputMaybe<Scalars['Int']>;
  royaltyFee?: InputMaybe<Scalars['Int']>;
  salePrice?: InputMaybe<Scalars['Float']>;
  slug?: InputMaybe<Scalars['String']>;
  startTime?: InputMaybe<Scalars['DateTime']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  useCommission?: InputMaybe<Scalars['Boolean']>;
  useExternalNft?: InputMaybe<Scalars['Boolean']>;
  useNft?: InputMaybe<Scalars['Boolean']>;
  useQuantity?: InputMaybe<Scalars['Boolean']>;
  useRoyalty?: InputMaybe<Scalars['Boolean']>;
  useStartTime?: InputMaybe<Scalars['Boolean']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  useVariations?: InputMaybe<Scalars['Boolean']>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type ProductUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutCouponsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCouponsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutCouponsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutCouponsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutCouponsInput>>>;
};

export type ProductUncheckedUpdateManyWithoutMarketingLocationsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutMarketingLocationsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutMarketingLocationsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutMarketingLocationsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutMarketingLocationsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutMarketingLocationsInput>>>;
};

export type ProductUncheckedUpdateManyWithoutPagesNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type ProductUncheckedUpdateManyWithoutProductCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutProductCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutProductCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutProductCollectionsInput>>>;
};

export type ProductUncheckedUpdateManyWithoutProductGroupsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductGroupsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutProductGroupsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutProductGroupsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutProductGroupsInput>>>;
};

export type ProductUncheckedUpdateManyWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductUncheckedUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateWithoutMarketingLocationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateWithoutProductGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type ProductUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type ProductUpdateManyWithWhereWithoutCouponsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutMarketingLocationsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutPagesInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutProductCollectionsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutProductGroupsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutWebsiteInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithoutCouponsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCouponsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCouponsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutCouponsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutCouponsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutCouponsInput>>>;
};

export type ProductUpdateManyWithoutMarketingLocationsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutMarketingLocationsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutMarketingLocationsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutMarketingLocationsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutMarketingLocationsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutMarketingLocationsInput>>>;
};

export type ProductUpdateManyWithoutPagesNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type ProductUpdateManyWithoutProductCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutProductCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutProductCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutProductCollectionsInput>>>;
};

export type ProductUpdateManyWithoutProductGroupsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductGroupsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutProductGroupsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutProductGroupsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutProductGroupsInput>>>;
};

export type ProductUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductUpdateOneWithoutAttachmentsNestedInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutAttachmentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductUncheckedUpdateWithoutAttachmentsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutAttachmentsInput>;
};

export type ProductUpdateOneWithoutOrderedProductsNestedInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutOrderedProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductUncheckedUpdateWithoutOrderedProductsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutOrderedProductsInput>;
};

export type ProductUpdateWithWhereUniqueWithoutCouponsInput = {
  data: ProductUncheckedUpdateWithoutCouponsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutMarketingLocationsInput = {
  data: ProductUncheckedUpdateWithoutMarketingLocationsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutPagesInput = {
  data: ProductUncheckedUpdateWithoutPagesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutProductCollectionsInput = {
  data: ProductUncheckedUpdateWithoutProductCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutProductGroupsInput = {
  data: ProductUncheckedUpdateWithoutProductGroupsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: ProductUncheckedUpdateWithoutWebsiteInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateWithoutMarketingLocationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateWithoutProductGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsNestedInput>;
};

export type ProductUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutProductNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  commissionFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  contractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutProductsNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  endTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventEndTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  eventStartTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Scalars['Json']>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutProductsNestedInput>;
  maxQuantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutProductsNestedInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutProductsNestedInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  prodyctType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantitySold?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  royaltyFee?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  salePrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  startTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  useCommission?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useQuantity?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useRoyalty?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useStartTime?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  useVariations?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  variationOptions?: InputMaybe<Scalars['Json']>;
  variations?: InputMaybe<Scalars['Json']>;
};

export type ProductUpsertWithWhereUniqueWithoutCouponsInput = {
  create: ProductUncheckedCreateWithoutCouponsInput;
  update: ProductUncheckedUpdateWithoutCouponsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutMarketingLocationsInput = {
  create: ProductUncheckedCreateWithoutMarketingLocationsInput;
  update: ProductUncheckedUpdateWithoutMarketingLocationsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutPagesInput = {
  create: ProductUncheckedCreateWithoutPagesInput;
  update: ProductUncheckedUpdateWithoutPagesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutProductCollectionsInput = {
  create: ProductUncheckedCreateWithoutProductCollectionsInput;
  update: ProductUncheckedUpdateWithoutProductCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutProductGroupsInput = {
  create: ProductUncheckedCreateWithoutProductGroupsInput;
  update: ProductUncheckedUpdateWithoutProductGroupsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: ProductUncheckedCreateWithoutWebsiteInput;
  update: ProductUncheckedUpdateWithoutWebsiteInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithoutAttachmentsInput = {
  create: ProductUncheckedCreateWithoutAttachmentsInput;
  update: ProductUncheckedUpdateWithoutAttachmentsInput;
};

export type ProductUpsertWithoutOrderedProductsInput = {
  create: ProductUncheckedCreateWithoutOrderedProductsInput;
  update: ProductUncheckedUpdateWithoutOrderedProductsInput;
};

export type ProductWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ProductWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<ProductWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  attachments?: InputMaybe<AttachmentListRelationFilter>;
  chain?: InputMaybe<EnumChainNullableFilter>;
  commissionFee?: InputMaybe<FloatNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  contractAddress?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<CouponListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  endTime?: InputMaybe<DateTimeNullableFilter>;
  eventEndTime?: InputMaybe<DateTimeNullableFilter>;
  eventStartTime?: InputMaybe<DateTimeNullableFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  gallery?: InputMaybe<JsonNullableFilter>;
  hasLocation?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  marketingLocations?: InputMaybe<MarketingLocationListRelationFilter>;
  maxQuantity?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orderedProducts?: InputMaybe<OrderedProductListRelationFilter>;
  pages?: InputMaybe<PageListRelationFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  productCollections?: InputMaybe<ProductCollectionListRelationFilter>;
  productGroups?: InputMaybe<ProductGroupListRelationFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  prodyctType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  quantitySold?: InputMaybe<IntNullableFilter>;
  royaltyFee?: InputMaybe<IntNullableFilter>;
  salePrice?: InputMaybe<FloatNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  startTime?: InputMaybe<DateTimeNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  useCommission?: InputMaybe<BoolNullableFilter>;
  useExternalNft?: InputMaybe<BoolNullableFilter>;
  useNft?: InputMaybe<BoolNullableFilter>;
  useQuantity?: InputMaybe<BoolNullableFilter>;
  useRoyalty?: InputMaybe<BoolNullableFilter>;
  useStartTime?: InputMaybe<BoolNullableFilter>;
  useUsd?: InputMaybe<BoolNullableFilter>;
  useVariations?: InputMaybe<BoolNullableFilter>;
  variationOptions?: InputMaybe<JsonNullableFilter>;
  variations?: InputMaybe<JsonNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ProductWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type Query = {
  __typename?: 'Query';
  aggregateAffiliate?: Maybe<AggregateAffiliate>;
  aggregateAgenda?: Maybe<AggregateAgenda>;
  aggregateAttachment?: Maybe<AggregateAttachment>;
  aggregateAttribute?: Maybe<AggregateAttribute>;
  aggregateAudio?: Maybe<AggregateAudio>;
  aggregateAudioCollection?: Maybe<AggregateAudioCollection>;
  aggregateAudioView?: Maybe<AggregateAudioView>;
  aggregateCoupon?: Maybe<AggregateCoupon>;
  aggregateCustomer?: Maybe<AggregateCustomer>;
  aggregateEvent?: Maybe<AggregateEvent>;
  aggregateEventCollection?: Maybe<AggregateEventCollection>;
  aggregateEventGroup?: Maybe<AggregateEventGroup>;
  aggregateLoginToken?: Maybe<AggregateLoginToken>;
  aggregateMarketingLocation?: Maybe<AggregateMarketingLocation>;
  aggregateNotification?: Maybe<AggregateNotification>;
  aggregateOrder?: Maybe<AggregateOrder>;
  aggregateOrderedProduct?: Maybe<AggregateOrderedProduct>;
  aggregateOrganization?: Maybe<AggregateOrganization>;
  aggregatePage?: Maybe<AggregatePage>;
  aggregatePageCollection?: Maybe<AggregatePageCollection>;
  aggregatePageView?: Maybe<AggregatePageView>;
  aggregateProduct?: Maybe<AggregateProduct>;
  aggregateProductCollection?: Maybe<AggregateProductCollection>;
  aggregateProductGroup?: Maybe<AggregateProductGroup>;
  aggregateRefreshToken?: Maybe<AggregateRefreshToken>;
  aggregateRequest?: Maybe<AggregateRequest>;
  aggregateRequestClick?: Maybe<AggregateRequestClick>;
  aggregateSlugCounter?: Maybe<AggregateSlugCounter>;
  aggregateSpeaker?: Maybe<AggregateSpeaker>;
  aggregateUser?: Maybe<AggregateUser>;
  aggregateVideo?: Maybe<AggregateVideo>;
  aggregateVideoCollection?: Maybe<AggregateVideoCollection>;
  aggregateVideoView?: Maybe<AggregateVideoView>;
  aggregateWebsite?: Maybe<AggregateWebsite>;
  aggregateWebsiteGroup?: Maybe<AggregateWebsiteGroup>;
  findFirstAffiliate?: Maybe<Affiliate>;
  findFirstAgenda?: Maybe<Agenda>;
  findFirstAttachment?: Maybe<Attachment>;
  findFirstAttribute?: Maybe<Attribute>;
  findFirstAudio?: Maybe<Audio>;
  findFirstAudioCollection?: Maybe<AudioCollection>;
  findFirstAudioView?: Maybe<AudioView>;
  findFirstCoupon?: Maybe<Coupon>;
  findFirstCustomer?: Maybe<Customer>;
  findFirstEvent?: Maybe<Event>;
  findFirstEventCollection?: Maybe<EventCollection>;
  findFirstEventGroup?: Maybe<EventGroup>;
  findFirstLoginToken?: Maybe<LoginToken>;
  findFirstMarketingLocation?: Maybe<MarketingLocation>;
  findFirstNotification?: Maybe<Notification>;
  findFirstOrder?: Maybe<Order>;
  findFirstOrderedProduct?: Maybe<OrderedProduct>;
  findFirstOrganization?: Maybe<Organization>;
  findFirstPage?: Maybe<Page>;
  findFirstPageCollection?: Maybe<PageCollection>;
  findFirstPageView?: Maybe<PageView>;
  findFirstProduct?: Maybe<Product>;
  findFirstProductCollection?: Maybe<ProductCollection>;
  findFirstProductGroup?: Maybe<ProductGroup>;
  findFirstRefreshToken?: Maybe<RefreshToken>;
  findFirstRequest?: Maybe<Request>;
  findFirstRequestClick?: Maybe<RequestClick>;
  findFirstSlugCounter?: Maybe<SlugCounter>;
  findFirstSpeaker?: Maybe<Speaker>;
  findFirstUser?: Maybe<User>;
  findFirstVideo?: Maybe<Video>;
  findFirstVideoCollection?: Maybe<VideoCollection>;
  findFirstVideoView?: Maybe<VideoView>;
  findFirstWebsite?: Maybe<Website>;
  findFirstWebsiteGroup?: Maybe<WebsiteGroup>;
  findManyAffiliate: Array<Affiliate>;
  findManyAffiliateCount: Scalars['Int'];
  findManyAgenda: Array<Agenda>;
  findManyAgendaCount: Scalars['Int'];
  findManyAttachment: Array<Attachment>;
  findManyAttachmentCount: Scalars['Int'];
  findManyAttribute: Array<Attribute>;
  findManyAttributeCount: Scalars['Int'];
  findManyAudio: Array<Audio>;
  findManyAudioCollection: Array<AudioCollection>;
  findManyAudioCollectionCount: Scalars['Int'];
  findManyAudioCount: Scalars['Int'];
  findManyAudioView: Array<AudioView>;
  findManyAudioViewCount: Scalars['Int'];
  findManyCoupon: Array<Coupon>;
  findManyCouponCount: Scalars['Int'];
  findManyCustomer: Array<Customer>;
  findManyCustomerCount: Scalars['Int'];
  findManyEvent: Array<Event>;
  findManyEventCollection: Array<EventCollection>;
  findManyEventCollectionCount: Scalars['Int'];
  findManyEventCount: Scalars['Int'];
  findManyEventGroup: Array<EventGroup>;
  findManyEventGroupCount: Scalars['Int'];
  findManyLoginToken: Array<LoginToken>;
  findManyLoginTokenCount: Scalars['Int'];
  findManyMarketingLocation: Array<MarketingLocation>;
  findManyMarketingLocationCount: Scalars['Int'];
  findManyNotification: Array<Notification>;
  findManyNotificationCount: Scalars['Int'];
  findManyOrder: Array<Order>;
  findManyOrderCount: Scalars['Int'];
  findManyOrderedProduct: Array<OrderedProduct>;
  findManyOrderedProductCount: Scalars['Int'];
  findManyOrganization: Array<Organization>;
  findManyOrganizationCount: Scalars['Int'];
  findManyPage: Array<Page>;
  findManyPageCollection: Array<PageCollection>;
  findManyPageCollectionCount: Scalars['Int'];
  findManyPageCount: Scalars['Int'];
  findManyPageView: Array<PageView>;
  findManyPageViewCount: Scalars['Int'];
  findManyProduct: Array<Product>;
  findManyProductCollection: Array<ProductCollection>;
  findManyProductCollectionCount: Scalars['Int'];
  findManyProductCount: Scalars['Int'];
  findManyProductGroup: Array<ProductGroup>;
  findManyProductGroupCount: Scalars['Int'];
  findManyRefreshToken: Array<RefreshToken>;
  findManyRefreshTokenCount: Scalars['Int'];
  findManyRequest: Array<Request>;
  findManyRequestClick: Array<RequestClick>;
  findManyRequestClickCount: Scalars['Int'];
  findManyRequestCount: Scalars['Int'];
  findManySlugCounter: Array<SlugCounter>;
  findManySlugCounterCount: Scalars['Int'];
  findManySpeaker: Array<Speaker>;
  findManySpeakerCount: Scalars['Int'];
  findManyUser: Array<User>;
  findManyUserCount: Scalars['Int'];
  findManyVideo: Array<Video>;
  findManyVideoCollection: Array<VideoCollection>;
  findManyVideoCollectionCount: Scalars['Int'];
  findManyVideoCount: Scalars['Int'];
  findManyVideoView: Array<VideoView>;
  findManyVideoViewCount: Scalars['Int'];
  findManyWebsite: Array<Website>;
  findManyWebsiteCount: Scalars['Int'];
  findManyWebsiteGroup: Array<WebsiteGroup>;
  findManyWebsiteGroupCount: Scalars['Int'];
  findUniqueAffiliate?: Maybe<Affiliate>;
  findUniqueAgenda?: Maybe<Agenda>;
  findUniqueAttachment?: Maybe<Attachment>;
  findUniqueAttribute?: Maybe<Attribute>;
  findUniqueAudio?: Maybe<Audio>;
  findUniqueAudioCollection?: Maybe<AudioCollection>;
  findUniqueAudioView?: Maybe<AudioView>;
  findUniqueCoupon?: Maybe<Coupon>;
  findUniqueCustomer?: Maybe<Customer>;
  findUniqueEvent?: Maybe<Event>;
  findUniqueEventCollection?: Maybe<EventCollection>;
  findUniqueEventGroup?: Maybe<EventGroup>;
  findUniqueLoginToken?: Maybe<LoginToken>;
  findUniqueMarketingLocation?: Maybe<MarketingLocation>;
  findUniqueNotification?: Maybe<Notification>;
  findUniqueOrder?: Maybe<Order>;
  findUniqueOrderedProduct?: Maybe<OrderedProduct>;
  findUniqueOrganization?: Maybe<Organization>;
  findUniquePage?: Maybe<Page>;
  findUniquePageCollection?: Maybe<PageCollection>;
  findUniquePageView?: Maybe<PageView>;
  findUniqueProduct?: Maybe<Product>;
  findUniqueProductCollection?: Maybe<ProductCollection>;
  findUniqueProductGroup?: Maybe<ProductGroup>;
  findUniqueRefreshToken?: Maybe<RefreshToken>;
  findUniqueRequest?: Maybe<Request>;
  findUniqueRequestClick?: Maybe<RequestClick>;
  findUniqueSlugCounter?: Maybe<SlugCounter>;
  findUniqueSpeaker?: Maybe<Speaker>;
  findUniqueUser?: Maybe<User>;
  findUniqueVideo?: Maybe<Video>;
  findUniqueVideoCollection?: Maybe<VideoCollection>;
  findUniqueVideoView?: Maybe<VideoView>;
  findUniqueWebsite?: Maybe<Website>;
  findUniqueWebsiteGroup?: Maybe<WebsiteGroup>;
  getAdminSettings?: Maybe<Scalars['Json']>;
  getCustomer?: Maybe<Scalars['Json']>;
  getFilters?: Maybe<Scalars['Json']>;
  getSchema: Schema;
  getTemplates?: Maybe<Scalars['Json']>;
  getUiTree?: Maybe<Scalars['Json']>;
  me?: Maybe<User>;
  permission?: Maybe<Scalars['Json']>;
  requireSubscription?: Maybe<Scalars['Boolean']>;
  stripeAccountStatus?: Maybe<Scalars['Json']>;
  stripeEnabled?: Maybe<Scalars['Boolean']>;
};


export type QueryAggregateAffiliateArgs = {
  cursor?: InputMaybe<AffiliateWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AffiliateOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AffiliateWhereInput>;
};


export type QueryAggregateAgendaArgs = {
  cursor?: InputMaybe<AgendaWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AgendaOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgendaWhereInput>;
};


export type QueryAggregateAttachmentArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryAggregateAttributeArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryAggregateAudioArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryAggregateAudioCollectionArgs = {
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type QueryAggregateAudioViewArgs = {
  cursor?: InputMaybe<AudioViewWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioViewWhereInput>;
};


export type QueryAggregateCouponArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryAggregateCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryAggregateEventArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<EventOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};


export type QueryAggregateEventCollectionArgs = {
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<EventCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type QueryAggregateEventGroupArgs = {
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<EventGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type QueryAggregateLoginTokenArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryAggregateMarketingLocationArgs = {
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<MarketingLocationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type QueryAggregateNotificationArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryAggregateOrderArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryAggregateOrderedProductArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryAggregateOrganizationArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrganizationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrganizationWhereInput>;
};


export type QueryAggregatePageArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryAggregatePageCollectionArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryAggregatePageViewArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryAggregateProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryAggregateProductCollectionArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryAggregateProductGroupArgs = {
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type QueryAggregateRefreshTokenArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryAggregateRequestArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryAggregateRequestClickArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryAggregateSlugCounterArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryAggregateSpeakerArgs = {
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<SpeakerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SpeakerWhereInput>;
};


export type QueryAggregateUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryAggregateVideoArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryAggregateVideoCollectionArgs = {
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type QueryAggregateVideoViewArgs = {
  cursor?: InputMaybe<VideoViewWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoViewWhereInput>;
};


export type QueryAggregateWebsiteArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryAggregateWebsiteGroupArgs = {
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteGroupWhereInput>;
};


export type QueryFindFirstAffiliateArgs = {
  cursor?: InputMaybe<AffiliateWhereUniqueInput>;
  distinct?: InputMaybe<AffiliateScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AffiliateOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AffiliateWhereInput>;
};


export type QueryFindFirstAgendaArgs = {
  cursor?: InputMaybe<AgendaWhereUniqueInput>;
  distinct?: InputMaybe<AgendaScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AgendaOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgendaWhereInput>;
};


export type QueryFindFirstAttachmentArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryFindFirstAttributeArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<AttributeScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryFindFirstAudioArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<AudioScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryFindFirstAudioCollectionArgs = {
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  distinct?: InputMaybe<AudioCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type QueryFindFirstAudioViewArgs = {
  cursor?: InputMaybe<AudioViewWhereUniqueInput>;
  distinct?: InputMaybe<AudioViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioViewWhereInput>;
};


export type QueryFindFirstCouponArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<CouponScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryFindFirstCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<CustomerScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindFirstEventArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};


export type QueryFindFirstEventCollectionArgs = {
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  distinct?: InputMaybe<EventCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type QueryFindFirstEventGroupArgs = {
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  distinct?: InputMaybe<EventGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type QueryFindFirstLoginTokenArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<LoginTokenScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryFindFirstMarketingLocationArgs = {
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  distinct?: InputMaybe<MarketingLocationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<MarketingLocationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type QueryFindFirstNotificationArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<NotificationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryFindFirstOrderArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryFindFirstOrderedProductArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryFindFirstOrganizationArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  distinct?: InputMaybe<OrganizationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrganizationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrganizationWhereInput>;
};


export type QueryFindFirstPageArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryFindFirstPageCollectionArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<PageCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryFindFirstPageViewArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<PageViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryFindFirstProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindFirstProductCollectionArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<ProductCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryFindFirstProductGroupArgs = {
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  distinct?: InputMaybe<ProductGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type QueryFindFirstRefreshTokenArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<RefreshTokenScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryFindFirstRequestArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryFindFirstRequestClickArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryFindFirstSlugCounterArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  distinct?: InputMaybe<SlugCounterScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryFindFirstSpeakerArgs = {
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  distinct?: InputMaybe<SpeakerScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<SpeakerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SpeakerWhereInput>;
};


export type QueryFindFirstUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<UserScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindFirstVideoArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<VideoScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryFindFirstVideoCollectionArgs = {
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  distinct?: InputMaybe<VideoCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type QueryFindFirstVideoViewArgs = {
  cursor?: InputMaybe<VideoViewWhereUniqueInput>;
  distinct?: InputMaybe<VideoViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoViewWhereInput>;
};


export type QueryFindFirstWebsiteArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryFindFirstWebsiteGroupArgs = {
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteGroupWhereInput>;
};


export type QueryFindManyAffiliateArgs = {
  cursor?: InputMaybe<AffiliateWhereUniqueInput>;
  distinct?: InputMaybe<AffiliateScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AffiliateOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AffiliateWhereInput>;
};


export type QueryFindManyAffiliateCountArgs = {
  cursor?: InputMaybe<AffiliateWhereUniqueInput>;
  distinct?: InputMaybe<AffiliateScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AffiliateOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AffiliateWhereInput>;
};


export type QueryFindManyAgendaArgs = {
  cursor?: InputMaybe<AgendaWhereUniqueInput>;
  distinct?: InputMaybe<AgendaScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AgendaOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgendaWhereInput>;
};


export type QueryFindManyAgendaCountArgs = {
  cursor?: InputMaybe<AgendaWhereUniqueInput>;
  distinct?: InputMaybe<AgendaScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AgendaOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgendaWhereInput>;
};


export type QueryFindManyAttachmentArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryFindManyAttachmentCountArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryFindManyAttributeArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<AttributeScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryFindManyAttributeCountArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<AttributeScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryFindManyAudioArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<AudioScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryFindManyAudioCollectionArgs = {
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  distinct?: InputMaybe<AudioCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type QueryFindManyAudioCollectionCountArgs = {
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  distinct?: InputMaybe<AudioCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type QueryFindManyAudioCountArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<AudioScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryFindManyAudioViewArgs = {
  cursor?: InputMaybe<AudioViewWhereUniqueInput>;
  distinct?: InputMaybe<AudioViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioViewWhereInput>;
};


export type QueryFindManyAudioViewCountArgs = {
  cursor?: InputMaybe<AudioViewWhereUniqueInput>;
  distinct?: InputMaybe<AudioViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioViewWhereInput>;
};


export type QueryFindManyCouponArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<CouponScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryFindManyCouponCountArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<CouponScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryFindManyCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<CustomerScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindManyCustomerCountArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<CustomerScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindManyEventArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};


export type QueryFindManyEventCollectionArgs = {
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  distinct?: InputMaybe<EventCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type QueryFindManyEventCollectionCountArgs = {
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  distinct?: InputMaybe<EventCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type QueryFindManyEventCountArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};


export type QueryFindManyEventGroupArgs = {
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  distinct?: InputMaybe<EventGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type QueryFindManyEventGroupCountArgs = {
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  distinct?: InputMaybe<EventGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<EventGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type QueryFindManyLoginTokenArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<LoginTokenScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryFindManyLoginTokenCountArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<LoginTokenScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryFindManyMarketingLocationArgs = {
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  distinct?: InputMaybe<MarketingLocationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<MarketingLocationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type QueryFindManyMarketingLocationCountArgs = {
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  distinct?: InputMaybe<MarketingLocationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<MarketingLocationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type QueryFindManyNotificationArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<NotificationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryFindManyNotificationCountArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<NotificationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryFindManyOrderArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryFindManyOrderCountArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryFindManyOrderedProductArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryFindManyOrderedProductCountArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryFindManyOrganizationArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  distinct?: InputMaybe<OrganizationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrganizationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrganizationWhereInput>;
};


export type QueryFindManyOrganizationCountArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  distinct?: InputMaybe<OrganizationScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<OrganizationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrganizationWhereInput>;
};


export type QueryFindManyPageArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryFindManyPageCollectionArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<PageCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryFindManyPageCollectionCountArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<PageCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryFindManyPageCountArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryFindManyPageViewArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<PageViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryFindManyPageViewCountArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<PageViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryFindManyProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindManyProductCollectionArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<ProductCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryFindManyProductCollectionCountArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<ProductCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryFindManyProductCountArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindManyProductGroupArgs = {
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  distinct?: InputMaybe<ProductGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type QueryFindManyProductGroupCountArgs = {
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  distinct?: InputMaybe<ProductGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type QueryFindManyRefreshTokenArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<RefreshTokenScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryFindManyRefreshTokenCountArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<RefreshTokenScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryFindManyRequestArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryFindManyRequestClickArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryFindManyRequestClickCountArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryFindManyRequestCountArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryFindManySlugCounterArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  distinct?: InputMaybe<SlugCounterScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryFindManySlugCounterCountArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  distinct?: InputMaybe<SlugCounterScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryFindManySpeakerArgs = {
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  distinct?: InputMaybe<SpeakerScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<SpeakerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SpeakerWhereInput>;
};


export type QueryFindManySpeakerCountArgs = {
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  distinct?: InputMaybe<SpeakerScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<SpeakerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SpeakerWhereInput>;
};


export type QueryFindManyUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<UserScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindManyUserCountArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<UserScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindManyVideoArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<VideoScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryFindManyVideoCollectionArgs = {
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  distinct?: InputMaybe<VideoCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type QueryFindManyVideoCollectionCountArgs = {
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  distinct?: InputMaybe<VideoCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type QueryFindManyVideoCountArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<VideoScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryFindManyVideoViewArgs = {
  cursor?: InputMaybe<VideoViewWhereUniqueInput>;
  distinct?: InputMaybe<VideoViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoViewWhereInput>;
};


export type QueryFindManyVideoViewCountArgs = {
  cursor?: InputMaybe<VideoViewWhereUniqueInput>;
  distinct?: InputMaybe<VideoViewScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoViewWhereInput>;
};


export type QueryFindManyWebsiteArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryFindManyWebsiteCountArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryFindManyWebsiteGroupArgs = {
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteGroupWhereInput>;
};


export type QueryFindManyWebsiteGroupCountArgs = {
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteGroupScalarFieldEnum>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteGroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteGroupWhereInput>;
};


export type QueryFindUniqueAffiliateArgs = {
  where: AffiliateWhereUniqueInput;
};


export type QueryFindUniqueAgendaArgs = {
  where: AgendaWhereUniqueInput;
};


export type QueryFindUniqueAttachmentArgs = {
  where: AttachmentWhereUniqueInput;
};


export type QueryFindUniqueAttributeArgs = {
  where: AttributeWhereUniqueInput;
};


export type QueryFindUniqueAudioArgs = {
  where: AudioWhereUniqueInput;
};


export type QueryFindUniqueAudioCollectionArgs = {
  where: AudioCollectionWhereUniqueInput;
};


export type QueryFindUniqueAudioViewArgs = {
  where: AudioViewWhereUniqueInput;
};


export type QueryFindUniqueCouponArgs = {
  where: CouponWhereUniqueInput;
};


export type QueryFindUniqueCustomerArgs = {
  where: CustomerWhereUniqueInput;
};


export type QueryFindUniqueEventArgs = {
  where: EventWhereUniqueInput;
};


export type QueryFindUniqueEventCollectionArgs = {
  where: EventCollectionWhereUniqueInput;
};


export type QueryFindUniqueEventGroupArgs = {
  where: EventGroupWhereUniqueInput;
};


export type QueryFindUniqueLoginTokenArgs = {
  where: LoginTokenWhereUniqueInput;
};


export type QueryFindUniqueMarketingLocationArgs = {
  where: MarketingLocationWhereUniqueInput;
};


export type QueryFindUniqueNotificationArgs = {
  where: NotificationWhereUniqueInput;
};


export type QueryFindUniqueOrderArgs = {
  where: OrderWhereUniqueInput;
};


export type QueryFindUniqueOrderedProductArgs = {
  where: OrderedProductWhereUniqueInput;
};


export type QueryFindUniqueOrganizationArgs = {
  where: OrganizationWhereUniqueInput;
};


export type QueryFindUniquePageArgs = {
  where: PageWhereUniqueInput;
};


export type QueryFindUniquePageCollectionArgs = {
  where: PageCollectionWhereUniqueInput;
};


export type QueryFindUniquePageViewArgs = {
  where: PageViewWhereUniqueInput;
};


export type QueryFindUniqueProductArgs = {
  where: ProductWhereUniqueInput;
};


export type QueryFindUniqueProductCollectionArgs = {
  where: ProductCollectionWhereUniqueInput;
};


export type QueryFindUniqueProductGroupArgs = {
  where: ProductGroupWhereUniqueInput;
};


export type QueryFindUniqueRefreshTokenArgs = {
  where: RefreshTokenWhereUniqueInput;
};


export type QueryFindUniqueRequestArgs = {
  where: RequestWhereUniqueInput;
};


export type QueryFindUniqueRequestClickArgs = {
  where: RequestClickWhereUniqueInput;
};


export type QueryFindUniqueSlugCounterArgs = {
  where: SlugCounterWhereUniqueInput;
};


export type QueryFindUniqueSpeakerArgs = {
  where: SpeakerWhereUniqueInput;
};


export type QueryFindUniqueUserArgs = {
  where: UserWhereUniqueInput;
};


export type QueryFindUniqueVideoArgs = {
  where: VideoWhereUniqueInput;
};


export type QueryFindUniqueVideoCollectionArgs = {
  where: VideoCollectionWhereUniqueInput;
};


export type QueryFindUniqueVideoViewArgs = {
  where: VideoViewWhereUniqueInput;
};


export type QueryFindUniqueWebsiteArgs = {
  where: WebsiteWhereUniqueInput;
};


export type QueryFindUniqueWebsiteGroupArgs = {
  where: WebsiteGroupWhereUniqueInput;
};


export type QueryGetAdminSettingsArgs = {
  Admin?: InputMaybe<Scalars['String']>;
  Version: Scalars['String'];
  admin: Scalars['String'];
};


export type QueryGetCustomerArgs = {
  websiteSlug: Scalars['String'];
};


export type QueryGetFiltersArgs = {
  modelName: Scalars['String'];
  pagesPath: Scalars['String'];
};


export type QueryGetUiTreeArgs = {
  adminId: Scalars['String'];
};


export type QueryRequireSubscriptionArgs = {
  id: Scalars['String'];
  model: Scalars['String'];
};


export type QueryStripeEnabledArgs = {
  websiteSlug: Scalars['String'];
};

export enum QueryMode {
  Default = 'default',
  Insensitive = 'insensitive'
}

export type RefreshToken = {
  __typename?: 'RefreshToken';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  lastActive?: Maybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  user?: Maybe<User>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

export type RefreshTokenCountAggregateOutputType = {
  __typename?: 'RefreshTokenCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  expires: Scalars['Int'];
  geo: Scalars['Int'];
  ip: Scalars['Int'];
  lastActive: Scalars['Int'];
  loginTokenId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userAgent: Scalars['Int'];
  userAgentRaw: Scalars['Int'];
  userId: Scalars['Int'];
  value: Scalars['Int'];
};

export type RefreshTokenCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type RefreshTokenCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutRefreshTokensInput>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenCreateManyUserInputEnvelope = {
  data: RefreshTokenCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RefreshTokenCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
};

export type RefreshTokenCreateOrConnectWithoutUserInput = {
  create: RefreshTokenUncheckedCreateWithoutUserInput;
  where: RefreshTokenWhereUniqueInput;
};

export type RefreshTokenCreateWithoutUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenListRelationFilter = {
  every?: InputMaybe<RefreshTokenWhereInput>;
  none?: InputMaybe<RefreshTokenWhereInput>;
  some?: InputMaybe<RefreshTokenWhereInput>;
};

export type RefreshTokenMaxAggregateOutputType = {
  __typename?: 'RefreshTokenMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  lastActive?: Maybe<Scalars['DateTime']>;
  loginTokenId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

export type RefreshTokenMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type RefreshTokenMinAggregateOutputType = {
  __typename?: 'RefreshTokenMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  lastActive?: Maybe<Scalars['DateTime']>;
  loginTokenId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

export type RefreshTokenMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type RefreshTokenOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type RefreshTokenOrderByWithAggregationInput = {
  _count?: InputMaybe<RefreshTokenCountOrderByAggregateInput>;
  _max?: InputMaybe<RefreshTokenMaxOrderByAggregateInput>;
  _min?: InputMaybe<RefreshTokenMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  expires?: InputMaybe<SortOrderInput>;
  geo?: InputMaybe<SortOrderInput>;
  ip?: InputMaybe<SortOrderInput>;
  lastActive?: InputMaybe<SortOrderInput>;
  loginTokenId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrderInput>;
  userAgent?: InputMaybe<SortOrderInput>;
  userAgentRaw?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
  value?: InputMaybe<SortOrderInput>;
};

export type RefreshTokenOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  expires?: InputMaybe<SortOrderInput>;
  geo?: InputMaybe<SortOrderInput>;
  ip?: InputMaybe<SortOrderInput>;
  lastActive?: InputMaybe<SortOrderInput>;
  loginTokenId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userAgent?: InputMaybe<SortOrderInput>;
  userAgentRaw?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
  value?: InputMaybe<SortOrderInput>;
};

export enum RefreshTokenScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Expires = 'expires',
  Geo = 'geo',
  Ip = 'ip',
  LastActive = 'lastActive',
  LoginTokenId = 'loginTokenId',
  UpdatedAt = 'updatedAt',
  UserAgent = 'userAgent',
  UserAgentRaw = 'userAgentRaw',
  UserId = 'userId',
  Value = 'value'
}

export type RefreshTokenScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  expires?: InputMaybe<DateTimeNullableFilter>;
  geo?: InputMaybe<StringNullableFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  lastActive?: InputMaybe<DateTimeNullableFilter>;
  loginTokenId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  userAgent?: InputMaybe<StringNullableFilter>;
  userAgentRaw?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  value?: InputMaybe<StringNullableFilter>;
};

export type RefreshTokenScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  expires?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  geo?: InputMaybe<StringNullableWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  lastActive?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  loginTokenId?: InputMaybe<StringWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  userAgent?: InputMaybe<StringNullableWithAggregatesFilter>;
  userAgentRaw?: InputMaybe<StringNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  value?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type RefreshTokenUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
};

export type RefreshTokenUncheckedCreateWithoutUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires?: InputMaybe<Scalars['DateTime']>;
  geo?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userAgent?: InputMaybe<Scalars['String']>;
  userAgentRaw?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUncheckedUpdateManyWithoutRefreshTokensInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RefreshTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type RefreshTokenUncheckedUpdateWithoutUserInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutRefreshTokensNestedInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
  data: RefreshTokenUncheckedUpdateManyWithoutRefreshTokensInput;
  where: RefreshTokenScalarWhereInput;
};

export type RefreshTokenUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RefreshTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
  data: RefreshTokenUncheckedUpdateWithoutUserInput;
  where: RefreshTokenWhereUniqueInput;
};

export type RefreshTokenUpdateWithoutUserInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
  create: RefreshTokenUncheckedCreateWithoutUserInput;
  update: RefreshTokenUncheckedUpdateWithoutUserInput;
  where: RefreshTokenWhereUniqueInput;
};

export type RefreshTokenWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RefreshTokenWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RefreshTokenWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefreshTokenWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  expires?: InputMaybe<DateTimeNullableFilter>;
  geo?: InputMaybe<StringNullableFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  lastActive?: InputMaybe<DateTimeNullableFilter>;
  loginTokenId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userAgent?: InputMaybe<StringNullableFilter>;
  userAgentRaw?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  value?: InputMaybe<StringNullableFilter>;
};

export type RefreshTokenWhereUniqueInput = {
  loginTokenId?: InputMaybe<Scalars['String']>;
};

export type Request = {
  __typename?: 'Request';
  _count: RequestCountOutputType;
  accept?: Maybe<Scalars['Boolean']>;
  acceptBefore?: Maybe<Scalars['DateTime']>;
  active?: Maybe<Scalars['Boolean']>;
  applicationFee?: Maybe<Scalars['Float']>;
  audio?: Maybe<Audio>;
  audioId?: Maybe<Scalars['String']>;
  chain?: Maybe<Chain>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  customer?: Maybe<Customer>;
  customerId?: Maybe<Scalars['String']>;
  days?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  page?: Maybe<Page>;
  pageId?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  paidAt?: Maybe<Scalars['DateTime']>;
  paymentId?: Maybe<Scalars['String']>;
  paymentType?: Maybe<PaymentType>;
  price?: Maybe<Scalars['Float']>;
  requestClicks: Array<RequestClick>;
  requestStatus?: Maybe<RequestStatus>;
  stripeFee?: Maybe<Scalars['Float']>;
  subject?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  video?: Maybe<Video>;
  videoId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};


export type RequestRequestClicksArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<RequestClickOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};

export type RequestAvgAggregateOutputType = {
  __typename?: 'RequestAvgAggregateOutputType';
  applicationFee?: Maybe<Scalars['Float']>;
  days?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  stripeFee?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type RequestAvgOrderByAggregateInput = {
  applicationFee?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type RequestClick = {
  __typename?: 'RequestClick';
  audio?: Maybe<Audio>;
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  ip?: Maybe<Scalars['String']>;
  page?: Maybe<Page>;
  pageId?: Maybe<Scalars['String']>;
  request?: Maybe<Request>;
  requestId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  video?: Maybe<Video>;
  videoId?: Maybe<Scalars['String']>;
};

export type RequestClickCountAggregateOutputType = {
  __typename?: 'RequestClickCountAggregateOutputType';
  _all: Scalars['Int'];
  audioId: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  pageId: Scalars['Int'];
  requestId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  videoId: Scalars['Int'];
};

export type RequestClickCountOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  requestId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type RequestClickCreateInput = {
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestClicksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestClicksInput>;
  request?: InputMaybe<RequestCreateNestedOneWithoutRequestClicksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestClicksInput>;
};

export type RequestClickCreateManyAudioInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickCreateManyAudioInputEnvelope = {
  data: RequestClickCreateManyAudioInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestClickCreateManyInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickCreateManyPageInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickCreateManyPageInputEnvelope = {
  data: RequestClickCreateManyPageInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestClickCreateManyRequestInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickCreateManyRequestInputEnvelope = {
  data: RequestClickCreateManyRequestInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestClickCreateManyVideoInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickCreateManyVideoInputEnvelope = {
  data: RequestClickCreateManyVideoInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestClickCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyAudioInputEnvelope>;
};

export type RequestClickCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
};

export type RequestClickCreateNestedManyWithoutRequestInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutRequestInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutRequestInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyRequestInputEnvelope>;
};

export type RequestClickCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyVideoInputEnvelope>;
};

export type RequestClickCreateOrConnectWithoutAudioInput = {
  create: RequestClickUncheckedCreateWithoutAudioInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickCreateOrConnectWithoutPageInput = {
  create: RequestClickUncheckedCreateWithoutPageInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickCreateOrConnectWithoutRequestInput = {
  create: RequestClickUncheckedCreateWithoutRequestInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickCreateOrConnectWithoutVideoInput = {
  create: RequestClickUncheckedCreateWithoutVideoInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickCreateWithoutAudioInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestClicksInput>;
  request?: InputMaybe<RequestCreateNestedOneWithoutRequestClicksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestClicksInput>;
};

export type RequestClickCreateWithoutPageInput = {
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestClicksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  request?: InputMaybe<RequestCreateNestedOneWithoutRequestClicksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestClicksInput>;
};

export type RequestClickCreateWithoutRequestInput = {
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestClicksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestClicksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestClicksInput>;
};

export type RequestClickCreateWithoutVideoInput = {
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestClicksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestClicksInput>;
  request?: InputMaybe<RequestCreateNestedOneWithoutRequestClicksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickListRelationFilter = {
  every?: InputMaybe<RequestClickWhereInput>;
  none?: InputMaybe<RequestClickWhereInput>;
  some?: InputMaybe<RequestClickWhereInput>;
};

export type RequestClickMaxAggregateOutputType = {
  __typename?: 'RequestClickMaxAggregateOutputType';
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  requestId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  videoId?: Maybe<Scalars['String']>;
};

export type RequestClickMaxOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  requestId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type RequestClickMinAggregateOutputType = {
  __typename?: 'RequestClickMinAggregateOutputType';
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  requestId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  videoId?: Maybe<Scalars['String']>;
};

export type RequestClickMinOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  requestId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type RequestClickOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type RequestClickOrderByWithAggregationInput = {
  _count?: InputMaybe<RequestClickCountOrderByAggregateInput>;
  _max?: InputMaybe<RequestClickMaxOrderByAggregateInput>;
  _min?: InputMaybe<RequestClickMinOrderByAggregateInput>;
  audioId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  pageId?: InputMaybe<SortOrderInput>;
  requestId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  videoId?: InputMaybe<SortOrderInput>;
};

export type RequestClickOrderByWithRelationInput = {
  audio?: InputMaybe<AudioOrderByWithRelationInput>;
  audioId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  page?: InputMaybe<PageOrderByWithRelationInput>;
  pageId?: InputMaybe<SortOrderInput>;
  request?: InputMaybe<RequestOrderByWithRelationInput>;
  requestId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  video?: InputMaybe<VideoOrderByWithRelationInput>;
  videoId?: InputMaybe<SortOrderInput>;
};

export enum RequestClickScalarFieldEnum {
  AudioId = 'audioId',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Ip = 'ip',
  PageId = 'pageId',
  RequestId = 'requestId',
  UpdatedAt = 'updatedAt',
  VideoId = 'videoId'
}

export type RequestClickScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  audioId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  pageId?: InputMaybe<StringNullableFilter>;
  requestId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  videoId?: InputMaybe<StringNullableFilter>;
};

export type RequestClickScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereWithAggregatesInput>>>;
  audioId?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  pageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  requestId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  videoId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type RequestClickUncheckedCreateInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickUncheckedCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyAudioInputEnvelope>;
};

export type RequestClickUncheckedCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
};

export type RequestClickUncheckedCreateNestedManyWithoutRequestInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutRequestInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutRequestInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyRequestInputEnvelope>;
};

export type RequestClickUncheckedCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyVideoInputEnvelope>;
};

export type RequestClickUncheckedCreateWithoutAudioInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickUncheckedCreateWithoutPageInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickUncheckedCreateWithoutRequestInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type RequestClickUncheckedCreateWithoutVideoInput = {
  audioId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  requestId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickUncheckedUpdateInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestClickUncheckedUpdateManyInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestClickUncheckedUpdateManyWithoutAudioNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type RequestClickUncheckedUpdateManyWithoutPageNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestClickUncheckedUpdateManyWithoutRequestClicksInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestClickUncheckedUpdateManyWithoutRequestNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutRequestInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutRequestInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyRequestInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutRequestInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutRequestInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutRequestInput>>>;
};

export type RequestClickUncheckedUpdateManyWithoutVideoNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type RequestClickUncheckedUpdateWithoutAudioInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestClickUncheckedUpdateWithoutPageInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestClickUncheckedUpdateWithoutRequestInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestClickUncheckedUpdateWithoutVideoInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type RequestClickUpdateInput = {
  audio?: InputMaybe<AudioUpdateOneWithoutRequestClicksNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestClicksNestedInput>;
  request?: InputMaybe<RequestUpdateOneWithoutRequestClicksNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestClicksNestedInput>;
};

export type RequestClickUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type RequestClickUpdateManyWithWhereWithoutAudioInput = {
  data: RequestClickUncheckedUpdateManyWithoutRequestClicksInput;
  where: RequestClickScalarWhereInput;
};

export type RequestClickUpdateManyWithWhereWithoutPageInput = {
  data: RequestClickUncheckedUpdateManyWithoutRequestClicksInput;
  where: RequestClickScalarWhereInput;
};

export type RequestClickUpdateManyWithWhereWithoutRequestInput = {
  data: RequestClickUncheckedUpdateManyWithoutRequestClicksInput;
  where: RequestClickScalarWhereInput;
};

export type RequestClickUpdateManyWithWhereWithoutVideoInput = {
  data: RequestClickUncheckedUpdateManyWithoutRequestClicksInput;
  where: RequestClickScalarWhereInput;
};

export type RequestClickUpdateManyWithoutAudioNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type RequestClickUpdateManyWithoutPageNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestClickUpdateManyWithoutRequestNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutRequestInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutRequestInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyRequestInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutRequestInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutRequestInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutRequestInput>>>;
};

export type RequestClickUpdateManyWithoutVideoNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type RequestClickUpdateWithWhereUniqueWithoutAudioInput = {
  data: RequestClickUncheckedUpdateWithoutAudioInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUpdateWithWhereUniqueWithoutPageInput = {
  data: RequestClickUncheckedUpdateWithoutPageInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUpdateWithWhereUniqueWithoutRequestInput = {
  data: RequestClickUncheckedUpdateWithoutRequestInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUpdateWithWhereUniqueWithoutVideoInput = {
  data: RequestClickUncheckedUpdateWithoutVideoInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUpdateWithoutAudioInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestClicksNestedInput>;
  request?: InputMaybe<RequestUpdateOneWithoutRequestClicksNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestClicksNestedInput>;
};

export type RequestClickUpdateWithoutPageInput = {
  audio?: InputMaybe<AudioUpdateOneWithoutRequestClicksNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  request?: InputMaybe<RequestUpdateOneWithoutRequestClicksNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestClicksNestedInput>;
};

export type RequestClickUpdateWithoutRequestInput = {
  audio?: InputMaybe<AudioUpdateOneWithoutRequestClicksNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestClicksNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestClicksNestedInput>;
};

export type RequestClickUpdateWithoutVideoInput = {
  audio?: InputMaybe<AudioUpdateOneWithoutRequestClicksNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestClicksNestedInput>;
  request?: InputMaybe<RequestUpdateOneWithoutRequestClicksNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type RequestClickUpsertWithWhereUniqueWithoutAudioInput = {
  create: RequestClickUncheckedCreateWithoutAudioInput;
  update: RequestClickUncheckedUpdateWithoutAudioInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUpsertWithWhereUniqueWithoutPageInput = {
  create: RequestClickUncheckedCreateWithoutPageInput;
  update: RequestClickUncheckedUpdateWithoutPageInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUpsertWithWhereUniqueWithoutRequestInput = {
  create: RequestClickUncheckedCreateWithoutRequestInput;
  update: RequestClickUncheckedUpdateWithoutRequestInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUpsertWithWhereUniqueWithoutVideoInput = {
  create: RequestClickUncheckedCreateWithoutVideoInput;
  update: RequestClickUncheckedUpdateWithoutVideoInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestClickWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RequestClickWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestClickWhereInput>>>;
  audio?: InputMaybe<AudioWhereInput>;
  audioId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  page?: InputMaybe<PageWhereInput>;
  pageId?: InputMaybe<StringNullableFilter>;
  request?: InputMaybe<RequestWhereInput>;
  requestId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  video?: InputMaybe<VideoWhereInput>;
  videoId?: InputMaybe<StringNullableFilter>;
};

export type RequestClickWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type RequestCountAggregateOutputType = {
  __typename?: 'RequestCountAggregateOutputType';
  _all: Scalars['Int'];
  accept: Scalars['Int'];
  acceptBefore: Scalars['Int'];
  active: Scalars['Int'];
  applicationFee: Scalars['Int'];
  audioId: Scalars['Int'];
  chain: Scalars['Int'];
  createdAt: Scalars['Int'];
  currencyCode: Scalars['Int'];
  customerId: Scalars['Int'];
  days: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  expiredAt: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  message: Scalars['Int'];
  name: Scalars['Int'];
  pageId: Scalars['Int'];
  paid: Scalars['Int'];
  paidAt: Scalars['Int'];
  paymentId: Scalars['Int'];
  paymentType: Scalars['Int'];
  price: Scalars['Int'];
  requestStatus: Scalars['Int'];
  stripeFee: Scalars['Int'];
  subject: Scalars['Int'];
  total: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  useUsd: Scalars['Int'];
  videoId: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type RequestCountOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  audioId?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  paymentType?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RequestCountOutputType = {
  __typename?: 'RequestCountOutputType';
  requestClicks: Scalars['Int'];
};

export type RequestCreateInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestsInput>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateManyAudioInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateManyAudioInputEnvelope = {
  data: RequestCreateManyAudioInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestCreateManyCustomerInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateManyCustomerInputEnvelope = {
  data: RequestCreateManyCustomerInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestCreateManyInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateManyPageInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateManyPageInputEnvelope = {
  data: RequestCreateManyPageInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestCreateManyVideoInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateManyVideoInputEnvelope = {
  data: RequestCreateManyVideoInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestCreateManyAudioInputEnvelope>;
};

export type RequestCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
};

export type RequestCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
};

export type RequestCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestCreateManyVideoInputEnvelope>;
};

export type RequestCreateNestedOneWithoutRequestClicksInput = {
  connect?: InputMaybe<RequestWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RequestCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<RequestUncheckedCreateWithoutRequestClicksInput>;
};

export type RequestCreateOrConnectWithoutAudioInput = {
  create: RequestUncheckedCreateWithoutAudioInput;
  where: RequestWhereUniqueInput;
};

export type RequestCreateOrConnectWithoutCustomerInput = {
  create: RequestUncheckedCreateWithoutCustomerInput;
  where: RequestWhereUniqueInput;
};

export type RequestCreateOrConnectWithoutPageInput = {
  create: RequestUncheckedCreateWithoutPageInput;
  where: RequestWhereUniqueInput;
};

export type RequestCreateOrConnectWithoutRequestClicksInput = {
  create: RequestUncheckedCreateWithoutRequestClicksInput;
  where: RequestWhereUniqueInput;
};

export type RequestCreateOrConnectWithoutVideoInput = {
  create: RequestUncheckedCreateWithoutVideoInput;
  where: RequestWhereUniqueInput;
};

export type RequestCreateWithoutAudioInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateWithoutCustomerInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestsInput>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateWithoutPageInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestsInput>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateWithoutRequestClicksInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestsInput>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutRequestsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateWithoutVideoInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audio?: InputMaybe<AudioCreateNestedOneWithoutRequestsInput>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestListRelationFilter = {
  every?: InputMaybe<RequestWhereInput>;
  none?: InputMaybe<RequestWhereInput>;
  some?: InputMaybe<RequestWhereInput>;
};

export type RequestMaxAggregateOutputType = {
  __typename?: 'RequestMaxAggregateOutputType';
  accept?: Maybe<Scalars['Boolean']>;
  acceptBefore?: Maybe<Scalars['DateTime']>;
  active?: Maybe<Scalars['Boolean']>;
  applicationFee?: Maybe<Scalars['Float']>;
  audioId?: Maybe<Scalars['String']>;
  chain?: Maybe<Chain>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  customerId?: Maybe<Scalars['String']>;
  days?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  paidAt?: Maybe<Scalars['DateTime']>;
  paymentId?: Maybe<Scalars['String']>;
  paymentType?: Maybe<PaymentType>;
  price?: Maybe<Scalars['Float']>;
  requestStatus?: Maybe<RequestStatus>;
  stripeFee?: Maybe<Scalars['Float']>;
  subject?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  videoId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type RequestMaxOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  audioId?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  paymentType?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RequestMinAggregateOutputType = {
  __typename?: 'RequestMinAggregateOutputType';
  accept?: Maybe<Scalars['Boolean']>;
  acceptBefore?: Maybe<Scalars['DateTime']>;
  active?: Maybe<Scalars['Boolean']>;
  applicationFee?: Maybe<Scalars['Float']>;
  audioId?: Maybe<Scalars['String']>;
  chain?: Maybe<Chain>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  customerId?: Maybe<Scalars['String']>;
  days?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  paidAt?: Maybe<Scalars['DateTime']>;
  paymentId?: Maybe<Scalars['String']>;
  paymentType?: Maybe<PaymentType>;
  price?: Maybe<Scalars['Float']>;
  requestStatus?: Maybe<RequestStatus>;
  stripeFee?: Maybe<Scalars['Float']>;
  subject?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  useUsd?: Maybe<Scalars['Boolean']>;
  videoId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type RequestMinOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  audioId?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  paymentType?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  useUsd?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RequestOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type RequestOrderByWithAggregationInput = {
  _avg?: InputMaybe<RequestAvgOrderByAggregateInput>;
  _count?: InputMaybe<RequestCountOrderByAggregateInput>;
  _max?: InputMaybe<RequestMaxOrderByAggregateInput>;
  _min?: InputMaybe<RequestMinOrderByAggregateInput>;
  _sum?: InputMaybe<RequestSumOrderByAggregateInput>;
  accept?: InputMaybe<SortOrderInput>;
  acceptBefore?: InputMaybe<SortOrderInput>;
  active?: InputMaybe<SortOrderInput>;
  applicationFee?: InputMaybe<SortOrderInput>;
  audioId?: InputMaybe<SortOrderInput>;
  chain?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  currencyCode?: InputMaybe<SortOrderInput>;
  customerId?: InputMaybe<SortOrderInput>;
  days?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  expiredAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  message?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  pageId?: InputMaybe<SortOrderInput>;
  paid?: InputMaybe<SortOrderInput>;
  paidAt?: InputMaybe<SortOrderInput>;
  paymentId?: InputMaybe<SortOrderInput>;
  paymentType?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  requestStatus?: InputMaybe<SortOrderInput>;
  stripeFee?: InputMaybe<SortOrderInput>;
  subject?: InputMaybe<SortOrderInput>;
  total?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  useUsd?: InputMaybe<SortOrderInput>;
  videoId?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
};

export type RequestOrderByWithRelationInput = {
  accept?: InputMaybe<SortOrderInput>;
  acceptBefore?: InputMaybe<SortOrderInput>;
  active?: InputMaybe<SortOrderInput>;
  applicationFee?: InputMaybe<SortOrderInput>;
  audio?: InputMaybe<AudioOrderByWithRelationInput>;
  audioId?: InputMaybe<SortOrderInput>;
  chain?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  currencyCode?: InputMaybe<SortOrderInput>;
  customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  customerId?: InputMaybe<SortOrderInput>;
  days?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  expiredAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  message?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  page?: InputMaybe<PageOrderByWithRelationInput>;
  pageId?: InputMaybe<SortOrderInput>;
  paid?: InputMaybe<SortOrderInput>;
  paidAt?: InputMaybe<SortOrderInput>;
  paymentId?: InputMaybe<SortOrderInput>;
  paymentType?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  requestClicks?: InputMaybe<RequestClickOrderByRelationAggregateInput>;
  requestStatus?: InputMaybe<SortOrderInput>;
  stripeFee?: InputMaybe<SortOrderInput>;
  subject?: InputMaybe<SortOrderInput>;
  total?: InputMaybe<SortOrderInput>;
  transactionHash?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  url?: InputMaybe<SortOrderInput>;
  useUsd?: InputMaybe<SortOrderInput>;
  video?: InputMaybe<VideoOrderByWithRelationInput>;
  videoId?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
};

export type RequestRelationFilter = {
  is?: InputMaybe<RequestWhereInput>;
  isNot?: InputMaybe<RequestWhereInput>;
};

export enum RequestScalarFieldEnum {
  Accept = 'accept',
  AcceptBefore = 'acceptBefore',
  Active = 'active',
  ApplicationFee = 'applicationFee',
  AudioId = 'audioId',
  Chain = 'chain',
  CreatedAt = 'createdAt',
  CurrencyCode = 'currencyCode',
  CustomerId = 'customerId',
  Days = 'days',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpiredAt = 'expiredAt',
  Id = 'id',
  ImageObj = 'imageObj',
  Message = 'message',
  Name = 'name',
  PageId = 'pageId',
  Paid = 'paid',
  PaidAt = 'paidAt',
  PaymentId = 'paymentId',
  PaymentType = 'paymentType',
  Price = 'price',
  RequestStatus = 'requestStatus',
  StripeFee = 'stripeFee',
  Subject = 'subject',
  Total = 'total',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  UseUsd = 'useUsd',
  VideoId = 'videoId',
  WalletAddress = 'walletAddress'
}

export type RequestScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  accept?: InputMaybe<BoolNullableFilter>;
  acceptBefore?: InputMaybe<DateTimeNullableFilter>;
  active?: InputMaybe<BoolNullableFilter>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  audioId?: InputMaybe<StringNullableFilter>;
  chain?: InputMaybe<EnumChainNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  days?: InputMaybe<IntNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  expiredAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  message?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  pageId?: InputMaybe<StringNullableFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  paidAt?: InputMaybe<DateTimeNullableFilter>;
  paymentId?: InputMaybe<StringNullableFilter>;
  paymentType?: InputMaybe<EnumPaymentTypeNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  requestStatus?: InputMaybe<EnumRequestStatusNullableFilter>;
  stripeFee?: InputMaybe<FloatNullableFilter>;
  subject?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  useUsd?: InputMaybe<BoolNullableFilter>;
  videoId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type RequestScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RequestScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestScalarWhereWithAggregatesInput>>>;
  accept?: InputMaybe<BoolNullableWithAggregatesFilter>;
  acceptBefore?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  applicationFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  audioId?: InputMaybe<StringNullableWithAggregatesFilter>;
  chain?: InputMaybe<EnumChainNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  customerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  days?: InputMaybe<IntNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiredAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  message?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  pageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  paidAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  paymentId?: InputMaybe<StringNullableWithAggregatesFilter>;
  paymentType?: InputMaybe<EnumPaymentTypeNullableWithAggregatesFilter>;
  price?: InputMaybe<FloatNullableWithAggregatesFilter>;
  requestStatus?: InputMaybe<EnumRequestStatusNullableWithAggregatesFilter>;
  stripeFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  subject?: InputMaybe<StringNullableWithAggregatesFilter>;
  total?: InputMaybe<FloatNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  useUsd?: InputMaybe<BoolNullableWithAggregatesFilter>;
  videoId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export enum RequestStatus {
  Active = 'active',
  Completed = 'completed',
  Expired = 'expired',
  Pending = 'pending',
  Processing = 'processing',
  Rejected = 'rejected'
}

export type RequestSumAggregateOutputType = {
  __typename?: 'RequestSumAggregateOutputType';
  applicationFee?: Maybe<Scalars['Float']>;
  days?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Float']>;
  stripeFee?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type RequestSumOrderByAggregateInput = {
  applicationFee?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  stripeFee?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type RequestUncheckedCreateInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestCreateManyAudioInputEnvelope>;
};

export type RequestUncheckedCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
};

export type RequestUncheckedCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
};

export type RequestUncheckedCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestCreateManyVideoInputEnvelope>;
};

export type RequestUncheckedCreateWithoutAudioInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateWithoutCustomerInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateWithoutPageInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateWithoutRequestClicksInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  videoId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateWithoutVideoInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  audioId?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Chain>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days?: InputMaybe<Scalars['Int']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  paymentType?: InputMaybe<PaymentType>;
  price?: InputMaybe<Scalars['Float']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutRequestInput>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeFee?: InputMaybe<Scalars['Float']>;
  subject?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  useUsd?: InputMaybe<Scalars['Boolean']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedUpdateInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateManyInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateManyWithoutAudioNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type RequestUncheckedUpdateManyWithoutCustomerNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type RequestUncheckedUpdateManyWithoutPageNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestUncheckedUpdateManyWithoutRequestsInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateManyWithoutVideoNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type RequestUncheckedUpdateWithoutAudioInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateWithoutCustomerInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateWithoutPageInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateWithoutRequestClicksInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateWithoutVideoInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audio?: InputMaybe<AudioUpdateOneWithoutRequestsNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsNestedInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateManyMutationInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateManyWithWhereWithoutAudioInput = {
  data: RequestUncheckedUpdateManyWithoutRequestsInput;
  where: RequestScalarWhereInput;
};

export type RequestUpdateManyWithWhereWithoutCustomerInput = {
  data: RequestUncheckedUpdateManyWithoutRequestsInput;
  where: RequestScalarWhereInput;
};

export type RequestUpdateManyWithWhereWithoutPageInput = {
  data: RequestUncheckedUpdateManyWithoutRequestsInput;
  where: RequestScalarWhereInput;
};

export type RequestUpdateManyWithWhereWithoutVideoInput = {
  data: RequestUncheckedUpdateManyWithoutRequestsInput;
  where: RequestScalarWhereInput;
};

export type RequestUpdateManyWithoutAudioNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<RequestCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type RequestUpdateManyWithoutCustomerNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type RequestUpdateManyWithoutPageNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestUpdateManyWithoutVideoNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<RequestCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type RequestUpdateOneWithoutRequestClicksNestedInput = {
  connect?: InputMaybe<RequestWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RequestCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<RequestUncheckedCreateWithoutRequestClicksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<RequestUncheckedUpdateWithoutRequestClicksInput>;
  upsert?: InputMaybe<RequestUpsertWithoutRequestClicksInput>;
};

export type RequestUpdateWithWhereUniqueWithoutAudioInput = {
  data: RequestUncheckedUpdateWithoutAudioInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpdateWithWhereUniqueWithoutCustomerInput = {
  data: RequestUncheckedUpdateWithoutCustomerInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpdateWithWhereUniqueWithoutPageInput = {
  data: RequestUncheckedUpdateWithoutPageInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpdateWithWhereUniqueWithoutVideoInput = {
  data: RequestUncheckedUpdateWithoutVideoInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpdateWithoutAudioInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsNestedInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateWithoutCustomerInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audio?: InputMaybe<AudioUpdateOneWithoutRequestsNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateWithoutPageInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audio?: InputMaybe<AudioUpdateOneWithoutRequestsNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsNestedInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateWithoutRequestClicksInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audio?: InputMaybe<AudioUpdateOneWithoutRequestsNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsNestedInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutRequestsNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateWithoutVideoInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  audio?: InputMaybe<AudioUpdateOneWithoutRequestsNestedInput>;
  chain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsNestedInput>;
  days?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsNestedInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentType?: InputMaybe<NullableEnumPaymentTypeFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutRequestNestedInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  useUsd?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpsertWithWhereUniqueWithoutAudioInput = {
  create: RequestUncheckedCreateWithoutAudioInput;
  update: RequestUncheckedUpdateWithoutAudioInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpsertWithWhereUniqueWithoutCustomerInput = {
  create: RequestUncheckedCreateWithoutCustomerInput;
  update: RequestUncheckedUpdateWithoutCustomerInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpsertWithWhereUniqueWithoutPageInput = {
  create: RequestUncheckedCreateWithoutPageInput;
  update: RequestUncheckedUpdateWithoutPageInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpsertWithWhereUniqueWithoutVideoInput = {
  create: RequestUncheckedCreateWithoutVideoInput;
  update: RequestUncheckedUpdateWithoutVideoInput;
  where: RequestWhereUniqueInput;
};

export type RequestUpsertWithoutRequestClicksInput = {
  create: RequestUncheckedCreateWithoutRequestClicksInput;
  update: RequestUncheckedUpdateWithoutRequestClicksInput;
};

export type RequestWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<RequestWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestWhereInput>>>;
  accept?: InputMaybe<BoolNullableFilter>;
  acceptBefore?: InputMaybe<DateTimeNullableFilter>;
  active?: InputMaybe<BoolNullableFilter>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  audio?: InputMaybe<AudioWhereInput>;
  audioId?: InputMaybe<StringNullableFilter>;
  chain?: InputMaybe<EnumChainNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customer?: InputMaybe<CustomerWhereInput>;
  customerId?: InputMaybe<StringNullableFilter>;
  days?: InputMaybe<IntNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  expiredAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  message?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  page?: InputMaybe<PageWhereInput>;
  pageId?: InputMaybe<StringNullableFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  paidAt?: InputMaybe<DateTimeNullableFilter>;
  paymentId?: InputMaybe<StringNullableFilter>;
  paymentType?: InputMaybe<EnumPaymentTypeNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  requestClicks?: InputMaybe<RequestClickListRelationFilter>;
  requestStatus?: InputMaybe<EnumRequestStatusNullableFilter>;
  stripeFee?: InputMaybe<FloatNullableFilter>;
  subject?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  useUsd?: InputMaybe<BoolNullableFilter>;
  video?: InputMaybe<VideoWhereInput>;
  videoId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type RequestWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type Schema = {
  __typename?: 'Schema';
  enums: Array<Enum>;
  models: Array<Model>;
};

export type SlugCounter = {
  __typename?: 'SlugCounter';
  counter?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  model?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SlugCounterAvgAggregateOutputType = {
  __typename?: 'SlugCounterAvgAggregateOutputType';
  counter?: Maybe<Scalars['Float']>;
};

export type SlugCounterAvgOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
};

export type SlugCounterCountAggregateOutputType = {
  __typename?: 'SlugCounterCountAggregateOutputType';
  _all: Scalars['Int'];
  counter: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  model: Scalars['Int'];
  slug: Scalars['Int'];
  title: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type SlugCounterCountOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterCreateInput = {
  counter?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SlugCounterCreateManyInput = {
  counter?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SlugCounterMaxAggregateOutputType = {
  __typename?: 'SlugCounterMaxAggregateOutputType';
  counter?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SlugCounterMaxOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterMinAggregateOutputType = {
  __typename?: 'SlugCounterMinAggregateOutputType';
  counter?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SlugCounterMinOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterOrderByWithAggregationInput = {
  _avg?: InputMaybe<SlugCounterAvgOrderByAggregateInput>;
  _count?: InputMaybe<SlugCounterCountOrderByAggregateInput>;
  _max?: InputMaybe<SlugCounterMaxOrderByAggregateInput>;
  _min?: InputMaybe<SlugCounterMinOrderByAggregateInput>;
  _sum?: InputMaybe<SlugCounterSumOrderByAggregateInput>;
  counter?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  title?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type SlugCounterOrderByWithRelationInput = {
  counter?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  title?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export enum SlugCounterScalarFieldEnum {
  Counter = 'counter',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Model = 'model',
  Slug = 'slug',
  Title = 'title',
  UpdatedAt = 'updatedAt'
}

export type SlugCounterScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<SlugCounterScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<SlugCounterScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SlugCounterScalarWhereWithAggregatesInput>>>;
  counter?: InputMaybe<IntNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  model?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  title?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SlugCounterSumAggregateOutputType = {
  __typename?: 'SlugCounterSumAggregateOutputType';
  counter?: Maybe<Scalars['Int']>;
};

export type SlugCounterSumOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
};

export type SlugCounterUncheckedCreateInput = {
  counter?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SlugCounterUncheckedUpdateInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SlugCounterUncheckedUpdateManyInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SlugCounterUpdateInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SlugCounterUpdateManyMutationInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SlugCounterWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<SlugCounterWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<SlugCounterWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SlugCounterWhereInput>>>;
  counter?: InputMaybe<IntNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  model?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type SlugCounterWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc'
}

export type SortOrderInput = {
  nulls?: InputMaybe<NullsOrder>;
  sort: SortOrder;
};

export type Speaker = {
  __typename?: 'Speaker';
  agenda?: Maybe<Agenda>;
  agendaId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  event?: Maybe<Event>;
  eventId?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SpeakerCountAggregateOutputType = {
  __typename?: 'SpeakerCountAggregateOutputType';
  _all: Scalars['Int'];
  agendaId: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  eventId: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type SpeakerCountOrderByAggregateInput = {
  agendaId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SpeakerCreateInput = {
  agenda?: InputMaybe<AgendaCreateNestedOneWithoutSpeakersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutSpeakersInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerCreateManyAgendaInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerCreateManyAgendaInputEnvelope = {
  data: SpeakerCreateManyAgendaInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type SpeakerCreateManyEventInput = {
  agendaId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerCreateManyEventInputEnvelope = {
  data: SpeakerCreateManyEventInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type SpeakerCreateManyInput = {
  agendaId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerCreateNestedManyWithoutAgendaInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutAgendaInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutAgendaInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyAgendaInputEnvelope>;
};

export type SpeakerCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutEventInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyEventInputEnvelope>;
};

export type SpeakerCreateOrConnectWithoutAgendaInput = {
  create: SpeakerUncheckedCreateWithoutAgendaInput;
  where: SpeakerWhereUniqueInput;
};

export type SpeakerCreateOrConnectWithoutEventInput = {
  create: SpeakerUncheckedCreateWithoutEventInput;
  where: SpeakerWhereUniqueInput;
};

export type SpeakerCreateWithoutAgendaInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<EventCreateNestedOneWithoutSpeakersInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerCreateWithoutEventInput = {
  agenda?: InputMaybe<AgendaCreateNestedOneWithoutSpeakersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerListRelationFilter = {
  every?: InputMaybe<SpeakerWhereInput>;
  none?: InputMaybe<SpeakerWhereInput>;
  some?: InputMaybe<SpeakerWhereInput>;
};

export type SpeakerMaxAggregateOutputType = {
  __typename?: 'SpeakerMaxAggregateOutputType';
  agendaId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SpeakerMaxOrderByAggregateInput = {
  agendaId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SpeakerMinAggregateOutputType = {
  __typename?: 'SpeakerMinAggregateOutputType';
  agendaId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SpeakerMinOrderByAggregateInput = {
  agendaId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  eventId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SpeakerOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SpeakerOrderByWithAggregationInput = {
  _count?: InputMaybe<SpeakerCountOrderByAggregateInput>;
  _max?: InputMaybe<SpeakerMaxOrderByAggregateInput>;
  _min?: InputMaybe<SpeakerMinOrderByAggregateInput>;
  agendaId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type SpeakerOrderByWithRelationInput = {
  agenda?: InputMaybe<AgendaOrderByWithRelationInput>;
  agendaId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  event?: InputMaybe<EventOrderByWithRelationInput>;
  eventId?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export enum SpeakerScalarFieldEnum {
  AgendaId = 'agendaId',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EventId = 'eventId',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  UpdatedAt = 'updatedAt'
}

export type SpeakerScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereInput>>>;
  agendaId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type SpeakerScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereWithAggregatesInput>>>;
  agendaId?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  eventId?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SpeakerUncheckedCreateInput = {
  agendaId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerUncheckedCreateNestedManyWithoutAgendaInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutAgendaInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutAgendaInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyAgendaInputEnvelope>;
};

export type SpeakerUncheckedCreateNestedManyWithoutEventInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutEventInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyEventInputEnvelope>;
};

export type SpeakerUncheckedCreateWithoutAgendaInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerUncheckedCreateWithoutEventInput = {
  agendaId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SpeakerUncheckedUpdateInput = {
  agendaId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUncheckedUpdateManyInput = {
  agendaId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUncheckedUpdateManyWithoutAgendaNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutAgendaInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutAgendaInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyAgendaInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<SpeakerUpdateWithWhereUniqueWithoutAgendaInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<SpeakerUpdateManyWithWhereWithoutAgendaInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<SpeakerUpsertWithWhereUniqueWithoutAgendaInput>>>;
};

export type SpeakerUncheckedUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutEventInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<SpeakerUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<SpeakerUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<SpeakerUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type SpeakerUncheckedUpdateManyWithoutSpeakersInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUncheckedUpdateWithoutAgendaInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUncheckedUpdateWithoutEventInput = {
  agendaId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUpdateInput = {
  agenda?: InputMaybe<AgendaUpdateOneWithoutSpeakersNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutSpeakersNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUpdateManyWithWhereWithoutAgendaInput = {
  data: SpeakerUncheckedUpdateManyWithoutSpeakersInput;
  where: SpeakerScalarWhereInput;
};

export type SpeakerUpdateManyWithWhereWithoutEventInput = {
  data: SpeakerUncheckedUpdateManyWithoutSpeakersInput;
  where: SpeakerScalarWhereInput;
};

export type SpeakerUpdateManyWithoutAgendaNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutAgendaInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutAgendaInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyAgendaInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<SpeakerUpdateWithWhereUniqueWithoutAgendaInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<SpeakerUpdateManyWithWhereWithoutAgendaInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<SpeakerUpsertWithWhereUniqueWithoutAgendaInput>>>;
};

export type SpeakerUpdateManyWithoutEventNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SpeakerCreateOrConnectWithoutEventInput>>>;
  create?: InputMaybe<Array<InputMaybe<SpeakerCreateWithoutEventInput>>>;
  createMany?: InputMaybe<SpeakerCreateManyEventInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<SpeakerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<SpeakerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<SpeakerUpdateWithWhereUniqueWithoutEventInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<SpeakerUpdateManyWithWhereWithoutEventInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<SpeakerUpsertWithWhereUniqueWithoutEventInput>>>;
};

export type SpeakerUpdateWithWhereUniqueWithoutAgendaInput = {
  data: SpeakerUncheckedUpdateWithoutAgendaInput;
  where: SpeakerWhereUniqueInput;
};

export type SpeakerUpdateWithWhereUniqueWithoutEventInput = {
  data: SpeakerUncheckedUpdateWithoutEventInput;
  where: SpeakerWhereUniqueInput;
};

export type SpeakerUpdateWithoutAgendaInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  event?: InputMaybe<EventUpdateOneWithoutSpeakersNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUpdateWithoutEventInput = {
  agenda?: InputMaybe<AgendaUpdateOneWithoutSpeakersNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SpeakerUpsertWithWhereUniqueWithoutAgendaInput = {
  create: SpeakerUncheckedCreateWithoutAgendaInput;
  update: SpeakerUncheckedUpdateWithoutAgendaInput;
  where: SpeakerWhereUniqueInput;
};

export type SpeakerUpsertWithWhereUniqueWithoutEventInput = {
  create: SpeakerUncheckedCreateWithoutEventInput;
  update: SpeakerUncheckedUpdateWithoutEventInput;
  where: SpeakerWhereUniqueInput;
};

export type SpeakerWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<SpeakerWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<SpeakerWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SpeakerWhereInput>>>;
  agenda?: InputMaybe<AgendaWhereInput>;
  agendaId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  event?: InputMaybe<EventWhereInput>;
  eventId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type SpeakerWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type StringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export type StringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type StringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type StringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type StringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export enum TransactionIsolationLevel {
  ReadCommitted = 'ReadCommitted',
  ReadUncommitted = 'ReadUncommitted',
  RepeatableRead = 'RepeatableRead',
  Serializable = 'Serializable'
}

export type UpdateFieldInput = {
  create?: InputMaybe<Scalars['Boolean']>;
  editor?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  isId?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<KindEnum>;
  list?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  read?: InputMaybe<Scalars['Boolean']>;
  relationField?: InputMaybe<Scalars['Boolean']>;
  required?: InputMaybe<Scalars['Boolean']>;
  sort?: InputMaybe<Scalars['Boolean']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  unique?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
  upload?: InputMaybe<Scalars['Boolean']>;
};

export type UpdateModelInput = {
  create?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  displayFields?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fields?: InputMaybe<Array<InputMaybe<UpdateFieldInput>>>;
  idField?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type User = {
  __typename?: 'User';
  _count: UserCountOutputType;
  adminFilters?: Maybe<Scalars['Json']>;
  attachments: Array<Attachment>;
  createdAt?: Maybe<Scalars['DateTime']>;
  customers: Array<Customer>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  loginTokens: Array<LoginToken>;
  name?: Maybe<Scalars['String']>;
  notifications: Array<Notification>;
  organizations: Array<Organization>;
  password?: Maybe<Scalars['String']>;
  refreshTokens: Array<RefreshToken>;
  stripeAccountId?: Maybe<Scalars['String']>;
  stripeCustomerId?: Maybe<Scalars['String']>;
  telegramUserId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websites: Array<Website>;
};


export type UserAttachmentsArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<AttachmentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type UserCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<CustomerScalarFieldEnum>;
  orderBy?: InputMaybe<CustomerOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type UserLoginTokensArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<LoginTokenScalarFieldEnum>;
  orderBy?: InputMaybe<LoginTokenOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type UserNotificationsArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<NotificationScalarFieldEnum>;
  orderBy?: InputMaybe<NotificationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type UserOrganizationsArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  distinct?: InputMaybe<OrganizationScalarFieldEnum>;
  orderBy?: InputMaybe<OrganizationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrganizationWhereInput>;
};


export type UserRefreshTokensArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<RefreshTokenScalarFieldEnum>;
  orderBy?: InputMaybe<RefreshTokenOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type UserWebsitesArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteScalarFieldEnum>;
  orderBy?: InputMaybe<WebsiteOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};

export type UserCountAggregateOutputType = {
  __typename?: 'UserCountAggregateOutputType';
  _all: Scalars['Int'];
  adminFilters: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  email: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  password: Scalars['Int'];
  stripeAccountId: Scalars['Int'];
  stripeCustomerId: Scalars['Int'];
  telegramUserId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type UserCountOrderByAggregateInput = {
  adminFilters?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  telegramUserId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type UserCountOutputType = {
  __typename?: 'UserCountOutputType';
  attachments: Scalars['Int'];
  customers: Scalars['Int'];
  loginTokens: Scalars['Int'];
  notifications: Scalars['Int'];
  organizations: Scalars['Int'];
  refreshTokens: Scalars['Int'];
  websites: Scalars['Int'];
};

export type UserCreateInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
};

export type UserCreateManyInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type UserCreateNestedOneWithoutAttachmentsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutAttachmentsInput>;
};

export type UserCreateNestedOneWithoutCustomersInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutCustomersInput>;
};

export type UserCreateNestedOneWithoutLoginTokensInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLoginTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutLoginTokensInput>;
};

export type UserCreateNestedOneWithoutNotificationsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutNotificationsInput>;
};

export type UserCreateNestedOneWithoutOrganizationsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutOrganizationsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutOrganizationsInput>;
};

export type UserCreateNestedOneWithoutRefreshTokensInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutRefreshTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutRefreshTokensInput>;
};

export type UserCreateNestedOneWithoutWebsitesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutWebsitesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutWebsitesInput>;
};

export type UserCreateOrConnectWithoutAttachmentsInput = {
  create: UserUncheckedCreateWithoutAttachmentsInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutCustomersInput = {
  create: UserUncheckedCreateWithoutCustomersInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutLoginTokensInput = {
  create: UserUncheckedCreateWithoutLoginTokensInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutNotificationsInput = {
  create: UserUncheckedCreateWithoutNotificationsInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutOrganizationsInput = {
  create: UserUncheckedCreateWithoutOrganizationsInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutRefreshTokensInput = {
  create: UserUncheckedCreateWithoutRefreshTokensInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutWebsitesInput = {
  create: UserUncheckedCreateWithoutWebsitesInput;
  where: UserWhereUniqueInput;
};

export type UserCreateWithoutAttachmentsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
};

export type UserCreateWithoutCustomersInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
};

export type UserCreateWithoutLoginTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
};

export type UserCreateWithoutNotificationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  organizations?: InputMaybe<OrganizationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
};

export type UserCreateWithoutOrganizationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
};

export type UserCreateWithoutRefreshTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
};

export type UserCreateWithoutWebsitesInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type UserMaxAggregateOutputType = {
  __typename?: 'UserMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  stripeCustomerId?: Maybe<Scalars['String']>;
  telegramUserId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type UserMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  telegramUserId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type UserMinAggregateOutputType = {
  __typename?: 'UserMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  stripeCustomerId?: Maybe<Scalars['String']>;
  telegramUserId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type UserMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  telegramUserId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type UserOrderByWithAggregationInput = {
  _count?: InputMaybe<UserCountOrderByAggregateInput>;
  _max?: InputMaybe<UserMaxOrderByAggregateInput>;
  _min?: InputMaybe<UserMinOrderByAggregateInput>;
  adminFilters?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  password?: InputMaybe<SortOrderInput>;
  stripeAccountId?: InputMaybe<SortOrderInput>;
  stripeCustomerId?: InputMaybe<SortOrderInput>;
  telegramUserId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type UserOrderByWithRelationInput = {
  adminFilters?: InputMaybe<SortOrderInput>;
  attachments?: InputMaybe<AttachmentOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  customers?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  loginTokens?: InputMaybe<LoginTokenOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrderInput>;
  notifications?: InputMaybe<NotificationOrderByRelationAggregateInput>;
  organizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
  password?: InputMaybe<SortOrderInput>;
  refreshTokens?: InputMaybe<RefreshTokenOrderByRelationAggregateInput>;
  stripeAccountId?: InputMaybe<SortOrderInput>;
  stripeCustomerId?: InputMaybe<SortOrderInput>;
  telegramUserId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websites?: InputMaybe<WebsiteOrderByRelationAggregateInput>;
};

export type UserRelationFilter = {
  is?: InputMaybe<UserWhereInput>;
  isNot?: InputMaybe<UserWhereInput>;
};

export enum UserScalarFieldEnum {
  AdminFilters = 'adminFilters',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Email = 'email',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Password = 'password',
  StripeAccountId = 'stripeAccountId',
  StripeCustomerId = 'stripeCustomerId',
  TelegramUserId = 'telegramUserId',
  UpdatedAt = 'updatedAt'
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<UserScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<UserScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<UserScalarWhereWithAggregatesInput>>>;
  adminFilters?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  stripeAccountId?: InputMaybe<StringNullableWithAggregatesFilter>;
  stripeCustomerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  telegramUserId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type UserUncheckedCreateInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
};

export type UserUncheckedCreateWithoutAttachmentsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
};

export type UserUncheckedCreateWithoutCustomersInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
};

export type UserUncheckedCreateWithoutLoginTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
};

export type UserUncheckedCreateWithoutNotificationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  organizations?: InputMaybe<OrganizationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
};

export type UserUncheckedCreateWithoutOrganizationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
};

export type UserUncheckedCreateWithoutRefreshTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
};

export type UserUncheckedCreateWithoutWebsitesInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  organizations?: InputMaybe<OrganizationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  telegramUserId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type UserUncheckedUpdateInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserNestedInput>;
};

export type UserUncheckedUpdateManyInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type UserUncheckedUpdateWithoutAttachmentsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserNestedInput>;
};

export type UserUncheckedUpdateWithoutCustomersInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserNestedInput>;
};

export type UserUncheckedUpdateWithoutLoginTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserNestedInput>;
};

export type UserUncheckedUpdateWithoutNotificationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizations?: InputMaybe<OrganizationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserNestedInput>;
};

export type UserUncheckedUpdateWithoutOrganizationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserNestedInput>;
};

export type UserUncheckedUpdateWithoutRefreshTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserNestedInput>;
};

export type UserUncheckedUpdateWithoutWebsitesInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUncheckedUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type UserUpdateInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserNestedInput>;
};

export type UserUpdateManyMutationInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type UserUpdateOneWithoutAttachmentsNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutAttachmentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutAttachmentsInput>;
  upsert?: InputMaybe<UserUpsertWithoutAttachmentsInput>;
};

export type UserUpdateOneWithoutCustomersNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutCustomersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutCustomersInput>;
  upsert?: InputMaybe<UserUpsertWithoutCustomersInput>;
};

export type UserUpdateOneWithoutLoginTokensNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLoginTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutLoginTokensInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutLoginTokensInput>;
  upsert?: InputMaybe<UserUpsertWithoutLoginTokensInput>;
};

export type UserUpdateOneWithoutNotificationsNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutNotificationsInput>;
  upsert?: InputMaybe<UserUpsertWithoutNotificationsInput>;
};

export type UserUpdateOneWithoutOrganizationsNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutOrganizationsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutOrganizationsInput>;
  upsert?: InputMaybe<UserUpsertWithoutOrganizationsInput>;
};

export type UserUpdateOneWithoutRefreshTokensNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutRefreshTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutRefreshTokensInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutRefreshTokensInput>;
  upsert?: InputMaybe<UserUpsertWithoutRefreshTokensInput>;
};

export type UserUpdateOneWithoutWebsitesNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutWebsitesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutWebsitesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutWebsitesInput>;
  upsert?: InputMaybe<UserUpsertWithoutWebsitesInput>;
};

export type UserUpdateWithoutAttachmentsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserNestedInput>;
};

export type UserUpdateWithoutCustomersInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserNestedInput>;
};

export type UserUpdateWithoutLoginTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserNestedInput>;
};

export type UserUpdateWithoutNotificationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizations?: InputMaybe<OrganizationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserNestedInput>;
};

export type UserUpdateWithoutOrganizationsInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserNestedInput>;
};

export type UserUpdateWithoutRefreshTokensInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserNestedInput>;
};

export type UserUpdateWithoutWebsitesInput = {
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserNestedInput>;
  organizations?: InputMaybe<OrganizationUpdateManyWithoutUserNestedInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserNestedInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  telegramUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutAttachmentsInput = {
  create: UserUncheckedCreateWithoutAttachmentsInput;
  update: UserUncheckedUpdateWithoutAttachmentsInput;
};

export type UserUpsertWithoutCustomersInput = {
  create: UserUncheckedCreateWithoutCustomersInput;
  update: UserUncheckedUpdateWithoutCustomersInput;
};

export type UserUpsertWithoutLoginTokensInput = {
  create: UserUncheckedCreateWithoutLoginTokensInput;
  update: UserUncheckedUpdateWithoutLoginTokensInput;
};

export type UserUpsertWithoutNotificationsInput = {
  create: UserUncheckedCreateWithoutNotificationsInput;
  update: UserUncheckedUpdateWithoutNotificationsInput;
};

export type UserUpsertWithoutOrganizationsInput = {
  create: UserUncheckedCreateWithoutOrganizationsInput;
  update: UserUncheckedUpdateWithoutOrganizationsInput;
};

export type UserUpsertWithoutRefreshTokensInput = {
  create: UserUncheckedCreateWithoutRefreshTokensInput;
  update: UserUncheckedUpdateWithoutRefreshTokensInput;
};

export type UserUpsertWithoutWebsitesInput = {
  create: UserUncheckedCreateWithoutWebsitesInput;
  update: UserUncheckedUpdateWithoutWebsitesInput;
};

export type UserWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  adminFilters?: InputMaybe<JsonNullableFilter>;
  attachments?: InputMaybe<AttachmentListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  loginTokens?: InputMaybe<LoginTokenListRelationFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notifications?: InputMaybe<NotificationListRelationFilter>;
  organizations?: InputMaybe<OrganizationListRelationFilter>;
  password?: InputMaybe<StringNullableFilter>;
  refreshTokens?: InputMaybe<RefreshTokenListRelationFilter>;
  stripeAccountId?: InputMaybe<StringNullableFilter>;
  stripeCustomerId?: InputMaybe<StringNullableFilter>;
  telegramUserId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websites?: InputMaybe<WebsiteListRelationFilter>;
};

export type UserWhereUniqueInput = {
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
};

export type Video = {
  __typename?: 'Video';
  _count: VideoCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  content?: Maybe<Scalars['Json']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  isYoutube?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  requestClicks: Array<RequestClick>;
  requests: Array<Request>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  videoCollections: Array<VideoCollection>;
  videoObj?: Maybe<Scalars['Json']>;
  videoPreviewObj?: Maybe<Scalars['Json']>;
  videoViews: Array<VideoView>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type VideoRequestClicksArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<RequestClickOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type VideoRequestsArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<RequestOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type VideoVideoCollectionsArgs = {
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  distinct?: InputMaybe<VideoCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<VideoCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type VideoVideoViewsArgs = {
  cursor?: InputMaybe<VideoViewWhereUniqueInput>;
  distinct?: InputMaybe<VideoViewScalarFieldEnum>;
  orderBy?: InputMaybe<VideoViewOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoViewWhereInput>;
};

export type VideoCollection = {
  __typename?: 'VideoCollection';
  _count: VideoCollectionCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  videos: Array<Video>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type VideoCollectionVideosArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<VideoScalarFieldEnum>;
  orderBy?: InputMaybe<VideoOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};

export type VideoCollectionCountAggregateOutputType = {
  __typename?: 'VideoCollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type VideoCollectionCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type VideoCollectionCountOutputType = {
  __typename?: 'VideoCollectionCountOutputType';
  videos: Scalars['Int'];
};

export type VideoCollectionCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutVideoCollectionsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutVideoCollectionsInput>;
};

export type VideoCollectionCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoCollectionCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type VideoCollectionCreateManyWebsiteInputEnvelope = {
  data: VideoCollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type VideoCollectionCreateNestedManyWithoutVideosInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutVideosInput>>>;
};

export type VideoCollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCollectionCreateManyWebsiteInputEnvelope>;
};

export type VideoCollectionCreateOrConnectWithoutVideosInput = {
  create: VideoCollectionUncheckedCreateWithoutVideosInput;
  where: VideoCollectionWhereUniqueInput;
};

export type VideoCollectionCreateOrConnectWithoutWebsiteInput = {
  create: VideoCollectionUncheckedCreateWithoutWebsiteInput;
  where: VideoCollectionWhereUniqueInput;
};

export type VideoCollectionCreateWithoutVideosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutVideoCollectionsInput>;
};

export type VideoCollectionCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutVideoCollectionsInput>;
};

export type VideoCollectionListRelationFilter = {
  every?: InputMaybe<VideoCollectionWhereInput>;
  none?: InputMaybe<VideoCollectionWhereInput>;
  some?: InputMaybe<VideoCollectionWhereInput>;
};

export type VideoCollectionMaxAggregateOutputType = {
  __typename?: 'VideoCollectionMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type VideoCollectionMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type VideoCollectionMinAggregateOutputType = {
  __typename?: 'VideoCollectionMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type VideoCollectionMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type VideoCollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type VideoCollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<VideoCollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<VideoCollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<VideoCollectionMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type VideoCollectionOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  displayTitle?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  videos?: InputMaybe<VideoOrderByRelationAggregateInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export enum VideoCollectionScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type VideoCollectionScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type VideoCollectionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type VideoCollectionUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutVideoCollectionsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoCollectionUncheckedCreateNestedManyWithoutVideosInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutVideosInput>>>;
};

export type VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCollectionCreateManyWebsiteInputEnvelope>;
};

export type VideoCollectionUncheckedCreateWithoutVideosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoCollectionUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutVideoCollectionsInput>;
};

export type VideoCollectionUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutVideoCollectionsNestedInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoCollectionUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoCollectionUncheckedUpdateManyWithoutVideoCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoCollectionUncheckedUpdateManyWithoutVideosNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutVideosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateWithWhereUniqueWithoutVideosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateManyWithWhereWithoutVideosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoCollectionUpsertWithWhereUniqueWithoutVideosInput>>>;
};

export type VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type VideoCollectionUncheckedUpdateWithoutVideosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoCollectionUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutVideoCollectionsNestedInput>;
};

export type VideoCollectionUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutVideoCollectionsNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutVideoCollectionsNestedInput>;
};

export type VideoCollectionUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type VideoCollectionUpdateManyWithWhereWithoutVideosInput = {
  data: VideoCollectionUncheckedUpdateManyWithoutVideoCollectionsInput;
  where: VideoCollectionScalarWhereInput;
};

export type VideoCollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: VideoCollectionUncheckedUpdateManyWithoutVideoCollectionsInput;
  where: VideoCollectionScalarWhereInput;
};

export type VideoCollectionUpdateManyWithoutVideosNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutVideosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateWithWhereUniqueWithoutVideosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateManyWithWhereWithoutVideosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoCollectionUpsertWithWhereUniqueWithoutVideosInput>>>;
};

export type VideoCollectionUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type VideoCollectionUpdateWithWhereUniqueWithoutVideosInput = {
  data: VideoCollectionUncheckedUpdateWithoutVideosInput;
  where: VideoCollectionWhereUniqueInput;
};

export type VideoCollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: VideoCollectionUncheckedUpdateWithoutWebsiteInput;
  where: VideoCollectionWhereUniqueInput;
};

export type VideoCollectionUpdateWithoutVideosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutVideoCollectionsNestedInput>;
};

export type VideoCollectionUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutVideoCollectionsNestedInput>;
};

export type VideoCollectionUpsertWithWhereUniqueWithoutVideosInput = {
  create: VideoCollectionUncheckedCreateWithoutVideosInput;
  update: VideoCollectionUncheckedUpdateWithoutVideosInput;
  where: VideoCollectionWhereUniqueInput;
};

export type VideoCollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: VideoCollectionUncheckedCreateWithoutWebsiteInput;
  update: VideoCollectionUncheckedUpdateWithoutWebsiteInput;
  where: VideoCollectionWhereUniqueInput;
};

export type VideoCollectionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoCollectionWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoCollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoCollectionWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  videos?: InputMaybe<VideoListRelationFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type VideoCollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type VideoCountAggregateOutputType = {
  __typename?: 'VideoCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  externalUrl: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  isExternalLink: Scalars['Int'];
  isIndex: Scalars['Int'];
  isYoutube: Scalars['Int'];
  menu: Scalars['Int'];
  name: Scalars['Int'];
  navColor: Scalars['Int'];
  password: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  videoObj: Scalars['Int'];
  videoPreviewObj: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type VideoCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  isYoutube?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  videoObj?: InputMaybe<SortOrder>;
  videoPreviewObj?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type VideoCountOutputType = {
  __typename?: 'VideoCountOutputType';
  requestClicks: Scalars['Int'];
  requests: Scalars['Int'];
  videoCollections: Scalars['Int'];
  videoViews: Scalars['Int'];
};

export type VideoCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewCreateNestedManyWithoutVideoInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutVideosInput>;
};

export type VideoCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
};

export type VideoCreateManyWebsiteInputEnvelope = {
  data: VideoCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type VideoCreateNestedManyWithoutVideoCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutVideoCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutVideoCollectionsInput>>>;
};

export type VideoCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCreateManyWebsiteInputEnvelope>;
};

export type VideoCreateNestedOneWithoutRequestClicksInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutRequestClicksInput>;
};

export type VideoCreateNestedOneWithoutRequestsInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutRequestsInput>;
};

export type VideoCreateNestedOneWithoutVideoViewsInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutVideoViewsInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutVideoViewsInput>;
};

export type VideoCreateOrConnectWithoutRequestClicksInput = {
  create: VideoUncheckedCreateWithoutRequestClicksInput;
  where: VideoWhereUniqueInput;
};

export type VideoCreateOrConnectWithoutRequestsInput = {
  create: VideoUncheckedCreateWithoutRequestsInput;
  where: VideoWhereUniqueInput;
};

export type VideoCreateOrConnectWithoutVideoCollectionsInput = {
  create: VideoUncheckedCreateWithoutVideoCollectionsInput;
  where: VideoWhereUniqueInput;
};

export type VideoCreateOrConnectWithoutVideoViewsInput = {
  create: VideoUncheckedCreateWithoutVideoViewsInput;
  where: VideoWhereUniqueInput;
};

export type VideoCreateOrConnectWithoutWebsiteInput = {
  create: VideoUncheckedCreateWithoutWebsiteInput;
  where: VideoWhereUniqueInput;
};

export type VideoCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewCreateNestedManyWithoutVideoInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutVideosInput>;
};

export type VideoCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewCreateNestedManyWithoutVideoInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutVideosInput>;
};

export type VideoCreateWithoutVideoCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewCreateNestedManyWithoutVideoInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutVideosInput>;
};

export type VideoCreateWithoutVideoViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutVideosInput>;
};

export type VideoCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewCreateNestedManyWithoutVideoInput>;
};

export type VideoListRelationFilter = {
  every?: InputMaybe<VideoWhereInput>;
  none?: InputMaybe<VideoWhereInput>;
  some?: InputMaybe<VideoWhereInput>;
};

export type VideoMaxAggregateOutputType = {
  __typename?: 'VideoMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  isYoutube?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type VideoMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  isYoutube?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type VideoMinAggregateOutputType = {
  __typename?: 'VideoMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isExternalLink?: Maybe<Scalars['Boolean']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  isYoutube?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  password?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type VideoMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isExternalLink?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  isYoutube?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type VideoOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type VideoOrderByWithAggregationInput = {
  _count?: InputMaybe<VideoCountOrderByAggregateInput>;
  _max?: InputMaybe<VideoMaxOrderByAggregateInput>;
  _min?: InputMaybe<VideoMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalLink?: InputMaybe<SortOrderInput>;
  isIndex?: InputMaybe<SortOrderInput>;
  isYoutube?: InputMaybe<SortOrderInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  navColor?: InputMaybe<SortOrderInput>;
  password?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  videoObj?: InputMaybe<SortOrderInput>;
  videoPreviewObj?: InputMaybe<SortOrderInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type VideoOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  externalUrl?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isExternalLink?: InputMaybe<SortOrderInput>;
  isIndex?: InputMaybe<SortOrderInput>;
  isYoutube?: InputMaybe<SortOrderInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  navColor?: InputMaybe<SortOrderInput>;
  password?: InputMaybe<SortOrderInput>;
  requestClicks?: InputMaybe<RequestClickOrderByRelationAggregateInput>;
  requests?: InputMaybe<RequestOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  videoCollections?: InputMaybe<VideoCollectionOrderByRelationAggregateInput>;
  videoObj?: InputMaybe<SortOrderInput>;
  videoPreviewObj?: InputMaybe<SortOrderInput>;
  videoViews?: InputMaybe<VideoViewOrderByRelationAggregateInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrderInput>;
};

export type VideoRelationFilter = {
  is?: InputMaybe<VideoWhereInput>;
  isNot?: InputMaybe<VideoWhereInput>;
};

export enum VideoScalarFieldEnum {
  Active = 'active',
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExternalUrl = 'externalUrl',
  Id = 'id',
  ImageObj = 'imageObj',
  IsExternalLink = 'isExternalLink',
  IsIndex = 'isIndex',
  IsYoutube = 'isYoutube',
  Menu = 'menu',
  Name = 'name',
  NavColor = 'navColor',
  Password = 'password',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  VideoObj = 'videoObj',
  VideoPreviewObj = 'videoPreviewObj',
  WebsiteId = 'websiteId'
}

export type VideoScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalLink?: InputMaybe<BoolNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  isYoutube?: InputMaybe<BoolNullableFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  password?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  videoObj?: InputMaybe<JsonNullableFilter>;
  videoPreviewObj?: InputMaybe<JsonNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type VideoScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  isExternalLink?: InputMaybe<BoolNullableWithAggregatesFilter>;
  isIndex?: InputMaybe<BoolNullableWithAggregatesFilter>;
  isYoutube?: InputMaybe<BoolNullableWithAggregatesFilter>;
  menu?: InputMaybe<BoolNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  navColor?: InputMaybe<EnumNavColorNullableWithAggregatesFilter>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  videoObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  videoPreviewObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type VideoUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedCreateNestedManyWithoutVideoInput>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoUncheckedCreateNestedManyWithoutVideoCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutVideoCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutVideoCollectionsInput>>>;
};

export type VideoUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCreateManyWebsiteInputEnvelope>;
};

export type VideoUncheckedCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedCreateNestedManyWithoutVideoInput>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoUncheckedCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedCreateNestedManyWithoutVideoInput>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoUncheckedCreateWithoutVideoCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedCreateNestedManyWithoutVideoInput>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoUncheckedCreateWithoutVideoViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type VideoUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<Scalars['Boolean']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  isYoutube?: InputMaybe<Scalars['Boolean']>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  navColor?: InputMaybe<NavColor>;
  password?: InputMaybe<Scalars['String']>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutVideoInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutVideoInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedCreateNestedManyWithoutVideoInput>;
};

export type VideoUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedUpdateManyWithoutVideoNestedInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateManyWithoutVideoCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutVideoCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutVideoCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutVideoCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutVideoCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutVideoCollectionsInput>>>;
};

export type VideoUncheckedUpdateManyWithoutVideosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type VideoUncheckedUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedUpdateManyWithoutVideoNestedInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedUpdateManyWithoutVideoNestedInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateWithoutVideoCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedUpdateManyWithoutVideoNestedInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateWithoutVideoViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUncheckedUpdateManyWithoutVideoNestedInput>;
};

export type VideoUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUpdateManyWithoutVideoNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutVideosNestedInput>;
};

export type VideoUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
};

export type VideoUpdateManyWithWhereWithoutVideoCollectionsInput = {
  data: VideoUncheckedUpdateManyWithoutVideosInput;
  where: VideoScalarWhereInput;
};

export type VideoUpdateManyWithWhereWithoutWebsiteInput = {
  data: VideoUncheckedUpdateManyWithoutVideosInput;
  where: VideoScalarWhereInput;
};

export type VideoUpdateManyWithoutVideoCollectionsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutVideoCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutVideoCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutVideoCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutVideoCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutVideoCollectionsInput>>>;
};

export type VideoUpdateManyWithoutWebsiteNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<VideoCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type VideoUpdateOneWithoutRequestClicksNestedInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutRequestClicksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<VideoUncheckedUpdateWithoutRequestClicksInput>;
  upsert?: InputMaybe<VideoUpsertWithoutRequestClicksInput>;
};

export type VideoUpdateOneWithoutRequestsNestedInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutRequestsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<VideoUncheckedUpdateWithoutRequestsInput>;
  upsert?: InputMaybe<VideoUpsertWithoutRequestsInput>;
};

export type VideoUpdateOneWithoutVideoViewsNestedInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutVideoViewsInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutVideoViewsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<VideoUncheckedUpdateWithoutVideoViewsInput>;
  upsert?: InputMaybe<VideoUpsertWithoutVideoViewsInput>;
};

export type VideoUpdateWithWhereUniqueWithoutVideoCollectionsInput = {
  data: VideoUncheckedUpdateWithoutVideoCollectionsInput;
  where: VideoWhereUniqueInput;
};

export type VideoUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: VideoUncheckedUpdateWithoutWebsiteInput;
  where: VideoWhereUniqueInput;
};

export type VideoUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUpdateManyWithoutVideoNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutVideosNestedInput>;
};

export type VideoUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUpdateManyWithoutVideoNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutVideosNestedInput>;
};

export type VideoUpdateWithoutVideoCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUpdateManyWithoutVideoNestedInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutVideosNestedInput>;
};

export type VideoUpdateWithoutVideoViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  website?: InputMaybe<WebsiteUpdateOneWithoutVideosNestedInput>;
};

export type VideoUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isExternalLink?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isYoutube?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutVideoNestedInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutVideoNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutVideosNestedInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  videoPreviewObj?: InputMaybe<Scalars['Json']>;
  videoViews?: InputMaybe<VideoViewUpdateManyWithoutVideoNestedInput>;
};

export type VideoUpsertWithWhereUniqueWithoutVideoCollectionsInput = {
  create: VideoUncheckedCreateWithoutVideoCollectionsInput;
  update: VideoUncheckedUpdateWithoutVideoCollectionsInput;
  where: VideoWhereUniqueInput;
};

export type VideoUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: VideoUncheckedCreateWithoutWebsiteInput;
  update: VideoUncheckedUpdateWithoutWebsiteInput;
  where: VideoWhereUniqueInput;
};

export type VideoUpsertWithoutRequestClicksInput = {
  create: VideoUncheckedCreateWithoutRequestClicksInput;
  update: VideoUncheckedUpdateWithoutRequestClicksInput;
};

export type VideoUpsertWithoutRequestsInput = {
  create: VideoUncheckedCreateWithoutRequestsInput;
  update: VideoUncheckedUpdateWithoutRequestsInput;
};

export type VideoUpsertWithoutVideoViewsInput = {
  create: VideoUncheckedCreateWithoutVideoViewsInput;
  update: VideoUncheckedUpdateWithoutVideoViewsInput;
};

export type VideoView = {
  __typename?: 'VideoView';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  ip?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  video?: Maybe<Video>;
  videoId?: Maybe<Scalars['String']>;
};

export type VideoViewCountAggregateOutputType = {
  __typename?: 'VideoViewCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  updatedAt: Scalars['Int'];
  videoId: Scalars['Int'];
};

export type VideoViewCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type VideoViewCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutVideoViewsInput>;
};

export type VideoViewCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type VideoViewCreateManyVideoInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type VideoViewCreateManyVideoInputEnvelope = {
  data: VideoViewCreateManyVideoInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type VideoViewCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoViewCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoViewCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<VideoViewCreateManyVideoInputEnvelope>;
};

export type VideoViewCreateOrConnectWithoutVideoInput = {
  create: VideoViewUncheckedCreateWithoutVideoInput;
  where: VideoViewWhereUniqueInput;
};

export type VideoViewCreateWithoutVideoInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type VideoViewListRelationFilter = {
  every?: InputMaybe<VideoViewWhereInput>;
  none?: InputMaybe<VideoViewWhereInput>;
  some?: InputMaybe<VideoViewWhereInput>;
};

export type VideoViewMaxAggregateOutputType = {
  __typename?: 'VideoViewMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  videoId?: Maybe<Scalars['String']>;
};

export type VideoViewMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type VideoViewMinAggregateOutputType = {
  __typename?: 'VideoViewMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  videoId?: Maybe<Scalars['String']>;
};

export type VideoViewMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type VideoViewOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type VideoViewOrderByWithAggregationInput = {
  _count?: InputMaybe<VideoViewCountOrderByAggregateInput>;
  _max?: InputMaybe<VideoViewMaxOrderByAggregateInput>;
  _min?: InputMaybe<VideoViewMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  videoId?: InputMaybe<SortOrderInput>;
};

export type VideoViewOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  video?: InputMaybe<VideoOrderByWithRelationInput>;
  videoId?: InputMaybe<SortOrderInput>;
};

export enum VideoViewScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Ip = 'ip',
  UpdatedAt = 'updatedAt',
  VideoId = 'videoId'
}

export type VideoViewScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  videoId?: InputMaybe<StringNullableFilter>;
};

export type VideoViewScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  videoId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type VideoViewUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoId?: InputMaybe<Scalars['String']>;
};

export type VideoViewUncheckedCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoViewCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoViewCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<VideoViewCreateManyVideoInputEnvelope>;
};

export type VideoViewUncheckedCreateWithoutVideoInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type VideoViewUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoViewUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoViewUncheckedUpdateManyWithoutVideoNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoViewCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoViewCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<VideoViewCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoViewUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoViewUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoViewUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type VideoViewUncheckedUpdateManyWithoutVideoViewsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type VideoViewUncheckedUpdateWithoutVideoInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type VideoViewUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutVideoViewsNestedInput>;
};

export type VideoViewUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type VideoViewUpdateManyWithWhereWithoutVideoInput = {
  data: VideoViewUncheckedUpdateManyWithoutVideoViewsInput;
  where: VideoViewScalarWhereInput;
};

export type VideoViewUpdateManyWithoutVideoNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoViewCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoViewCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<VideoViewCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoViewUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoViewUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoViewUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type VideoViewUpdateWithWhereUniqueWithoutVideoInput = {
  data: VideoViewUncheckedUpdateWithoutVideoInput;
  where: VideoViewWhereUniqueInput;
};

export type VideoViewUpdateWithoutVideoInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type VideoViewUpsertWithWhereUniqueWithoutVideoInput = {
  create: VideoViewUncheckedCreateWithoutVideoInput;
  update: VideoViewUncheckedUpdateWithoutVideoInput;
  where: VideoViewWhereUniqueInput;
};

export type VideoViewWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoViewWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoViewWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoViewWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  video?: InputMaybe<VideoWhereInput>;
  videoId?: InputMaybe<StringNullableFilter>;
};

export type VideoViewWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type VideoWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<VideoWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isExternalLink?: InputMaybe<BoolNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  isYoutube?: InputMaybe<BoolNullableFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  password?: InputMaybe<StringNullableFilter>;
  requestClicks?: InputMaybe<RequestClickListRelationFilter>;
  requests?: InputMaybe<RequestListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  videoCollections?: InputMaybe<VideoCollectionListRelationFilter>;
  videoObj?: InputMaybe<JsonNullableFilter>;
  videoPreviewObj?: InputMaybe<JsonNullableFilter>;
  videoViews?: InputMaybe<VideoViewListRelationFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type VideoWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type Website = {
  __typename?: 'Website';
  _count: WebsiteCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  address?: Maybe<Scalars['Json']>;
  adminFilters?: Maybe<Scalars['Json']>;
  affiliates: Array<Affiliate>;
  attachments: Array<Attachment>;
  attributes: Array<Attribute>;
  audioCollections: Array<AudioCollection>;
  audios: Array<Audio>;
  chain?: Maybe<Scalars['Json']>;
  coupons: Array<Coupon>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  customers: Array<Customer>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  eventCollections: Array<EventCollection>;
  eventGroups: Array<EventGroup>;
  events: Array<Event>;
  gasless?: Maybe<Scalars['Boolean']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  isTemplate?: Maybe<Scalars['Boolean']>;
  languageCode?: Maybe<LanguageCode>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  logoObj?: Maybe<Scalars['Json']>;
  marketingLocations: Array<MarketingLocation>;
  menu?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  notifications: Array<Notification>;
  orders: Array<Order>;
  pageCollections: Array<PageCollection>;
  pages: Array<Page>;
  phone?: Maybe<Scalars['String']>;
  productCollections: Array<ProductCollection>;
  productGroups: Array<ProductGroup>;
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  themeColor?: Maybe<Color>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  videoCollections: Array<VideoCollection>;
  videos: Array<Video>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteGroups: Array<WebsiteGroup>;
};


export type WebsiteAffiliatesArgs = {
  cursor?: InputMaybe<AffiliateWhereUniqueInput>;
  distinct?: InputMaybe<AffiliateScalarFieldEnum>;
  orderBy?: InputMaybe<AffiliateOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AffiliateWhereInput>;
};


export type WebsiteAttachmentsArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<AttachmentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type WebsiteAttributesArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<AttributeScalarFieldEnum>;
  orderBy?: InputMaybe<AttributeOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type WebsiteAudioCollectionsArgs = {
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  distinct?: InputMaybe<AudioCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<AudioCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioCollectionWhereInput>;
};


export type WebsiteAudiosArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<AudioScalarFieldEnum>;
  orderBy?: InputMaybe<AudioOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type WebsiteCouponsArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<CouponScalarFieldEnum>;
  orderBy?: InputMaybe<CouponOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type WebsiteCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<CustomerScalarFieldEnum>;
  orderBy?: InputMaybe<CustomerOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type WebsiteEventCollectionsArgs = {
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  distinct?: InputMaybe<EventCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<EventCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventCollectionWhereInput>;
};


export type WebsiteEventGroupsArgs = {
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  distinct?: InputMaybe<EventGroupScalarFieldEnum>;
  orderBy?: InputMaybe<EventGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventGroupWhereInput>;
};


export type WebsiteEventsArgs = {
  cursor?: InputMaybe<EventWhereUniqueInput>;
  distinct?: InputMaybe<EventScalarFieldEnum>;
  orderBy?: InputMaybe<EventOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventWhereInput>;
};


export type WebsiteMarketingLocationsArgs = {
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  distinct?: InputMaybe<MarketingLocationScalarFieldEnum>;
  orderBy?: InputMaybe<MarketingLocationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MarketingLocationWhereInput>;
};


export type WebsiteNotificationsArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<NotificationScalarFieldEnum>;
  orderBy?: InputMaybe<NotificationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type WebsiteOrdersArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<OrderOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type WebsitePageCollectionsArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<PageCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<PageCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type WebsitePagesArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<PageOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type WebsiteProductCollectionsArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<ProductCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<ProductCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type WebsiteProductGroupsArgs = {
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  distinct?: InputMaybe<ProductGroupScalarFieldEnum>;
  orderBy?: InputMaybe<ProductGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductGroupWhereInput>;
};


export type WebsiteProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type WebsiteVideoCollectionsArgs = {
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  distinct?: InputMaybe<VideoCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<VideoCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoCollectionWhereInput>;
};


export type WebsiteVideosArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<VideoScalarFieldEnum>;
  orderBy?: InputMaybe<VideoOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type WebsiteWebsiteGroupsArgs = {
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteGroupScalarFieldEnum>;
  orderBy?: InputMaybe<WebsiteGroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteGroupWhereInput>;
};

export type WebsiteAvgAggregateOutputType = {
  __typename?: 'WebsiteAvgAggregateOutputType';
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
};

export type WebsiteAvgOrderByAggregateInput = {
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
};

export type WebsiteCountAggregateOutputType = {
  __typename?: 'WebsiteCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  address: Scalars['Int'];
  adminFilters: Scalars['Int'];
  chain: Scalars['Int'];
  createdAt: Scalars['Int'];
  currencyCode: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  gasless: Scalars['Int'];
  hasLocation: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  isTemplate: Scalars['Int'];
  languageCode: Scalars['Int'];
  locationAddress: Scalars['Int'];
  locationLat: Scalars['Int'];
  locationLng: Scalars['Int'];
  logoObj: Scalars['Int'];
  menu: Scalars['Int'];
  name: Scalars['Int'];
  phone: Scalars['Int'];
  slug: Scalars['Int'];
  stripeAccountId: Scalars['Int'];
  themeColor: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type WebsiteCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  adminFilters?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gasless?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isTemplate?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  logoObj?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  themeColor?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type WebsiteCountOutputType = {
  __typename?: 'WebsiteCountOutputType';
  affiliates: Scalars['Int'];
  attachments: Scalars['Int'];
  attributes: Scalars['Int'];
  audioCollections: Scalars['Int'];
  audios: Scalars['Int'];
  coupons: Scalars['Int'];
  customers: Scalars['Int'];
  eventCollections: Scalars['Int'];
  eventGroups: Scalars['Int'];
  events: Scalars['Int'];
  marketingLocations: Scalars['Int'];
  notifications: Scalars['Int'];
  orders: Scalars['Int'];
  pageCollections: Scalars['Int'];
  pages: Scalars['Int'];
  productCollections: Scalars['Int'];
  productGroups: Scalars['Int'];
  products: Scalars['Int'];
  videoCollections: Scalars['Int'];
  videos: Scalars['Int'];
  websiteGroups: Scalars['Int'];
};

export type WebsiteCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type WebsiteCreateManyUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type WebsiteCreateManyUserInputEnvelope = {
  data: WebsiteCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WebsiteCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
};

export type WebsiteCreateNestedManyWithoutWebsiteGroupsInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutWebsiteGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutWebsiteGroupsInput>>>;
};

export type WebsiteCreateNestedOneWithoutAffiliatesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAffiliatesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAffiliatesInput>;
};

export type WebsiteCreateNestedOneWithoutAttachmentsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttachmentsInput>;
};

export type WebsiteCreateNestedOneWithoutAttributesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttributesInput>;
};

export type WebsiteCreateNestedOneWithoutAudioCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAudioCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAudioCollectionsInput>;
};

export type WebsiteCreateNestedOneWithoutAudiosInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAudiosInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAudiosInput>;
};

export type WebsiteCreateNestedOneWithoutCouponsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCouponsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCouponsInput>;
};

export type WebsiteCreateNestedOneWithoutCustomersInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCustomersInput>;
};

export type WebsiteCreateNestedOneWithoutEventCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutEventCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutEventCollectionsInput>;
};

export type WebsiteCreateNestedOneWithoutEventGroupsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutEventGroupsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutEventGroupsInput>;
};

export type WebsiteCreateNestedOneWithoutEventsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutEventsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutEventsInput>;
};

export type WebsiteCreateNestedOneWithoutMarketingLocationsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutMarketingLocationsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutMarketingLocationsInput>;
};

export type WebsiteCreateNestedOneWithoutNotificationsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutNotificationsInput>;
};

export type WebsiteCreateNestedOneWithoutOrdersInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutOrdersInput>;
};

export type WebsiteCreateNestedOneWithoutPageCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPageCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPageCollectionsInput>;
};

export type WebsiteCreateNestedOneWithoutPagesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPagesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPagesInput>;
};

export type WebsiteCreateNestedOneWithoutProductCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductCollectionsInput>;
};

export type WebsiteCreateNestedOneWithoutProductGroupsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductGroupsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductGroupsInput>;
};

export type WebsiteCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductsInput>;
};

export type WebsiteCreateNestedOneWithoutVideoCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutVideoCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutVideoCollectionsInput>;
};

export type WebsiteCreateNestedOneWithoutVideosInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutVideosInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutVideosInput>;
};

export type WebsiteCreateOrConnectWithoutAffiliatesInput = {
  create: WebsiteUncheckedCreateWithoutAffiliatesInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutAttachmentsInput = {
  create: WebsiteUncheckedCreateWithoutAttachmentsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutAttributesInput = {
  create: WebsiteUncheckedCreateWithoutAttributesInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutAudioCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutAudioCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutAudiosInput = {
  create: WebsiteUncheckedCreateWithoutAudiosInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutCouponsInput = {
  create: WebsiteUncheckedCreateWithoutCouponsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutCustomersInput = {
  create: WebsiteUncheckedCreateWithoutCustomersInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutEventCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutEventCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutEventGroupsInput = {
  create: WebsiteUncheckedCreateWithoutEventGroupsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutEventsInput = {
  create: WebsiteUncheckedCreateWithoutEventsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutMarketingLocationsInput = {
  create: WebsiteUncheckedCreateWithoutMarketingLocationsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutNotificationsInput = {
  create: WebsiteUncheckedCreateWithoutNotificationsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutOrdersInput = {
  create: WebsiteUncheckedCreateWithoutOrdersInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutPageCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutPageCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutPagesInput = {
  create: WebsiteUncheckedCreateWithoutPagesInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutProductCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutProductCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutProductGroupsInput = {
  create: WebsiteUncheckedCreateWithoutProductGroupsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutProductsInput = {
  create: WebsiteUncheckedCreateWithoutProductsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutUserInput = {
  create: WebsiteUncheckedCreateWithoutUserInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutVideoCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutVideoCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutVideosInput = {
  create: WebsiteUncheckedCreateWithoutVideosInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateOrConnectWithoutWebsiteGroupsInput = {
  create: WebsiteUncheckedCreateWithoutWebsiteGroupsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteCreateWithoutAffiliatesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutAttributesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutAudioCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutAudiosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutCustomersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutEventCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutEventGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutMarketingLocationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutNotificationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutProductGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutVideoCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutVideosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteCreateWithoutWebsiteGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  videoCollections?: InputMaybe<VideoCollectionCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type WebsiteGroup = {
  __typename?: 'WebsiteGroup';
  _count: WebsiteGroupCountOutputType;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  organization?: Maybe<Organization>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websites: Array<Website>;
};


export type WebsiteGroupWebsitesArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteScalarFieldEnum>;
  orderBy?: InputMaybe<WebsiteOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};

export type WebsiteGroupCountAggregateOutputType = {
  __typename?: 'WebsiteGroupCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  organizationId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type WebsiteGroupCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type WebsiteGroupCountOutputType = {
  __typename?: 'WebsiteGroupCountOutputType';
  websites: Scalars['Int'];
};

export type WebsiteGroupCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutWebsiteGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutWebsiteGroupsInput>;
};

export type WebsiteGroupCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type WebsiteGroupCreateManyOrganizationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type WebsiteGroupCreateManyOrganizationInputEnvelope = {
  data: WebsiteGroupCreateManyOrganizationInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WebsiteGroupCreateNestedManyWithoutOrganizationInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<WebsiteGroupCreateManyOrganizationInputEnvelope>;
};

export type WebsiteGroupCreateNestedManyWithoutWebsitesInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutWebsitesInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutWebsitesInput>>>;
};

export type WebsiteGroupCreateOrConnectWithoutOrganizationInput = {
  create: WebsiteGroupUncheckedCreateWithoutOrganizationInput;
  where: WebsiteGroupWhereUniqueInput;
};

export type WebsiteGroupCreateOrConnectWithoutWebsitesInput = {
  create: WebsiteGroupUncheckedCreateWithoutWebsitesInput;
  where: WebsiteGroupWhereUniqueInput;
};

export type WebsiteGroupCreateWithoutOrganizationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutWebsiteGroupsInput>;
};

export type WebsiteGroupCreateWithoutWebsitesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutWebsiteGroupsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type WebsiteGroupListRelationFilter = {
  every?: InputMaybe<WebsiteGroupWhereInput>;
  none?: InputMaybe<WebsiteGroupWhereInput>;
  some?: InputMaybe<WebsiteGroupWhereInput>;
};

export type WebsiteGroupMaxAggregateOutputType = {
  __typename?: 'WebsiteGroupMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type WebsiteGroupMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type WebsiteGroupMinAggregateOutputType = {
  __typename?: 'WebsiteGroupMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organizationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type WebsiteGroupMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type WebsiteGroupOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WebsiteGroupOrderByWithAggregationInput = {
  _count?: InputMaybe<WebsiteGroupCountOrderByAggregateInput>;
  _max?: InputMaybe<WebsiteGroupMaxOrderByAggregateInput>;
  _min?: InputMaybe<WebsiteGroupMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  organizationId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type WebsiteGroupOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  organization?: InputMaybe<OrganizationOrderByWithRelationInput>;
  organizationId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  websites?: InputMaybe<WebsiteOrderByRelationAggregateInput>;
};

export enum WebsiteGroupScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  OrganizationId = 'organizationId',
  UpdatedAt = 'updatedAt'
}

export type WebsiteGroupScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  organizationId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type WebsiteGroupScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  organizationId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type WebsiteGroupUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutWebsiteGroupsInput>;
};

export type WebsiteGroupUncheckedCreateNestedManyWithoutOrganizationInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<WebsiteGroupCreateManyOrganizationInputEnvelope>;
};

export type WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutWebsitesInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutWebsitesInput>>>;
};

export type WebsiteGroupUncheckedCreateWithoutOrganizationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutWebsiteGroupsInput>;
};

export type WebsiteGroupUncheckedCreateWithoutWebsitesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organizationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type WebsiteGroupUncheckedUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutWebsiteGroupsNestedInput>;
};

export type WebsiteGroupUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type WebsiteGroupUncheckedUpdateManyWithoutOrganizationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<WebsiteGroupCreateManyOrganizationInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateWithWhereUniqueWithoutOrganizationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateManyWithWhereWithoutOrganizationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteGroupUpsertWithWhereUniqueWithoutOrganizationInput>>>;
};

export type WebsiteGroupUncheckedUpdateManyWithoutWebsiteGroupsInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutWebsitesInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutWebsitesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateWithWhereUniqueWithoutWebsitesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateManyWithWhereWithoutWebsitesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteGroupUpsertWithWhereUniqueWithoutWebsitesInput>>>;
};

export type WebsiteGroupUncheckedUpdateWithoutOrganizationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutWebsiteGroupsNestedInput>;
};

export type WebsiteGroupUncheckedUpdateWithoutWebsitesInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type WebsiteGroupUpdateInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutWebsiteGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutWebsiteGroupsNestedInput>;
};

export type WebsiteGroupUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type WebsiteGroupUpdateManyWithWhereWithoutOrganizationInput = {
  data: WebsiteGroupUncheckedUpdateManyWithoutWebsiteGroupsInput;
  where: WebsiteGroupScalarWhereInput;
};

export type WebsiteGroupUpdateManyWithWhereWithoutWebsitesInput = {
  data: WebsiteGroupUncheckedUpdateManyWithoutWebsiteGroupsInput;
  where: WebsiteGroupScalarWhereInput;
};

export type WebsiteGroupUpdateManyWithoutOrganizationNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutOrganizationInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutOrganizationInput>>>;
  createMany?: InputMaybe<WebsiteGroupCreateManyOrganizationInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateWithWhereUniqueWithoutOrganizationInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateManyWithWhereWithoutOrganizationInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteGroupUpsertWithWhereUniqueWithoutOrganizationInput>>>;
};

export type WebsiteGroupUpdateManyWithoutWebsitesNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateOrConnectWithoutWebsitesInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteGroupCreateWithoutWebsitesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteGroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateWithWhereUniqueWithoutWebsitesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteGroupUpdateManyWithWhereWithoutWebsitesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteGroupUpsertWithWhereUniqueWithoutWebsitesInput>>>;
};

export type WebsiteGroupUpdateWithWhereUniqueWithoutOrganizationInput = {
  data: WebsiteGroupUncheckedUpdateWithoutOrganizationInput;
  where: WebsiteGroupWhereUniqueInput;
};

export type WebsiteGroupUpdateWithWhereUniqueWithoutWebsitesInput = {
  data: WebsiteGroupUncheckedUpdateWithoutWebsitesInput;
  where: WebsiteGroupWhereUniqueInput;
};

export type WebsiteGroupUpdateWithoutOrganizationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutWebsiteGroupsNestedInput>;
};

export type WebsiteGroupUpdateWithoutWebsitesInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutWebsiteGroupsNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type WebsiteGroupUpsertWithWhereUniqueWithoutOrganizationInput = {
  create: WebsiteGroupUncheckedCreateWithoutOrganizationInput;
  update: WebsiteGroupUncheckedUpdateWithoutOrganizationInput;
  where: WebsiteGroupWhereUniqueInput;
};

export type WebsiteGroupUpsertWithWhereUniqueWithoutWebsitesInput = {
  create: WebsiteGroupUncheckedCreateWithoutWebsitesInput;
  update: WebsiteGroupUncheckedUpdateWithoutWebsitesInput;
  where: WebsiteGroupWhereUniqueInput;
};

export type WebsiteGroupWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteGroupWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  organization?: InputMaybe<OrganizationWhereInput>;
  organizationId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  websites?: InputMaybe<WebsiteListRelationFilter>;
};

export type WebsiteGroupWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type WebsiteListRelationFilter = {
  every?: InputMaybe<WebsiteWhereInput>;
  none?: InputMaybe<WebsiteWhereInput>;
  some?: InputMaybe<WebsiteWhereInput>;
};

export type WebsiteMaxAggregateOutputType = {
  __typename?: 'WebsiteMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  gasless?: Maybe<Scalars['Boolean']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  isTemplate?: Maybe<Scalars['Boolean']>;
  languageCode?: Maybe<LanguageCode>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  themeColor?: Maybe<Color>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type WebsiteMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gasless?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isTemplate?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  themeColor?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type WebsiteMinAggregateOutputType = {
  __typename?: 'WebsiteMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  gasless?: Maybe<Scalars['Boolean']>;
  hasLocation?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  isTemplate?: Maybe<Scalars['Boolean']>;
  languageCode?: Maybe<LanguageCode>;
  locationAddress?: Maybe<Scalars['String']>;
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  themeColor?: Maybe<Color>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type WebsiteMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gasless?: InputMaybe<SortOrder>;
  hasLocation?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isTemplate?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  locationAddress?: InputMaybe<SortOrder>;
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  themeColor?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type WebsiteOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WebsiteOrderByWithAggregationInput = {
  _avg?: InputMaybe<WebsiteAvgOrderByAggregateInput>;
  _count?: InputMaybe<WebsiteCountOrderByAggregateInput>;
  _max?: InputMaybe<WebsiteMaxOrderByAggregateInput>;
  _min?: InputMaybe<WebsiteMinOrderByAggregateInput>;
  _sum?: InputMaybe<WebsiteSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrderInput>;
  address?: InputMaybe<SortOrderInput>;
  adminFilters?: InputMaybe<SortOrderInput>;
  chain?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  currencyCode?: InputMaybe<SortOrderInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  gasless?: InputMaybe<SortOrderInput>;
  hasLocation?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isTemplate?: InputMaybe<SortOrderInput>;
  languageCode?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  logoObj?: InputMaybe<SortOrderInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  phone?: InputMaybe<SortOrderInput>;
  slug?: InputMaybe<SortOrderInput>;
  stripeAccountId?: InputMaybe<SortOrderInput>;
  themeColor?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  userId?: InputMaybe<SortOrderInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
};

export type WebsiteOrderByWithRelationInput = {
  active?: InputMaybe<SortOrderInput>;
  address?: InputMaybe<SortOrderInput>;
  adminFilters?: InputMaybe<SortOrderInput>;
  affiliates?: InputMaybe<AffiliateOrderByRelationAggregateInput>;
  attachments?: InputMaybe<AttachmentOrderByRelationAggregateInput>;
  attributes?: InputMaybe<AttributeOrderByRelationAggregateInput>;
  audioCollections?: InputMaybe<AudioCollectionOrderByRelationAggregateInput>;
  audios?: InputMaybe<AudioOrderByRelationAggregateInput>;
  chain?: InputMaybe<SortOrderInput>;
  coupons?: InputMaybe<CouponOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  currencyCode?: InputMaybe<SortOrderInput>;
  customers?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  deleted?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  eventCollections?: InputMaybe<EventCollectionOrderByRelationAggregateInput>;
  eventGroups?: InputMaybe<EventGroupOrderByRelationAggregateInput>;
  events?: InputMaybe<EventOrderByRelationAggregateInput>;
  gasless?: InputMaybe<SortOrderInput>;
  hasLocation?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrderInput>;
  isTemplate?: InputMaybe<SortOrderInput>;
  languageCode?: InputMaybe<SortOrderInput>;
  locationAddress?: InputMaybe<SortOrderInput>;
  locationLat?: InputMaybe<SortOrderInput>;
  locationLng?: InputMaybe<SortOrderInput>;
  logoObj?: InputMaybe<SortOrderInput>;
  marketingLocations?: InputMaybe<MarketingLocationOrderByRelationAggregateInput>;
  menu?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  notifications?: InputMaybe<NotificationOrderByRelationAggregateInput>;
  orders?: InputMaybe<OrderOrderByRelationAggregateInput>;
  pageCollections?: InputMaybe<PageCollectionOrderByRelationAggregateInput>;
  pages?: InputMaybe<PageOrderByRelationAggregateInput>;
  phone?: InputMaybe<SortOrderInput>;
  productCollections?: InputMaybe<ProductCollectionOrderByRelationAggregateInput>;
  productGroups?: InputMaybe<ProductGroupOrderByRelationAggregateInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrderInput>;
  stripeAccountId?: InputMaybe<SortOrderInput>;
  themeColor?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrderInput>;
  videoCollections?: InputMaybe<VideoCollectionOrderByRelationAggregateInput>;
  videos?: InputMaybe<VideoOrderByRelationAggregateInput>;
  walletAddress?: InputMaybe<SortOrderInput>;
  websiteGroups?: InputMaybe<WebsiteGroupOrderByRelationAggregateInput>;
};

export type WebsiteRelationFilter = {
  is?: InputMaybe<WebsiteWhereInput>;
  isNot?: InputMaybe<WebsiteWhereInput>;
};

export enum WebsiteScalarFieldEnum {
  Active = 'active',
  Address = 'address',
  AdminFilters = 'adminFilters',
  Chain = 'chain',
  CreatedAt = 'createdAt',
  CurrencyCode = 'currencyCode',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Gasless = 'gasless',
  HasLocation = 'hasLocation',
  Id = 'id',
  ImageObj = 'imageObj',
  IsTemplate = 'isTemplate',
  LanguageCode = 'languageCode',
  LocationAddress = 'locationAddress',
  LocationLat = 'locationLat',
  LocationLng = 'locationLng',
  LogoObj = 'logoObj',
  Menu = 'menu',
  Name = 'name',
  Phone = 'phone',
  Slug = 'slug',
  StripeAccountId = 'stripeAccountId',
  ThemeColor = 'themeColor',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress'
}

export type WebsiteScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  address?: InputMaybe<JsonNullableFilter>;
  adminFilters?: InputMaybe<JsonNullableFilter>;
  chain?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  gasless?: InputMaybe<BoolNullableFilter>;
  hasLocation?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isTemplate?: InputMaybe<BoolNullableFilter>;
  languageCode?: InputMaybe<EnumLanguageCodeNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  logoObj?: InputMaybe<JsonNullableFilter>;
  menu?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  stripeAccountId?: InputMaybe<StringNullableFilter>;
  themeColor?: InputMaybe<EnumColorNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type WebsiteScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereWithAggregatesInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereWithAggregatesInput>>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  address?: InputMaybe<JsonNullableWithAggregatesFilter>;
  adminFilters?: InputMaybe<JsonNullableWithAggregatesFilter>;
  chain?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  gasless?: InputMaybe<BoolNullableWithAggregatesFilter>;
  hasLocation?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  isTemplate?: InputMaybe<BoolNullableWithAggregatesFilter>;
  languageCode?: InputMaybe<EnumLanguageCodeNullableWithAggregatesFilter>;
  locationAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  locationLat?: InputMaybe<FloatNullableWithAggregatesFilter>;
  locationLng?: InputMaybe<FloatNullableWithAggregatesFilter>;
  logoObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  menu?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  stripeAccountId?: InputMaybe<StringNullableWithAggregatesFilter>;
  themeColor?: InputMaybe<EnumColorNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type WebsiteSumAggregateOutputType = {
  __typename?: 'WebsiteSumAggregateOutputType';
  locationLat?: Maybe<Scalars['Float']>;
  locationLng?: Maybe<Scalars['Float']>;
};

export type WebsiteSumOrderByAggregateInput = {
  locationLat?: InputMaybe<SortOrder>;
  locationLng?: InputMaybe<SortOrder>;
};

export type WebsiteUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
};

export type WebsiteUncheckedCreateNestedManyWithoutWebsiteGroupsInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutWebsiteGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutWebsiteGroupsInput>>>;
};

export type WebsiteUncheckedCreateWithoutAffiliatesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutAttributesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutAudioCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutAudiosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutCustomersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutEventCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutEventGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutEventsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutMarketingLocationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutNotificationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutProductGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutVideoCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutVideosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedCreateNestedManyWithoutWebsitesInput>;
};

export type WebsiteUncheckedCreateWithoutWebsiteGroupsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedCreateNestedManyWithoutWebsiteInput>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  eventCollections?: InputMaybe<EventCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  events?: InputMaybe<EventUncheckedCreateNestedManyWithoutWebsiteInput>;
  gasless?: InputMaybe<Scalars['Boolean']>;
  hasLocation?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<LanguageCode>;
  locationAddress?: InputMaybe<Scalars['String']>;
  locationLat?: InputMaybe<Scalars['Float']>;
  locationLng?: InputMaybe<Scalars['Float']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedCreateNestedManyWithoutWebsiteInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  phone?: InputMaybe<Scalars['String']>;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor?: InputMaybe<Color>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutWebsiteInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type WebsiteUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteUncheckedUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type WebsiteUncheckedUpdateManyWithoutWebsiteGroupsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutWebsiteGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutWebsiteGroupsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteUpdateWithWhereUniqueWithoutWebsiteGroupsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteUpdateManyWithWhereWithoutWebsiteGroupsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteUpsertWithWhereUniqueWithoutWebsiteGroupsInput>>>;
};

export type WebsiteUncheckedUpdateManyWithoutWebsitesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteUncheckedUpdateWithoutAffiliatesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutAttributesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutAudioCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutAudiosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutCustomersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutEventCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutEventGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutMarketingLocationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutNotificationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutProductGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutUserInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutVideoCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutVideosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUncheckedUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUncheckedUpdateWithoutWebsiteGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUncheckedUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUncheckedUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUncheckedUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteUpdateManyWithWhereWithoutUserInput = {
  data: WebsiteUncheckedUpdateManyWithoutWebsitesInput;
  where: WebsiteScalarWhereInput;
};

export type WebsiteUpdateManyWithWhereWithoutWebsiteGroupsInput = {
  data: WebsiteUncheckedUpdateManyWithoutWebsitesInput;
  where: WebsiteScalarWhereInput;
};

export type WebsiteUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type WebsiteUpdateManyWithoutWebsiteGroupsNestedInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutWebsiteGroupsInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutWebsiteGroupsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteUpdateWithWhereUniqueWithoutWebsiteGroupsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteUpdateManyWithWhereWithoutWebsiteGroupsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteUpsertWithWhereUniqueWithoutWebsiteGroupsInput>>>;
};

export type WebsiteUpdateOneWithoutAffiliatesNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAffiliatesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAffiliatesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutAffiliatesInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutAffiliatesInput>;
};

export type WebsiteUpdateOneWithoutAttachmentsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttachmentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutAttachmentsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutAttachmentsInput>;
};

export type WebsiteUpdateOneWithoutAttributesNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttributesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutAttributesInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutAttributesInput>;
};

export type WebsiteUpdateOneWithoutAudioCollectionsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAudioCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAudioCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutAudioCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutAudioCollectionsInput>;
};

export type WebsiteUpdateOneWithoutAudiosNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAudiosInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAudiosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutAudiosInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutAudiosInput>;
};

export type WebsiteUpdateOneWithoutCouponsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCouponsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCouponsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutCouponsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutCouponsInput>;
};

export type WebsiteUpdateOneWithoutCustomersNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCustomersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutCustomersInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutCustomersInput>;
};

export type WebsiteUpdateOneWithoutEventCollectionsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutEventCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutEventCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutEventCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutEventCollectionsInput>;
};

export type WebsiteUpdateOneWithoutEventGroupsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutEventGroupsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutEventGroupsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutEventGroupsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutEventGroupsInput>;
};

export type WebsiteUpdateOneWithoutEventsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutEventsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutEventsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutEventsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutEventsInput>;
};

export type WebsiteUpdateOneWithoutMarketingLocationsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutMarketingLocationsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutMarketingLocationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutMarketingLocationsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutMarketingLocationsInput>;
};

export type WebsiteUpdateOneWithoutNotificationsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutNotificationsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutNotificationsInput>;
};

export type WebsiteUpdateOneWithoutOrdersNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutOrdersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutOrdersInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutOrdersInput>;
};

export type WebsiteUpdateOneWithoutPageCollectionsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPageCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPageCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutPageCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutPageCollectionsInput>;
};

export type WebsiteUpdateOneWithoutPagesNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPagesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPagesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutPagesInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutPagesInput>;
};

export type WebsiteUpdateOneWithoutProductCollectionsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutProductCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutProductCollectionsInput>;
};

export type WebsiteUpdateOneWithoutProductGroupsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductGroupsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductGroupsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutProductGroupsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutProductGroupsInput>;
};

export type WebsiteUpdateOneWithoutProductsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutProductsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutProductsInput>;
};

export type WebsiteUpdateOneWithoutVideoCollectionsNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutVideoCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutVideoCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutVideoCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutVideoCollectionsInput>;
};

export type WebsiteUpdateOneWithoutVideosNestedInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutVideosInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutVideosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutVideosInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutVideosInput>;
};

export type WebsiteUpdateWithWhereUniqueWithoutUserInput = {
  data: WebsiteUncheckedUpdateWithoutUserInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUpdateWithWhereUniqueWithoutWebsiteGroupsInput = {
  data: WebsiteUncheckedUpdateWithoutWebsiteGroupsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUpdateWithoutAffiliatesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutAttributesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutAudioCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutAudiosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutCustomersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutEventCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutEventGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutEventsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutMarketingLocationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutNotificationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutProductGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutUserInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutVideoCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutVideosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteGroups?: InputMaybe<WebsiteGroupUpdateManyWithoutWebsitesNestedInput>;
};

export type WebsiteUpdateWithoutWebsiteGroupsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  affiliates?: InputMaybe<AffiliateUpdateManyWithoutWebsiteNestedInput>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteNestedInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteNestedInput>;
  audioCollections?: InputMaybe<AudioCollectionUpdateManyWithoutWebsiteNestedInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutWebsiteNestedInput>;
  chain?: InputMaybe<Scalars['Json']>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteNestedInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  eventCollections?: InputMaybe<EventCollectionUpdateManyWithoutWebsiteNestedInput>;
  eventGroups?: InputMaybe<EventGroupUpdateManyWithoutWebsiteNestedInput>;
  events?: InputMaybe<EventUpdateManyWithoutWebsiteNestedInput>;
  gasless?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  hasLocation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isTemplate?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableEnumLanguageCodeFieldUpdateOperationsInput>;
  locationAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  locationLat?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  locationLng?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  logoObj?: InputMaybe<Scalars['Json']>;
  marketingLocations?: InputMaybe<MarketingLocationUpdateManyWithoutWebsiteNestedInput>;
  menu?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteNestedInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteNestedInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteNestedInput>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteNestedInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteNestedInput>;
  productGroups?: InputMaybe<ProductGroupUpdateManyWithoutWebsiteNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteNestedInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<NullableEnumColorFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesNestedInput>;
  videoCollections?: InputMaybe<VideoCollectionUpdateManyWithoutWebsiteNestedInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutWebsiteNestedInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteUpsertWithWhereUniqueWithoutUserInput = {
  create: WebsiteUncheckedCreateWithoutUserInput;
  update: WebsiteUncheckedUpdateWithoutUserInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUpsertWithWhereUniqueWithoutWebsiteGroupsInput = {
  create: WebsiteUncheckedCreateWithoutWebsiteGroupsInput;
  update: WebsiteUncheckedUpdateWithoutWebsiteGroupsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUpsertWithoutAffiliatesInput = {
  create: WebsiteUncheckedCreateWithoutAffiliatesInput;
  update: WebsiteUncheckedUpdateWithoutAffiliatesInput;
};

export type WebsiteUpsertWithoutAttachmentsInput = {
  create: WebsiteUncheckedCreateWithoutAttachmentsInput;
  update: WebsiteUncheckedUpdateWithoutAttachmentsInput;
};

export type WebsiteUpsertWithoutAttributesInput = {
  create: WebsiteUncheckedCreateWithoutAttributesInput;
  update: WebsiteUncheckedUpdateWithoutAttributesInput;
};

export type WebsiteUpsertWithoutAudioCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutAudioCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutAudioCollectionsInput;
};

export type WebsiteUpsertWithoutAudiosInput = {
  create: WebsiteUncheckedCreateWithoutAudiosInput;
  update: WebsiteUncheckedUpdateWithoutAudiosInput;
};

export type WebsiteUpsertWithoutCouponsInput = {
  create: WebsiteUncheckedCreateWithoutCouponsInput;
  update: WebsiteUncheckedUpdateWithoutCouponsInput;
};

export type WebsiteUpsertWithoutCustomersInput = {
  create: WebsiteUncheckedCreateWithoutCustomersInput;
  update: WebsiteUncheckedUpdateWithoutCustomersInput;
};

export type WebsiteUpsertWithoutEventCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutEventCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutEventCollectionsInput;
};

export type WebsiteUpsertWithoutEventGroupsInput = {
  create: WebsiteUncheckedCreateWithoutEventGroupsInput;
  update: WebsiteUncheckedUpdateWithoutEventGroupsInput;
};

export type WebsiteUpsertWithoutEventsInput = {
  create: WebsiteUncheckedCreateWithoutEventsInput;
  update: WebsiteUncheckedUpdateWithoutEventsInput;
};

export type WebsiteUpsertWithoutMarketingLocationsInput = {
  create: WebsiteUncheckedCreateWithoutMarketingLocationsInput;
  update: WebsiteUncheckedUpdateWithoutMarketingLocationsInput;
};

export type WebsiteUpsertWithoutNotificationsInput = {
  create: WebsiteUncheckedCreateWithoutNotificationsInput;
  update: WebsiteUncheckedUpdateWithoutNotificationsInput;
};

export type WebsiteUpsertWithoutOrdersInput = {
  create: WebsiteUncheckedCreateWithoutOrdersInput;
  update: WebsiteUncheckedUpdateWithoutOrdersInput;
};

export type WebsiteUpsertWithoutPageCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutPageCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutPageCollectionsInput;
};

export type WebsiteUpsertWithoutPagesInput = {
  create: WebsiteUncheckedCreateWithoutPagesInput;
  update: WebsiteUncheckedUpdateWithoutPagesInput;
};

export type WebsiteUpsertWithoutProductCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutProductCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutProductCollectionsInput;
};

export type WebsiteUpsertWithoutProductGroupsInput = {
  create: WebsiteUncheckedCreateWithoutProductGroupsInput;
  update: WebsiteUncheckedUpdateWithoutProductGroupsInput;
};

export type WebsiteUpsertWithoutProductsInput = {
  create: WebsiteUncheckedCreateWithoutProductsInput;
  update: WebsiteUncheckedUpdateWithoutProductsInput;
};

export type WebsiteUpsertWithoutVideoCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutVideoCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutVideoCollectionsInput;
};

export type WebsiteUpsertWithoutVideosInput = {
  create: WebsiteUncheckedCreateWithoutVideosInput;
  update: WebsiteUncheckedUpdateWithoutVideosInput;
};

export type WebsiteWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebsiteWhereInput>>>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteWhereInput>>>;
  active?: InputMaybe<BoolNullableFilter>;
  address?: InputMaybe<JsonNullableFilter>;
  adminFilters?: InputMaybe<JsonNullableFilter>;
  affiliates?: InputMaybe<AffiliateListRelationFilter>;
  attachments?: InputMaybe<AttachmentListRelationFilter>;
  attributes?: InputMaybe<AttributeListRelationFilter>;
  audioCollections?: InputMaybe<AudioCollectionListRelationFilter>;
  audios?: InputMaybe<AudioListRelationFilter>;
  chain?: InputMaybe<JsonNullableFilter>;
  coupons?: InputMaybe<CouponListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  eventCollections?: InputMaybe<EventCollectionListRelationFilter>;
  eventGroups?: InputMaybe<EventGroupListRelationFilter>;
  events?: InputMaybe<EventListRelationFilter>;
  gasless?: InputMaybe<BoolNullableFilter>;
  hasLocation?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isTemplate?: InputMaybe<BoolNullableFilter>;
  languageCode?: InputMaybe<EnumLanguageCodeNullableFilter>;
  locationAddress?: InputMaybe<StringNullableFilter>;
  locationLat?: InputMaybe<FloatNullableFilter>;
  locationLng?: InputMaybe<FloatNullableFilter>;
  logoObj?: InputMaybe<JsonNullableFilter>;
  marketingLocations?: InputMaybe<MarketingLocationListRelationFilter>;
  menu?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notifications?: InputMaybe<NotificationListRelationFilter>;
  orders?: InputMaybe<OrderListRelationFilter>;
  pageCollections?: InputMaybe<PageCollectionListRelationFilter>;
  pages?: InputMaybe<PageListRelationFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  productCollections?: InputMaybe<ProductCollectionListRelationFilter>;
  productGroups?: InputMaybe<ProductGroupListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  stripeAccountId?: InputMaybe<StringNullableFilter>;
  themeColor?: InputMaybe<EnumColorNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  videoCollections?: InputMaybe<VideoCollectionListRelationFilter>;
  videos?: InputMaybe<VideoListRelationFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteGroups?: InputMaybe<WebsiteGroupListRelationFilter>;
};

export type WebsiteWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AffiliateFieldsFragment = { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined };

export type AffiliateFragment = { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueAffiliateQueryVariables = Exact<{
  where: AffiliateWhereUniqueInput;
}>;


export type FindUniqueAffiliateQuery = { __typename?: 'Query', findUniqueAffiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyAffiliateQueryVariables = Exact<{
  where?: InputMaybe<AffiliateWhereInput>;
  orderBy?: InputMaybe<Array<AffiliateOrderByWithRelationInput> | AffiliateOrderByWithRelationInput>;
  cursor?: InputMaybe<AffiliateWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAffiliateQuery = { __typename?: 'Query', findManyAffiliate: Array<{ __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyAffiliateCountQueryVariables = Exact<{
  where?: InputMaybe<AffiliateWhereInput>;
  orderBy?: InputMaybe<Array<AffiliateOrderByWithRelationInput> | AffiliateOrderByWithRelationInput>;
  cursor?: InputMaybe<AffiliateWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAffiliateCountQuery = { __typename?: 'Query', findManyAffiliateCount: number };

export type CreateOneAffiliateMutationVariables = Exact<{
  data: AffiliateCreateInput;
}>;


export type CreateOneAffiliateMutation = { __typename?: 'Mutation', createOneAffiliate: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneAffiliateMutationVariables = Exact<{
  where: AffiliateWhereUniqueInput;
  data: AffiliateUpdateInput;
}>;


export type UpdateOneAffiliateMutation = { __typename?: 'Mutation', updateOneAffiliate: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneAffiliateMutationVariables = Exact<{
  where: AffiliateWhereUniqueInput;
}>;


export type DeleteOneAffiliateMutation = { __typename?: 'Mutation', deleteOneAffiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyAffiliateMutationVariables = Exact<{
  where?: InputMaybe<AffiliateWhereInput>;
}>;


export type DeleteManyAffiliateMutation = { __typename?: 'Mutation', deleteManyAffiliate: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAffiliateMutationVariables = Exact<{
  where?: InputMaybe<AffiliateWhereInput>;
  data: AffiliateUpdateManyMutationInput;
}>;


export type UpdateManyAffiliateMutation = { __typename?: 'Mutation', updateManyAffiliate: { __typename?: 'BatchPayload', count: number } };

export type AgendaFieldsFragment = { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined };

export type AgendaFragment = { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueAgendaQueryVariables = Exact<{
  where: AgendaWhereUniqueInput;
}>;


export type FindUniqueAgendaQuery = { __typename?: 'Query', findUniqueAgenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyAgendaQueryVariables = Exact<{
  where?: InputMaybe<AgendaWhereInput>;
  orderBy?: InputMaybe<Array<AgendaOrderByWithRelationInput> | AgendaOrderByWithRelationInput>;
  cursor?: InputMaybe<AgendaWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAgendaQuery = { __typename?: 'Query', findManyAgenda: Array<{ __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyAgendaCountQueryVariables = Exact<{
  where?: InputMaybe<AgendaWhereInput>;
  orderBy?: InputMaybe<Array<AgendaOrderByWithRelationInput> | AgendaOrderByWithRelationInput>;
  cursor?: InputMaybe<AgendaWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAgendaCountQuery = { __typename?: 'Query', findManyAgendaCount: number };

export type CreateOneAgendaMutationVariables = Exact<{
  data: AgendaCreateInput;
}>;


export type CreateOneAgendaMutation = { __typename?: 'Mutation', createOneAgenda: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneAgendaMutationVariables = Exact<{
  where: AgendaWhereUniqueInput;
  data: AgendaUpdateInput;
}>;


export type UpdateOneAgendaMutation = { __typename?: 'Mutation', updateOneAgenda: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneAgendaMutationVariables = Exact<{
  where: AgendaWhereUniqueInput;
}>;


export type DeleteOneAgendaMutation = { __typename?: 'Mutation', deleteOneAgenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyAgendaMutationVariables = Exact<{
  where?: InputMaybe<AgendaWhereInput>;
}>;


export type DeleteManyAgendaMutation = { __typename?: 'Mutation', deleteManyAgenda: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAgendaMutationVariables = Exact<{
  where?: InputMaybe<AgendaWhereInput>;
  data: AgendaUpdateManyMutationInput;
}>;


export type UpdateManyAgendaMutation = { __typename?: 'Mutation', updateManyAgenda: { __typename?: 'BatchPayload', count: number } };

export type AttachmentFieldsFragment = { __typename?: 'Attachment', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, attachmentObj?: any | undefined, attachmentType?: AttachmentType | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, previewObj?: any | undefined, productId?: string | undefined, upload?: any | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined };

export type AttachmentFragment = { __typename?: 'Attachment', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, attachmentObj?: any | undefined, attachmentType?: AttachmentType | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, previewObj?: any | undefined, productId?: string | undefined, upload?: any | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueAttachmentQueryVariables = Exact<{
  where: AttachmentWhereUniqueInput;
}>;


export type FindUniqueAttachmentQuery = { __typename?: 'Query', findUniqueAttachment?: { __typename?: 'Attachment', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, attachmentObj?: any | undefined, attachmentType?: AttachmentType | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, previewObj?: any | undefined, productId?: string | undefined, upload?: any | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyAttachmentQueryVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
  orderBy?: InputMaybe<Array<AttachmentOrderByWithRelationInput> | AttachmentOrderByWithRelationInput>;
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttachmentQuery = { __typename?: 'Query', findManyAttachment: Array<{ __typename?: 'Attachment', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, attachmentObj?: any | undefined, attachmentType?: AttachmentType | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, previewObj?: any | undefined, productId?: string | undefined, upload?: any | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyAttachmentCountQueryVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
  orderBy?: InputMaybe<Array<AttachmentOrderByWithRelationInput> | AttachmentOrderByWithRelationInput>;
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttachmentCountQuery = { __typename?: 'Query', findManyAttachmentCount: number };

export type CreateOneAttachmentMutationVariables = Exact<{
  data: AttachmentCreateInput;
}>;


export type CreateOneAttachmentMutation = { __typename?: 'Mutation', createOneAttachment: { __typename?: 'Attachment', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, attachmentObj?: any | undefined, attachmentType?: AttachmentType | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, previewObj?: any | undefined, productId?: string | undefined, upload?: any | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneAttachmentMutationVariables = Exact<{
  where: AttachmentWhereUniqueInput;
  data: AttachmentUpdateInput;
}>;


export type UpdateOneAttachmentMutation = { __typename?: 'Mutation', updateOneAttachment: { __typename?: 'Attachment', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, attachmentObj?: any | undefined, attachmentType?: AttachmentType | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, previewObj?: any | undefined, productId?: string | undefined, upload?: any | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneAttachmentMutationVariables = Exact<{
  where: AttachmentWhereUniqueInput;
}>;


export type DeleteOneAttachmentMutation = { __typename?: 'Mutation', deleteOneAttachment?: { __typename?: 'Attachment', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, attachmentObj?: any | undefined, attachmentType?: AttachmentType | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, previewObj?: any | undefined, productId?: string | undefined, upload?: any | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyAttachmentMutationVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
}>;


export type DeleteManyAttachmentMutation = { __typename?: 'Mutation', deleteManyAttachment: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAttachmentMutationVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
  data: AttachmentUpdateManyMutationInput;
}>;


export type UpdateManyAttachmentMutation = { __typename?: 'Mutation', updateManyAttachment: { __typename?: 'BatchPayload', count: number } };

export type AttributeFieldsFragment = { __typename?: 'Attribute', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, slug?: string | undefined, values?: any | undefined, websiteId?: string | undefined };

export type AttributeFragment = { __typename?: 'Attribute', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, slug?: string | undefined, values?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueAttributeQueryVariables = Exact<{
  where: AttributeWhereUniqueInput;
}>;


export type FindUniqueAttributeQuery = { __typename?: 'Query', findUniqueAttribute?: { __typename?: 'Attribute', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, slug?: string | undefined, values?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyAttributeQueryVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
  orderBy?: InputMaybe<Array<AttributeOrderByWithRelationInput> | AttributeOrderByWithRelationInput>;
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttributeQuery = { __typename?: 'Query', findManyAttribute: Array<{ __typename?: 'Attribute', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, slug?: string | undefined, values?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyAttributeCountQueryVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
  orderBy?: InputMaybe<Array<AttributeOrderByWithRelationInput> | AttributeOrderByWithRelationInput>;
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttributeCountQuery = { __typename?: 'Query', findManyAttributeCount: number };

export type CreateOneAttributeMutationVariables = Exact<{
  data: AttributeCreateInput;
}>;


export type CreateOneAttributeMutation = { __typename?: 'Mutation', createOneAttribute: { __typename?: 'Attribute', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, slug?: string | undefined, values?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneAttributeMutationVariables = Exact<{
  where: AttributeWhereUniqueInput;
  data: AttributeUpdateInput;
}>;


export type UpdateOneAttributeMutation = { __typename?: 'Mutation', updateOneAttribute: { __typename?: 'Attribute', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, slug?: string | undefined, values?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneAttributeMutationVariables = Exact<{
  where: AttributeWhereUniqueInput;
}>;


export type DeleteOneAttributeMutation = { __typename?: 'Mutation', deleteOneAttribute?: { __typename?: 'Attribute', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, slug?: string | undefined, values?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyAttributeMutationVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
}>;


export type DeleteManyAttributeMutation = { __typename?: 'Mutation', deleteManyAttribute: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAttributeMutationVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
  data: AttributeUpdateManyMutationInput;
}>;


export type UpdateManyAttributeMutation = { __typename?: 'Mutation', updateManyAttribute: { __typename?: 'BatchPayload', count: number } };

export type AudioFieldsFragment = { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined };

export type AudioFragment = { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueAudioQueryVariables = Exact<{
  where: AudioWhereUniqueInput;
}>;


export type FindUniqueAudioQuery = { __typename?: 'Query', findUniqueAudio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyAudioQueryVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
  orderBy?: InputMaybe<Array<AudioOrderByWithRelationInput> | AudioOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioQuery = { __typename?: 'Query', findManyAudio: Array<{ __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyAudioCountQueryVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
  orderBy?: InputMaybe<Array<AudioOrderByWithRelationInput> | AudioOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioCountQuery = { __typename?: 'Query', findManyAudioCount: number };

export type CreateOneAudioMutationVariables = Exact<{
  data: AudioCreateInput;
}>;


export type CreateOneAudioMutation = { __typename?: 'Mutation', createOneAudio: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneAudioMutationVariables = Exact<{
  where: AudioWhereUniqueInput;
  data: AudioUpdateInput;
}>;


export type UpdateOneAudioMutation = { __typename?: 'Mutation', updateOneAudio: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneAudioMutationVariables = Exact<{
  where: AudioWhereUniqueInput;
}>;


export type DeleteOneAudioMutation = { __typename?: 'Mutation', deleteOneAudio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyAudioMutationVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
}>;


export type DeleteManyAudioMutation = { __typename?: 'Mutation', deleteManyAudio: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAudioMutationVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
  data: AudioUpdateManyMutationInput;
}>;


export type UpdateManyAudioMutation = { __typename?: 'Mutation', updateManyAudio: { __typename?: 'BatchPayload', count: number } };

export type AudioCollectionFieldsFragment = { __typename?: 'AudioCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined };

export type AudioCollectionFragment = { __typename?: 'AudioCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueAudioCollectionQueryVariables = Exact<{
  where: AudioCollectionWhereUniqueInput;
}>;


export type FindUniqueAudioCollectionQuery = { __typename?: 'Query', findUniqueAudioCollection?: { __typename?: 'AudioCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyAudioCollectionQueryVariables = Exact<{
  where?: InputMaybe<AudioCollectionWhereInput>;
  orderBy?: InputMaybe<Array<AudioCollectionOrderByWithRelationInput> | AudioCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioCollectionQuery = { __typename?: 'Query', findManyAudioCollection: Array<{ __typename?: 'AudioCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyAudioCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<AudioCollectionWhereInput>;
  orderBy?: InputMaybe<Array<AudioCollectionOrderByWithRelationInput> | AudioCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioCollectionCountQuery = { __typename?: 'Query', findManyAudioCollectionCount: number };

export type CreateOneAudioCollectionMutationVariables = Exact<{
  data: AudioCollectionCreateInput;
}>;


export type CreateOneAudioCollectionMutation = { __typename?: 'Mutation', createOneAudioCollection: { __typename?: 'AudioCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneAudioCollectionMutationVariables = Exact<{
  where: AudioCollectionWhereUniqueInput;
  data: AudioCollectionUpdateInput;
}>;


export type UpdateOneAudioCollectionMutation = { __typename?: 'Mutation', updateOneAudioCollection: { __typename?: 'AudioCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneAudioCollectionMutationVariables = Exact<{
  where: AudioCollectionWhereUniqueInput;
}>;


export type DeleteOneAudioCollectionMutation = { __typename?: 'Mutation', deleteOneAudioCollection?: { __typename?: 'AudioCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyAudioCollectionMutationVariables = Exact<{
  where?: InputMaybe<AudioCollectionWhereInput>;
}>;


export type DeleteManyAudioCollectionMutation = { __typename?: 'Mutation', deleteManyAudioCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAudioCollectionMutationVariables = Exact<{
  where?: InputMaybe<AudioCollectionWhereInput>;
  data: AudioCollectionUpdateManyMutationInput;
}>;


export type UpdateManyAudioCollectionMutation = { __typename?: 'Mutation', updateManyAudioCollection: { __typename?: 'BatchPayload', count: number } };

export type AudioViewFieldsFragment = { __typename?: 'AudioView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined };

export type AudioViewFragment = { __typename?: 'AudioView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueAudioViewQueryVariables = Exact<{
  where: AudioViewWhereUniqueInput;
}>;


export type FindUniqueAudioViewQuery = { __typename?: 'Query', findUniqueAudioView?: { __typename?: 'AudioView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyAudioViewQueryVariables = Exact<{
  where?: InputMaybe<AudioViewWhereInput>;
  orderBy?: InputMaybe<Array<AudioViewOrderByWithRelationInput> | AudioViewOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioViewQuery = { __typename?: 'Query', findManyAudioView: Array<{ __typename?: 'AudioView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyAudioViewCountQueryVariables = Exact<{
  where?: InputMaybe<AudioViewWhereInput>;
  orderBy?: InputMaybe<Array<AudioViewOrderByWithRelationInput> | AudioViewOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioViewCountQuery = { __typename?: 'Query', findManyAudioViewCount: number };

export type CreateOneAudioViewMutationVariables = Exact<{
  data: AudioViewCreateInput;
}>;


export type CreateOneAudioViewMutation = { __typename?: 'Mutation', createOneAudioView: { __typename?: 'AudioView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneAudioViewMutationVariables = Exact<{
  where: AudioViewWhereUniqueInput;
  data: AudioViewUpdateInput;
}>;


export type UpdateOneAudioViewMutation = { __typename?: 'Mutation', updateOneAudioView: { __typename?: 'AudioView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneAudioViewMutationVariables = Exact<{
  where: AudioViewWhereUniqueInput;
}>;


export type DeleteOneAudioViewMutation = { __typename?: 'Mutation', deleteOneAudioView?: { __typename?: 'AudioView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyAudioViewMutationVariables = Exact<{
  where?: InputMaybe<AudioViewWhereInput>;
}>;


export type DeleteManyAudioViewMutation = { __typename?: 'Mutation', deleteManyAudioView: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAudioViewMutationVariables = Exact<{
  where?: InputMaybe<AudioViewWhereInput>;
  data: AudioViewUpdateManyMutationInput;
}>;


export type UpdateManyAudioViewMutation = { __typename?: 'Mutation', updateManyAudioView: { __typename?: 'BatchPayload', count: number } };

export type CouponFieldsFragment = { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined };

export type CouponFragment = { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueCouponQueryVariables = Exact<{
  where: CouponWhereUniqueInput;
}>;


export type FindUniqueCouponQuery = { __typename?: 'Query', findUniqueCoupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyCouponQueryVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
  orderBy?: InputMaybe<Array<CouponOrderByWithRelationInput> | CouponOrderByWithRelationInput>;
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCouponQuery = { __typename?: 'Query', findManyCoupon: Array<{ __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyCouponCountQueryVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
  orderBy?: InputMaybe<Array<CouponOrderByWithRelationInput> | CouponOrderByWithRelationInput>;
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCouponCountQuery = { __typename?: 'Query', findManyCouponCount: number };

export type CreateOneCouponMutationVariables = Exact<{
  data: CouponCreateInput;
}>;


export type CreateOneCouponMutation = { __typename?: 'Mutation', createOneCoupon: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneCouponMutationVariables = Exact<{
  where: CouponWhereUniqueInput;
  data: CouponUpdateInput;
}>;


export type UpdateOneCouponMutation = { __typename?: 'Mutation', updateOneCoupon: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneCouponMutationVariables = Exact<{
  where: CouponWhereUniqueInput;
}>;


export type DeleteOneCouponMutation = { __typename?: 'Mutation', deleteOneCoupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyCouponMutationVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
}>;


export type DeleteManyCouponMutation = { __typename?: 'Mutation', deleteManyCoupon: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyCouponMutationVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
  data: CouponUpdateManyMutationInput;
}>;


export type UpdateManyCouponMutation = { __typename?: 'Mutation', updateManyCoupon: { __typename?: 'BatchPayload', count: number } };

export type CustomerFieldsFragment = { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined };

export type CustomerFragment = { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, affiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueCustomerQueryVariables = Exact<{
  where: CustomerWhereUniqueInput;
}>;


export type FindUniqueCustomerQuery = { __typename?: 'Query', findUniqueCustomer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, affiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyCustomerQueryVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput> | CustomerOrderByWithRelationInput>;
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCustomerQuery = { __typename?: 'Query', findManyCustomer: Array<{ __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, affiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyCustomerCountQueryVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput> | CustomerOrderByWithRelationInput>;
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCustomerCountQuery = { __typename?: 'Query', findManyCustomerCount: number };

export type CreateOneCustomerMutationVariables = Exact<{
  data: CustomerCreateInput;
}>;


export type CreateOneCustomerMutation = { __typename?: 'Mutation', createOneCustomer: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, affiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneCustomerMutationVariables = Exact<{
  where: CustomerWhereUniqueInput;
  data: CustomerUpdateInput;
}>;


export type UpdateOneCustomerMutation = { __typename?: 'Mutation', updateOneCustomer: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, affiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneCustomerMutationVariables = Exact<{
  where: CustomerWhereUniqueInput;
}>;


export type DeleteOneCustomerMutation = { __typename?: 'Mutation', deleteOneCustomer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, affiliate?: { __typename?: 'Affiliate', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, customerId?: string | undefined, description?: string | undefined, id: string, igId?: string | undefined, lineId?: string | undefined, name?: string | undefined, tgId?: string | undefined, url?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyCustomerMutationVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
}>;


export type DeleteManyCustomerMutation = { __typename?: 'Mutation', deleteManyCustomer: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyCustomerMutationVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
  data: CustomerUpdateManyMutationInput;
}>;


export type UpdateManyCustomerMutation = { __typename?: 'Mutation', updateManyCustomer: { __typename?: 'BatchPayload', count: number } };

export type EventFieldsFragment = { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined };

export type EventFragment = { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueEventQueryVariables = Exact<{
  where: EventWhereUniqueInput;
}>;


export type FindUniqueEventQuery = { __typename?: 'Query', findUniqueEvent?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyEventQueryVariables = Exact<{
  where?: InputMaybe<EventWhereInput>;
  orderBy?: InputMaybe<Array<EventOrderByWithRelationInput> | EventOrderByWithRelationInput>;
  cursor?: InputMaybe<EventWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEventQuery = { __typename?: 'Query', findManyEvent: Array<{ __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyEventCountQueryVariables = Exact<{
  where?: InputMaybe<EventWhereInput>;
  orderBy?: InputMaybe<Array<EventOrderByWithRelationInput> | EventOrderByWithRelationInput>;
  cursor?: InputMaybe<EventWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEventCountQuery = { __typename?: 'Query', findManyEventCount: number };

export type CreateOneEventMutationVariables = Exact<{
  data: EventCreateInput;
}>;


export type CreateOneEventMutation = { __typename?: 'Mutation', createOneEvent: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneEventMutationVariables = Exact<{
  where: EventWhereUniqueInput;
  data: EventUpdateInput;
}>;


export type UpdateOneEventMutation = { __typename?: 'Mutation', updateOneEvent: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneEventMutationVariables = Exact<{
  where: EventWhereUniqueInput;
}>;


export type DeleteOneEventMutation = { __typename?: 'Mutation', deleteOneEvent?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyEventMutationVariables = Exact<{
  where?: InputMaybe<EventWhereInput>;
}>;


export type DeleteManyEventMutation = { __typename?: 'Mutation', deleteManyEvent: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyEventMutationVariables = Exact<{
  where?: InputMaybe<EventWhereInput>;
  data: EventUpdateManyMutationInput;
}>;


export type UpdateManyEventMutation = { __typename?: 'Mutation', updateManyEvent: { __typename?: 'BatchPayload', count: number } };

export type EventCollectionFieldsFragment = { __typename?: 'EventCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined };

export type EventCollectionFragment = { __typename?: 'EventCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueEventCollectionQueryVariables = Exact<{
  where: EventCollectionWhereUniqueInput;
}>;


export type FindUniqueEventCollectionQuery = { __typename?: 'Query', findUniqueEventCollection?: { __typename?: 'EventCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyEventCollectionQueryVariables = Exact<{
  where?: InputMaybe<EventCollectionWhereInput>;
  orderBy?: InputMaybe<Array<EventCollectionOrderByWithRelationInput> | EventCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEventCollectionQuery = { __typename?: 'Query', findManyEventCollection: Array<{ __typename?: 'EventCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyEventCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<EventCollectionWhereInput>;
  orderBy?: InputMaybe<Array<EventCollectionOrderByWithRelationInput> | EventCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<EventCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEventCollectionCountQuery = { __typename?: 'Query', findManyEventCollectionCount: number };

export type CreateOneEventCollectionMutationVariables = Exact<{
  data: EventCollectionCreateInput;
}>;


export type CreateOneEventCollectionMutation = { __typename?: 'Mutation', createOneEventCollection: { __typename?: 'EventCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneEventCollectionMutationVariables = Exact<{
  where: EventCollectionWhereUniqueInput;
  data: EventCollectionUpdateInput;
}>;


export type UpdateOneEventCollectionMutation = { __typename?: 'Mutation', updateOneEventCollection: { __typename?: 'EventCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneEventCollectionMutationVariables = Exact<{
  where: EventCollectionWhereUniqueInput;
}>;


export type DeleteOneEventCollectionMutation = { __typename?: 'Mutation', deleteOneEventCollection?: { __typename?: 'EventCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyEventCollectionMutationVariables = Exact<{
  where?: InputMaybe<EventCollectionWhereInput>;
}>;


export type DeleteManyEventCollectionMutation = { __typename?: 'Mutation', deleteManyEventCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyEventCollectionMutationVariables = Exact<{
  where?: InputMaybe<EventCollectionWhereInput>;
  data: EventCollectionUpdateManyMutationInput;
}>;


export type UpdateManyEventCollectionMutation = { __typename?: 'Mutation', updateManyEventCollection: { __typename?: 'BatchPayload', count: number } };

export type EventGroupFieldsFragment = { __typename?: 'EventGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined };

export type EventGroupFragment = { __typename?: 'EventGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueEventGroupQueryVariables = Exact<{
  where: EventGroupWhereUniqueInput;
}>;


export type FindUniqueEventGroupQuery = { __typename?: 'Query', findUniqueEventGroup?: { __typename?: 'EventGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyEventGroupQueryVariables = Exact<{
  where?: InputMaybe<EventGroupWhereInput>;
  orderBy?: InputMaybe<Array<EventGroupOrderByWithRelationInput> | EventGroupOrderByWithRelationInput>;
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEventGroupQuery = { __typename?: 'Query', findManyEventGroup: Array<{ __typename?: 'EventGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyEventGroupCountQueryVariables = Exact<{
  where?: InputMaybe<EventGroupWhereInput>;
  orderBy?: InputMaybe<Array<EventGroupOrderByWithRelationInput> | EventGroupOrderByWithRelationInput>;
  cursor?: InputMaybe<EventGroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEventGroupCountQuery = { __typename?: 'Query', findManyEventGroupCount: number };

export type CreateOneEventGroupMutationVariables = Exact<{
  data: EventGroupCreateInput;
}>;


export type CreateOneEventGroupMutation = { __typename?: 'Mutation', createOneEventGroup: { __typename?: 'EventGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneEventGroupMutationVariables = Exact<{
  where: EventGroupWhereUniqueInput;
  data: EventGroupUpdateInput;
}>;


export type UpdateOneEventGroupMutation = { __typename?: 'Mutation', updateOneEventGroup: { __typename?: 'EventGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneEventGroupMutationVariables = Exact<{
  where: EventGroupWhereUniqueInput;
}>;


export type DeleteOneEventGroupMutation = { __typename?: 'Mutation', deleteOneEventGroup?: { __typename?: 'EventGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyEventGroupMutationVariables = Exact<{
  where?: InputMaybe<EventGroupWhereInput>;
}>;


export type DeleteManyEventGroupMutation = { __typename?: 'Mutation', deleteManyEventGroup: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyEventGroupMutationVariables = Exact<{
  where?: InputMaybe<EventGroupWhereInput>;
  data: EventGroupUpdateManyMutationInput;
}>;


export type UpdateManyEventGroupMutation = { __typename?: 'Mutation', updateManyEventGroup: { __typename?: 'BatchPayload', count: number } };

export type LoginTokenFieldsFragment = { __typename?: 'LoginToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, approved?: boolean | undefined, domain?: string | undefined, email?: string | undefined, expires?: any | undefined, geo?: string | undefined, id: string, ip?: string | undefined, secret?: string | undefined, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined };

export type LoginTokenFragment = { __typename?: 'LoginToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, approved?: boolean | undefined, domain?: string | undefined, email?: string | undefined, expires?: any | undefined, geo?: string | undefined, id: string, ip?: string | undefined, secret?: string | undefined, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined };

export type FindUniqueLoginTokenQueryVariables = Exact<{
  where: LoginTokenWhereUniqueInput;
}>;


export type FindUniqueLoginTokenQuery = { __typename?: 'Query', findUniqueLoginToken?: { __typename?: 'LoginToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, approved?: boolean | undefined, domain?: string | undefined, email?: string | undefined, expires?: any | undefined, geo?: string | undefined, id: string, ip?: string | undefined, secret?: string | undefined, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type FindManyLoginTokenQueryVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
  orderBy?: InputMaybe<Array<LoginTokenOrderByWithRelationInput> | LoginTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyLoginTokenQuery = { __typename?: 'Query', findManyLoginToken: Array<{ __typename?: 'LoginToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, approved?: boolean | undefined, domain?: string | undefined, email?: string | undefined, expires?: any | undefined, geo?: string | undefined, id: string, ip?: string | undefined, secret?: string | undefined, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined }> };

export type FindManyLoginTokenCountQueryVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
  orderBy?: InputMaybe<Array<LoginTokenOrderByWithRelationInput> | LoginTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyLoginTokenCountQuery = { __typename?: 'Query', findManyLoginTokenCount: number };

export type CreateOneLoginTokenMutationVariables = Exact<{
  data: LoginTokenCreateInput;
}>;


export type CreateOneLoginTokenMutation = { __typename?: 'Mutation', createOneLoginToken: { __typename?: 'LoginToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, approved?: boolean | undefined, domain?: string | undefined, email?: string | undefined, expires?: any | undefined, geo?: string | undefined, id: string, ip?: string | undefined, secret?: string | undefined, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type UpdateOneLoginTokenMutationVariables = Exact<{
  where: LoginTokenWhereUniqueInput;
  data: LoginTokenUpdateInput;
}>;


export type UpdateOneLoginTokenMutation = { __typename?: 'Mutation', updateOneLoginToken: { __typename?: 'LoginToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, approved?: boolean | undefined, domain?: string | undefined, email?: string | undefined, expires?: any | undefined, geo?: string | undefined, id: string, ip?: string | undefined, secret?: string | undefined, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type DeleteOneLoginTokenMutationVariables = Exact<{
  where: LoginTokenWhereUniqueInput;
}>;


export type DeleteOneLoginTokenMutation = { __typename?: 'Mutation', deleteOneLoginToken?: { __typename?: 'LoginToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, approved?: boolean | undefined, domain?: string | undefined, email?: string | undefined, expires?: any | undefined, geo?: string | undefined, id: string, ip?: string | undefined, secret?: string | undefined, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type DeleteManyLoginTokenMutationVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
}>;


export type DeleteManyLoginTokenMutation = { __typename?: 'Mutation', deleteManyLoginToken: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyLoginTokenMutationVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
  data: LoginTokenUpdateManyMutationInput;
}>;


export type UpdateManyLoginTokenMutation = { __typename?: 'Mutation', updateManyLoginToken: { __typename?: 'BatchPayload', count: number } };

export type MarketingLocationFieldsFragment = { __typename?: 'MarketingLocation', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, name?: string | undefined, websiteId?: string | undefined };

export type MarketingLocationFragment = { __typename?: 'MarketingLocation', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueMarketingLocationQueryVariables = Exact<{
  where: MarketingLocationWhereUniqueInput;
}>;


export type FindUniqueMarketingLocationQuery = { __typename?: 'Query', findUniqueMarketingLocation?: { __typename?: 'MarketingLocation', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyMarketingLocationQueryVariables = Exact<{
  where?: InputMaybe<MarketingLocationWhereInput>;
  orderBy?: InputMaybe<Array<MarketingLocationOrderByWithRelationInput> | MarketingLocationOrderByWithRelationInput>;
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyMarketingLocationQuery = { __typename?: 'Query', findManyMarketingLocation: Array<{ __typename?: 'MarketingLocation', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyMarketingLocationCountQueryVariables = Exact<{
  where?: InputMaybe<MarketingLocationWhereInput>;
  orderBy?: InputMaybe<Array<MarketingLocationOrderByWithRelationInput> | MarketingLocationOrderByWithRelationInput>;
  cursor?: InputMaybe<MarketingLocationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyMarketingLocationCountQuery = { __typename?: 'Query', findManyMarketingLocationCount: number };

export type CreateOneMarketingLocationMutationVariables = Exact<{
  data: MarketingLocationCreateInput;
}>;


export type CreateOneMarketingLocationMutation = { __typename?: 'Mutation', createOneMarketingLocation: { __typename?: 'MarketingLocation', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneMarketingLocationMutationVariables = Exact<{
  where: MarketingLocationWhereUniqueInput;
  data: MarketingLocationUpdateInput;
}>;


export type UpdateOneMarketingLocationMutation = { __typename?: 'Mutation', updateOneMarketingLocation: { __typename?: 'MarketingLocation', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneMarketingLocationMutationVariables = Exact<{
  where: MarketingLocationWhereUniqueInput;
}>;


export type DeleteOneMarketingLocationMutation = { __typename?: 'Mutation', deleteOneMarketingLocation?: { __typename?: 'MarketingLocation', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyMarketingLocationMutationVariables = Exact<{
  where?: InputMaybe<MarketingLocationWhereInput>;
}>;


export type DeleteManyMarketingLocationMutation = { __typename?: 'Mutation', deleteManyMarketingLocation: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyMarketingLocationMutationVariables = Exact<{
  where?: InputMaybe<MarketingLocationWhereInput>;
  data: MarketingLocationUpdateManyMutationInput;
}>;


export type UpdateManyMarketingLocationMutation = { __typename?: 'Mutation', updateManyMarketingLocation: { __typename?: 'BatchPayload', count: number } };

export type NotificationFieldsFragment = { __typename?: 'Notification', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, action?: string | undefined, description?: string | undefined, id: string, isUnRead?: boolean | undefined, message?: string | undefined, model?: string | undefined, modelId?: string | undefined, title?: string | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined };

export type NotificationFragment = { __typename?: 'Notification', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, action?: string | undefined, description?: string | undefined, id: string, isUnRead?: boolean | undefined, message?: string | undefined, model?: string | undefined, modelId?: string | undefined, title?: string | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueNotificationQueryVariables = Exact<{
  where: NotificationWhereUniqueInput;
}>;


export type FindUniqueNotificationQuery = { __typename?: 'Query', findUniqueNotification?: { __typename?: 'Notification', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, action?: string | undefined, description?: string | undefined, id: string, isUnRead?: boolean | undefined, message?: string | undefined, model?: string | undefined, modelId?: string | undefined, title?: string | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyNotificationQueryVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
  orderBy?: InputMaybe<Array<NotificationOrderByWithRelationInput> | NotificationOrderByWithRelationInput>;
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyNotificationQuery = { __typename?: 'Query', findManyNotification: Array<{ __typename?: 'Notification', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, action?: string | undefined, description?: string | undefined, id: string, isUnRead?: boolean | undefined, message?: string | undefined, model?: string | undefined, modelId?: string | undefined, title?: string | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyNotificationCountQueryVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
  orderBy?: InputMaybe<Array<NotificationOrderByWithRelationInput> | NotificationOrderByWithRelationInput>;
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyNotificationCountQuery = { __typename?: 'Query', findManyNotificationCount: number };

export type CreateOneNotificationMutationVariables = Exact<{
  data: NotificationCreateInput;
}>;


export type CreateOneNotificationMutation = { __typename?: 'Mutation', createOneNotification: { __typename?: 'Notification', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, action?: string | undefined, description?: string | undefined, id: string, isUnRead?: boolean | undefined, message?: string | undefined, model?: string | undefined, modelId?: string | undefined, title?: string | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneNotificationMutationVariables = Exact<{
  where: NotificationWhereUniqueInput;
  data: NotificationUpdateInput;
}>;


export type UpdateOneNotificationMutation = { __typename?: 'Mutation', updateOneNotification: { __typename?: 'Notification', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, action?: string | undefined, description?: string | undefined, id: string, isUnRead?: boolean | undefined, message?: string | undefined, model?: string | undefined, modelId?: string | undefined, title?: string | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneNotificationMutationVariables = Exact<{
  where: NotificationWhereUniqueInput;
}>;


export type DeleteOneNotificationMutation = { __typename?: 'Mutation', deleteOneNotification?: { __typename?: 'Notification', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, action?: string | undefined, description?: string | undefined, id: string, isUnRead?: boolean | undefined, message?: string | undefined, model?: string | undefined, modelId?: string | undefined, title?: string | undefined, url?: string | undefined, userId?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyNotificationMutationVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
}>;


export type DeleteManyNotificationMutation = { __typename?: 'Mutation', deleteManyNotification: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyNotificationMutationVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
  data: NotificationUpdateManyMutationInput;
}>;


export type UpdateManyNotificationMutation = { __typename?: 'Mutation', updateManyNotification: { __typename?: 'BatchPayload', count: number } };

export type OrderFieldsFragment = { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined };

export type OrderFragment = { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueOrderQueryVariables = Exact<{
  where: OrderWhereUniqueInput;
}>;


export type FindUniqueOrderQuery = { __typename?: 'Query', findUniqueOrder?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyOrderQueryVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
  orderBy?: InputMaybe<Array<OrderOrderByWithRelationInput> | OrderOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderQuery = { __typename?: 'Query', findManyOrder: Array<{ __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyOrderCountQueryVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
  orderBy?: InputMaybe<Array<OrderOrderByWithRelationInput> | OrderOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderCountQuery = { __typename?: 'Query', findManyOrderCount: number };

export type CreateOneOrderMutationVariables = Exact<{
  data: OrderCreateInput;
}>;


export type CreateOneOrderMutation = { __typename?: 'Mutation', createOneOrder: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneOrderMutationVariables = Exact<{
  where: OrderWhereUniqueInput;
  data: OrderUpdateInput;
}>;


export type UpdateOneOrderMutation = { __typename?: 'Mutation', updateOneOrder: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneOrderMutationVariables = Exact<{
  where: OrderWhereUniqueInput;
}>;


export type DeleteOneOrderMutation = { __typename?: 'Mutation', deleteOneOrder?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, amountOff?: number | undefined, couponType?: CouponType | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, name?: string | undefined, percentOff?: number | undefined, quantity?: number | undefined, slug?: string | undefined, startAt?: any | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderMutationVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
}>;


export type DeleteManyOrderMutation = { __typename?: 'Mutation', deleteManyOrder: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderMutationVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
  data: OrderUpdateManyMutationInput;
}>;


export type UpdateManyOrderMutation = { __typename?: 'Mutation', updateManyOrder: { __typename?: 'BatchPayload', count: number } };

export type OrderedProductFieldsFragment = { __typename?: 'OrderedProduct', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, minted?: boolean | undefined, name?: string | undefined, orderId?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug?: string | undefined, productType?: ProductType | undefined, productUrl?: string | undefined, quantity?: number | undefined, redeemedQuantity?: number | undefined, slug?: string | undefined, tokenId?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, variationId?: string | undefined, variationName?: string | undefined, variationOption?: any | undefined, walletAddress?: string | undefined };

export type OrderedProductFragment = { __typename?: 'OrderedProduct', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, minted?: boolean | undefined, name?: string | undefined, orderId?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug?: string | undefined, productType?: ProductType | undefined, productUrl?: string | undefined, quantity?: number | undefined, redeemedQuantity?: number | undefined, slug?: string | undefined, tokenId?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, variationId?: string | undefined, variationName?: string | undefined, variationOption?: any | undefined, walletAddress?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, order?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueOrderedProductQueryVariables = Exact<{
  where: OrderedProductWhereUniqueInput;
}>;


export type FindUniqueOrderedProductQuery = { __typename?: 'Query', findUniqueOrderedProduct?: { __typename?: 'OrderedProduct', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, minted?: boolean | undefined, name?: string | undefined, orderId?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug?: string | undefined, productType?: ProductType | undefined, productUrl?: string | undefined, quantity?: number | undefined, redeemedQuantity?: number | undefined, slug?: string | undefined, tokenId?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, variationId?: string | undefined, variationName?: string | undefined, variationOption?: any | undefined, walletAddress?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, order?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyOrderedProductQueryVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
  orderBy?: InputMaybe<Array<OrderedProductOrderByWithRelationInput> | OrderedProductOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedProductQuery = { __typename?: 'Query', findManyOrderedProduct: Array<{ __typename?: 'OrderedProduct', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, minted?: boolean | undefined, name?: string | undefined, orderId?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug?: string | undefined, productType?: ProductType | undefined, productUrl?: string | undefined, quantity?: number | undefined, redeemedQuantity?: number | undefined, slug?: string | undefined, tokenId?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, variationId?: string | undefined, variationName?: string | undefined, variationOption?: any | undefined, walletAddress?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, order?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyOrderedProductCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
  orderBy?: InputMaybe<Array<OrderedProductOrderByWithRelationInput> | OrderedProductOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedProductCountQuery = { __typename?: 'Query', findManyOrderedProductCount: number };

export type CreateOneOrderedProductMutationVariables = Exact<{
  data: OrderedProductCreateInput;
}>;


export type CreateOneOrderedProductMutation = { __typename?: 'Mutation', createOneOrderedProduct: { __typename?: 'OrderedProduct', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, minted?: boolean | undefined, name?: string | undefined, orderId?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug?: string | undefined, productType?: ProductType | undefined, productUrl?: string | undefined, quantity?: number | undefined, redeemedQuantity?: number | undefined, slug?: string | undefined, tokenId?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, variationId?: string | undefined, variationName?: string | undefined, variationOption?: any | undefined, walletAddress?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, order?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneOrderedProductMutationVariables = Exact<{
  where: OrderedProductWhereUniqueInput;
  data: OrderedProductUpdateInput;
}>;


export type UpdateOneOrderedProductMutation = { __typename?: 'Mutation', updateOneOrderedProduct: { __typename?: 'OrderedProduct', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, minted?: boolean | undefined, name?: string | undefined, orderId?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug?: string | undefined, productType?: ProductType | undefined, productUrl?: string | undefined, quantity?: number | undefined, redeemedQuantity?: number | undefined, slug?: string | undefined, tokenId?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, variationId?: string | undefined, variationName?: string | undefined, variationOption?: any | undefined, walletAddress?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, order?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneOrderedProductMutationVariables = Exact<{
  where: OrderedProductWhereUniqueInput;
}>;


export type DeleteOneOrderedProductMutation = { __typename?: 'Mutation', deleteOneOrderedProduct?: { __typename?: 'OrderedProduct', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, minted?: boolean | undefined, name?: string | undefined, orderId?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug?: string | undefined, productType?: ProductType | undefined, productUrl?: string | undefined, quantity?: number | undefined, redeemedQuantity?: number | undefined, slug?: string | undefined, tokenId?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, variationId?: string | undefined, variationName?: string | undefined, variationOption?: any | undefined, walletAddress?: string | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined, order?: { __typename?: 'Order', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, affiliateFee?: number | undefined, affiliateWalletAddress?: string | undefined, affiliateWebsiteSlug?: string | undefined, amount?: number | undefined, applicationFee?: number | undefined, completed?: boolean | undefined, couponId?: string | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, discount?: number | undefined, id: string, isAirdrop?: boolean | undefined, paid?: boolean | undefined, paymentType?: PaymentType | undefined, stripeFee?: boolean | undefined, total?: number | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderedProductMutationVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
}>;


export type DeleteManyOrderedProductMutation = { __typename?: 'Mutation', deleteManyOrderedProduct: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedProductMutationVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
  data: OrderedProductUpdateManyMutationInput;
}>;


export type UpdateManyOrderedProductMutation = { __typename?: 'Mutation', updateManyOrderedProduct: { __typename?: 'BatchPayload', count: number } };

export type OrganizationFieldsFragment = { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined };

export type OrganizationFragment = { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined };

export type FindUniqueOrganizationQueryVariables = Exact<{
  where: OrganizationWhereUniqueInput;
}>;


export type FindUniqueOrganizationQuery = { __typename?: 'Query', findUniqueOrganization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type FindManyOrganizationQueryVariables = Exact<{
  where?: InputMaybe<OrganizationWhereInput>;
  orderBy?: InputMaybe<Array<OrganizationOrderByWithRelationInput> | OrganizationOrderByWithRelationInput>;
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrganizationQuery = { __typename?: 'Query', findManyOrganization: Array<{ __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined }> };

export type FindManyOrganizationCountQueryVariables = Exact<{
  where?: InputMaybe<OrganizationWhereInput>;
  orderBy?: InputMaybe<Array<OrganizationOrderByWithRelationInput> | OrganizationOrderByWithRelationInput>;
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrganizationCountQuery = { __typename?: 'Query', findManyOrganizationCount: number };

export type CreateOneOrganizationMutationVariables = Exact<{
  data: OrganizationCreateInput;
}>;


export type CreateOneOrganizationMutation = { __typename?: 'Mutation', createOneOrganization: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type UpdateOneOrganizationMutationVariables = Exact<{
  where: OrganizationWhereUniqueInput;
  data: OrganizationUpdateInput;
}>;


export type UpdateOneOrganizationMutation = { __typename?: 'Mutation', updateOneOrganization: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type DeleteOneOrganizationMutationVariables = Exact<{
  where: OrganizationWhereUniqueInput;
}>;


export type DeleteOneOrganizationMutation = { __typename?: 'Mutation', deleteOneOrganization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type DeleteManyOrganizationMutationVariables = Exact<{
  where?: InputMaybe<OrganizationWhereInput>;
}>;


export type DeleteManyOrganizationMutation = { __typename?: 'Mutation', deleteManyOrganization: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrganizationMutationVariables = Exact<{
  where?: InputMaybe<OrganizationWhereInput>;
  data: OrganizationUpdateManyMutationInput;
}>;


export type UpdateManyOrganizationMutation = { __typename?: 'Mutation', updateManyOrganization: { __typename?: 'BatchPayload', count: number } };

export type PageFieldsFragment = { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined };

export type PageFragment = { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniquePageQueryVariables = Exact<{
  where: PageWhereUniqueInput;
}>;


export type FindUniquePageQuery = { __typename?: 'Query', findUniquePage?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyPageQueryVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
  orderBy?: InputMaybe<Array<PageOrderByWithRelationInput> | PageOrderByWithRelationInput>;
  cursor?: InputMaybe<PageWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageQuery = { __typename?: 'Query', findManyPage: Array<{ __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyPageCountQueryVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
  orderBy?: InputMaybe<Array<PageOrderByWithRelationInput> | PageOrderByWithRelationInput>;
  cursor?: InputMaybe<PageWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageCountQuery = { __typename?: 'Query', findManyPageCount: number };

export type CreateOnePageMutationVariables = Exact<{
  data: PageCreateInput;
}>;


export type CreateOnePageMutation = { __typename?: 'Mutation', createOnePage: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOnePageMutationVariables = Exact<{
  where: PageWhereUniqueInput;
  data: PageUpdateInput;
}>;


export type UpdateOnePageMutation = { __typename?: 'Mutation', updateOnePage: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOnePageMutationVariables = Exact<{
  where: PageWhereUniqueInput;
}>;


export type DeleteOnePageMutation = { __typename?: 'Mutation', deleteOnePage?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyPageMutationVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
}>;


export type DeleteManyPageMutation = { __typename?: 'Mutation', deleteManyPage: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyPageMutationVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
  data: PageUpdateManyMutationInput;
}>;


export type UpdateManyPageMutation = { __typename?: 'Mutation', updateManyPage: { __typename?: 'BatchPayload', count: number } };

export type PageCollectionFieldsFragment = { __typename?: 'PageCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined };

export type PageCollectionFragment = { __typename?: 'PageCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniquePageCollectionQueryVariables = Exact<{
  where: PageCollectionWhereUniqueInput;
}>;


export type FindUniquePageCollectionQuery = { __typename?: 'Query', findUniquePageCollection?: { __typename?: 'PageCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyPageCollectionQueryVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
  orderBy?: InputMaybe<Array<PageCollectionOrderByWithRelationInput> | PageCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageCollectionQuery = { __typename?: 'Query', findManyPageCollection: Array<{ __typename?: 'PageCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyPageCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
  orderBy?: InputMaybe<Array<PageCollectionOrderByWithRelationInput> | PageCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageCollectionCountQuery = { __typename?: 'Query', findManyPageCollectionCount: number };

export type CreateOnePageCollectionMutationVariables = Exact<{
  data: PageCollectionCreateInput;
}>;


export type CreateOnePageCollectionMutation = { __typename?: 'Mutation', createOnePageCollection: { __typename?: 'PageCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOnePageCollectionMutationVariables = Exact<{
  where: PageCollectionWhereUniqueInput;
  data: PageCollectionUpdateInput;
}>;


export type UpdateOnePageCollectionMutation = { __typename?: 'Mutation', updateOnePageCollection: { __typename?: 'PageCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOnePageCollectionMutationVariables = Exact<{
  where: PageCollectionWhereUniqueInput;
}>;


export type DeleteOnePageCollectionMutation = { __typename?: 'Mutation', deleteOnePageCollection?: { __typename?: 'PageCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyPageCollectionMutationVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
}>;


export type DeleteManyPageCollectionMutation = { __typename?: 'Mutation', deleteManyPageCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyPageCollectionMutationVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
  data: PageCollectionUpdateManyMutationInput;
}>;


export type UpdateManyPageCollectionMutation = { __typename?: 'Mutation', updateManyPageCollection: { __typename?: 'BatchPayload', count: number } };

export type PageViewFieldsFragment = { __typename?: 'PageView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, pageId?: string | undefined };

export type PageViewFragment = { __typename?: 'PageView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniquePageViewQueryVariables = Exact<{
  where: PageViewWhereUniqueInput;
}>;


export type FindUniquePageViewQuery = { __typename?: 'Query', findUniquePageView?: { __typename?: 'PageView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyPageViewQueryVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
  orderBy?: InputMaybe<Array<PageViewOrderByWithRelationInput> | PageViewOrderByWithRelationInput>;
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageViewQuery = { __typename?: 'Query', findManyPageView: Array<{ __typename?: 'PageView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyPageViewCountQueryVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
  orderBy?: InputMaybe<Array<PageViewOrderByWithRelationInput> | PageViewOrderByWithRelationInput>;
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageViewCountQuery = { __typename?: 'Query', findManyPageViewCount: number };

export type CreateOnePageViewMutationVariables = Exact<{
  data: PageViewCreateInput;
}>;


export type CreateOnePageViewMutation = { __typename?: 'Mutation', createOnePageView: { __typename?: 'PageView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOnePageViewMutationVariables = Exact<{
  where: PageViewWhereUniqueInput;
  data: PageViewUpdateInput;
}>;


export type UpdateOnePageViewMutation = { __typename?: 'Mutation', updateOnePageView: { __typename?: 'PageView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOnePageViewMutationVariables = Exact<{
  where: PageViewWhereUniqueInput;
}>;


export type DeleteOnePageViewMutation = { __typename?: 'Mutation', deleteOnePageView?: { __typename?: 'PageView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyPageViewMutationVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
}>;


export type DeleteManyPageViewMutation = { __typename?: 'Mutation', deleteManyPageView: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyPageViewMutationVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
  data: PageViewUpdateManyMutationInput;
}>;


export type UpdateManyPageViewMutation = { __typename?: 'Mutation', updateManyPageView: { __typename?: 'BatchPayload', count: number } };

export type ProductFieldsFragment = { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined };

export type ProductFragment = { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueProductQueryVariables = Exact<{
  where: ProductWhereUniqueInput;
}>;


export type FindUniqueProductQuery = { __typename?: 'Query', findUniqueProduct?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyProductQueryVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput> | ProductOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductQuery = { __typename?: 'Query', findManyProduct: Array<{ __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyProductCountQueryVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput> | ProductOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductCountQuery = { __typename?: 'Query', findManyProductCount: number };

export type CreateOneProductMutationVariables = Exact<{
  data: ProductCreateInput;
}>;


export type CreateOneProductMutation = { __typename?: 'Mutation', createOneProduct: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneProductMutationVariables = Exact<{
  where: ProductWhereUniqueInput;
  data: ProductUpdateInput;
}>;


export type UpdateOneProductMutation = { __typename?: 'Mutation', updateOneProduct: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneProductMutationVariables = Exact<{
  where: ProductWhereUniqueInput;
}>;


export type DeleteOneProductMutation = { __typename?: 'Mutation', deleteOneProduct?: { __typename?: 'Product', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, price?: number | undefined, productType?: ProductType | undefined, prodyctType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyFee?: number | undefined, salePrice?: number | undefined, slug?: string | undefined, startTime?: any | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useNft?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyProductMutationVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
}>;


export type DeleteManyProductMutation = { __typename?: 'Mutation', deleteManyProduct: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyProductMutationVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  data: ProductUpdateManyMutationInput;
}>;


export type UpdateManyProductMutation = { __typename?: 'Mutation', updateManyProduct: { __typename?: 'BatchPayload', count: number } };

export type ProductCollectionFieldsFragment = { __typename?: 'ProductCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined };

export type ProductCollectionFragment = { __typename?: 'ProductCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueProductCollectionQueryVariables = Exact<{
  where: ProductCollectionWhereUniqueInput;
}>;


export type FindUniqueProductCollectionQuery = { __typename?: 'Query', findUniqueProductCollection?: { __typename?: 'ProductCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyProductCollectionQueryVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
  orderBy?: InputMaybe<Array<ProductCollectionOrderByWithRelationInput> | ProductCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductCollectionQuery = { __typename?: 'Query', findManyProductCollection: Array<{ __typename?: 'ProductCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyProductCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
  orderBy?: InputMaybe<Array<ProductCollectionOrderByWithRelationInput> | ProductCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductCollectionCountQuery = { __typename?: 'Query', findManyProductCollectionCount: number };

export type CreateOneProductCollectionMutationVariables = Exact<{
  data: ProductCollectionCreateInput;
}>;


export type CreateOneProductCollectionMutation = { __typename?: 'Mutation', createOneProductCollection: { __typename?: 'ProductCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneProductCollectionMutationVariables = Exact<{
  where: ProductCollectionWhereUniqueInput;
  data: ProductCollectionUpdateInput;
}>;


export type UpdateOneProductCollectionMutation = { __typename?: 'Mutation', updateOneProductCollection: { __typename?: 'ProductCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneProductCollectionMutationVariables = Exact<{
  where: ProductCollectionWhereUniqueInput;
}>;


export type DeleteOneProductCollectionMutation = { __typename?: 'Mutation', deleteOneProductCollection?: { __typename?: 'ProductCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyProductCollectionMutationVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
}>;


export type DeleteManyProductCollectionMutation = { __typename?: 'Mutation', deleteManyProductCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyProductCollectionMutationVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
  data: ProductCollectionUpdateManyMutationInput;
}>;


export type UpdateManyProductCollectionMutation = { __typename?: 'Mutation', updateManyProductCollection: { __typename?: 'BatchPayload', count: number } };

export type ProductGroupFieldsFragment = { __typename?: 'ProductGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined };

export type ProductGroupFragment = { __typename?: 'ProductGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueProductGroupQueryVariables = Exact<{
  where: ProductGroupWhereUniqueInput;
}>;


export type FindUniqueProductGroupQuery = { __typename?: 'Query', findUniqueProductGroup?: { __typename?: 'ProductGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyProductGroupQueryVariables = Exact<{
  where?: InputMaybe<ProductGroupWhereInput>;
  orderBy?: InputMaybe<Array<ProductGroupOrderByWithRelationInput> | ProductGroupOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductGroupQuery = { __typename?: 'Query', findManyProductGroup: Array<{ __typename?: 'ProductGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyProductGroupCountQueryVariables = Exact<{
  where?: InputMaybe<ProductGroupWhereInput>;
  orderBy?: InputMaybe<Array<ProductGroupOrderByWithRelationInput> | ProductGroupOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductGroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductGroupCountQuery = { __typename?: 'Query', findManyProductGroupCount: number };

export type CreateOneProductGroupMutationVariables = Exact<{
  data: ProductGroupCreateInput;
}>;


export type CreateOneProductGroupMutation = { __typename?: 'Mutation', createOneProductGroup: { __typename?: 'ProductGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneProductGroupMutationVariables = Exact<{
  where: ProductGroupWhereUniqueInput;
  data: ProductGroupUpdateInput;
}>;


export type UpdateOneProductGroupMutation = { __typename?: 'Mutation', updateOneProductGroup: { __typename?: 'ProductGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneProductGroupMutationVariables = Exact<{
  where: ProductGroupWhereUniqueInput;
}>;


export type DeleteOneProductGroupMutation = { __typename?: 'Mutation', deleteOneProductGroup?: { __typename?: 'ProductGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, websiteId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyProductGroupMutationVariables = Exact<{
  where?: InputMaybe<ProductGroupWhereInput>;
}>;


export type DeleteManyProductGroupMutation = { __typename?: 'Mutation', deleteManyProductGroup: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyProductGroupMutationVariables = Exact<{
  where?: InputMaybe<ProductGroupWhereInput>;
  data: ProductGroupUpdateManyMutationInput;
}>;


export type UpdateManyProductGroupMutation = { __typename?: 'Mutation', updateManyProductGroup: { __typename?: 'BatchPayload', count: number } };

export type RefreshTokenFieldsFragment = { __typename?: 'RefreshToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, expires?: any | undefined, geo?: string | undefined, ip?: string | undefined, lastActive?: any | undefined, loginTokenId: string, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, value?: string | undefined };

export type RefreshTokenFragment = { __typename?: 'RefreshToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, expires?: any | undefined, geo?: string | undefined, ip?: string | undefined, lastActive?: any | undefined, loginTokenId: string, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, value?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined };

export type FindUniqueRefreshTokenQueryVariables = Exact<{
  where: RefreshTokenWhereUniqueInput;
}>;


export type FindUniqueRefreshTokenQuery = { __typename?: 'Query', findUniqueRefreshToken?: { __typename?: 'RefreshToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, expires?: any | undefined, geo?: string | undefined, ip?: string | undefined, lastActive?: any | undefined, loginTokenId: string, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, value?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type FindManyRefreshTokenQueryVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
  orderBy?: InputMaybe<Array<RefreshTokenOrderByWithRelationInput> | RefreshTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRefreshTokenQuery = { __typename?: 'Query', findManyRefreshToken: Array<{ __typename?: 'RefreshToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, expires?: any | undefined, geo?: string | undefined, ip?: string | undefined, lastActive?: any | undefined, loginTokenId: string, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, value?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined }> };

export type FindManyRefreshTokenCountQueryVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
  orderBy?: InputMaybe<Array<RefreshTokenOrderByWithRelationInput> | RefreshTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRefreshTokenCountQuery = { __typename?: 'Query', findManyRefreshTokenCount: number };

export type CreateOneRefreshTokenMutationVariables = Exact<{
  data: RefreshTokenCreateInput;
}>;


export type CreateOneRefreshTokenMutation = { __typename?: 'Mutation', createOneRefreshToken: { __typename?: 'RefreshToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, expires?: any | undefined, geo?: string | undefined, ip?: string | undefined, lastActive?: any | undefined, loginTokenId: string, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, value?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type UpdateOneRefreshTokenMutationVariables = Exact<{
  where: RefreshTokenWhereUniqueInput;
  data: RefreshTokenUpdateInput;
}>;


export type UpdateOneRefreshTokenMutation = { __typename?: 'Mutation', updateOneRefreshToken: { __typename?: 'RefreshToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, expires?: any | undefined, geo?: string | undefined, ip?: string | undefined, lastActive?: any | undefined, loginTokenId: string, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, value?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type DeleteOneRefreshTokenMutationVariables = Exact<{
  where: RefreshTokenWhereUniqueInput;
}>;


export type DeleteOneRefreshTokenMutation = { __typename?: 'Mutation', deleteOneRefreshToken?: { __typename?: 'RefreshToken', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, expires?: any | undefined, geo?: string | undefined, ip?: string | undefined, lastActive?: any | undefined, loginTokenId: string, userAgent?: string | undefined, userAgentRaw?: string | undefined, userId?: string | undefined, value?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type DeleteManyRefreshTokenMutationVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
}>;


export type DeleteManyRefreshTokenMutation = { __typename?: 'Mutation', deleteManyRefreshToken: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRefreshTokenMutationVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
  data: RefreshTokenUpdateManyMutationInput;
}>;


export type UpdateManyRefreshTokenMutation = { __typename?: 'Mutation', updateManyRefreshToken: { __typename?: 'BatchPayload', count: number } };

export type RequestFieldsFragment = { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined };

export type RequestFragment = { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueRequestQueryVariables = Exact<{
  where: RequestWhereUniqueInput;
}>;


export type FindUniqueRequestQuery = { __typename?: 'Query', findUniqueRequest?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyRequestQueryVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
  orderBy?: InputMaybe<Array<RequestOrderByWithRelationInput> | RequestOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestQuery = { __typename?: 'Query', findManyRequest: Array<{ __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyRequestCountQueryVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
  orderBy?: InputMaybe<Array<RequestOrderByWithRelationInput> | RequestOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestCountQuery = { __typename?: 'Query', findManyRequestCount: number };

export type CreateOneRequestMutationVariables = Exact<{
  data: RequestCreateInput;
}>;


export type CreateOneRequestMutation = { __typename?: 'Mutation', createOneRequest: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneRequestMutationVariables = Exact<{
  where: RequestWhereUniqueInput;
  data: RequestUpdateInput;
}>;


export type UpdateOneRequestMutation = { __typename?: 'Mutation', updateOneRequest: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneRequestMutationVariables = Exact<{
  where: RequestWhereUniqueInput;
}>;


export type DeleteOneRequestMutation = { __typename?: 'Mutation', deleteOneRequest?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyRequestMutationVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
}>;


export type DeleteManyRequestMutation = { __typename?: 'Mutation', deleteManyRequest: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRequestMutationVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
  data: RequestUpdateManyMutationInput;
}>;


export type UpdateManyRequestMutation = { __typename?: 'Mutation', updateManyRequest: { __typename?: 'BatchPayload', count: number } };

export type RequestClickFieldsFragment = { __typename?: 'RequestClick', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, requestId?: string | undefined, videoId?: string | undefined };

export type RequestClickFragment = { __typename?: 'RequestClick', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, requestId?: string | undefined, videoId?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, request?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueRequestClickQueryVariables = Exact<{
  where: RequestClickWhereUniqueInput;
}>;


export type FindUniqueRequestClickQuery = { __typename?: 'Query', findUniqueRequestClick?: { __typename?: 'RequestClick', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, requestId?: string | undefined, videoId?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, request?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyRequestClickQueryVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
  orderBy?: InputMaybe<Array<RequestClickOrderByWithRelationInput> | RequestClickOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestClickQuery = { __typename?: 'Query', findManyRequestClick: Array<{ __typename?: 'RequestClick', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, requestId?: string | undefined, videoId?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, request?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyRequestClickCountQueryVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
  orderBy?: InputMaybe<Array<RequestClickOrderByWithRelationInput> | RequestClickOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestClickCountQuery = { __typename?: 'Query', findManyRequestClickCount: number };

export type CreateOneRequestClickMutationVariables = Exact<{
  data: RequestClickCreateInput;
}>;


export type CreateOneRequestClickMutation = { __typename?: 'Mutation', createOneRequestClick: { __typename?: 'RequestClick', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, requestId?: string | undefined, videoId?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, request?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneRequestClickMutationVariables = Exact<{
  where: RequestClickWhereUniqueInput;
  data: RequestClickUpdateInput;
}>;


export type UpdateOneRequestClickMutation = { __typename?: 'Mutation', updateOneRequestClick: { __typename?: 'RequestClick', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, requestId?: string | undefined, videoId?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, request?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneRequestClickMutationVariables = Exact<{
  where: RequestClickWhereUniqueInput;
}>;


export type DeleteOneRequestClickMutation = { __typename?: 'Mutation', deleteOneRequestClick?: { __typename?: 'RequestClick', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, audioId?: string | undefined, id: string, ip?: string | undefined, pageId?: string | undefined, requestId?: string | undefined, videoId?: string | undefined, audio?: { __typename?: 'Audio', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, audioObj?: any | undefined, audioPreviewObj?: any | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, request?: { __typename?: 'Request', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, audioId?: string | undefined, chain?: Chain | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days?: number | undefined, description?: string | undefined, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message?: string | undefined, name?: string | undefined, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, paymentType?: PaymentType | undefined, price?: number | undefined, requestStatus?: RequestStatus | undefined, stripeFee?: number | undefined, subject?: string | undefined, total?: number | undefined, transactionHash?: string | undefined, url?: string | undefined, useUsd?: boolean | undefined, videoId?: string | undefined, walletAddress?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyRequestClickMutationVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
}>;


export type DeleteManyRequestClickMutation = { __typename?: 'Mutation', deleteManyRequestClick: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRequestClickMutationVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
  data: RequestClickUpdateManyMutationInput;
}>;


export type UpdateManyRequestClickMutation = { __typename?: 'Mutation', updateManyRequestClick: { __typename?: 'BatchPayload', count: number } };

export type SlugCounterFieldsFragment = { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined };

export type SlugCounterFragment = { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined };

export type FindUniqueSlugCounterQueryVariables = Exact<{
  where: SlugCounterWhereUniqueInput;
}>;


export type FindUniqueSlugCounterQuery = { __typename?: 'Query', findUniqueSlugCounter?: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } | undefined };

export type FindManySlugCounterQueryVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
  orderBy?: InputMaybe<Array<SlugCounterOrderByWithRelationInput> | SlugCounterOrderByWithRelationInput>;
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySlugCounterQuery = { __typename?: 'Query', findManySlugCounter: Array<{ __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined }> };

export type FindManySlugCounterCountQueryVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
  orderBy?: InputMaybe<Array<SlugCounterOrderByWithRelationInput> | SlugCounterOrderByWithRelationInput>;
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySlugCounterCountQuery = { __typename?: 'Query', findManySlugCounterCount: number };

export type CreateOneSlugCounterMutationVariables = Exact<{
  data: SlugCounterCreateInput;
}>;


export type CreateOneSlugCounterMutation = { __typename?: 'Mutation', createOneSlugCounter: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } };

export type UpdateOneSlugCounterMutationVariables = Exact<{
  where: SlugCounterWhereUniqueInput;
  data: SlugCounterUpdateInput;
}>;


export type UpdateOneSlugCounterMutation = { __typename?: 'Mutation', updateOneSlugCounter: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } };

export type DeleteOneSlugCounterMutationVariables = Exact<{
  where: SlugCounterWhereUniqueInput;
}>;


export type DeleteOneSlugCounterMutation = { __typename?: 'Mutation', deleteOneSlugCounter?: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } | undefined };

export type DeleteManySlugCounterMutationVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
}>;


export type DeleteManySlugCounterMutation = { __typename?: 'Mutation', deleteManySlugCounter: { __typename?: 'BatchPayload', count: number } };

export type UpdateManySlugCounterMutationVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
  data: SlugCounterUpdateManyMutationInput;
}>;


export type UpdateManySlugCounterMutation = { __typename?: 'Mutation', updateManySlugCounter: { __typename?: 'BatchPayload', count: number } };

export type SpeakerFieldsFragment = { __typename?: 'Speaker', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, agendaId?: string | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined };

export type SpeakerFragment = { __typename?: 'Speaker', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, agendaId?: string | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, agenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined } | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueSpeakerQueryVariables = Exact<{
  where: SpeakerWhereUniqueInput;
}>;


export type FindUniqueSpeakerQuery = { __typename?: 'Query', findUniqueSpeaker?: { __typename?: 'Speaker', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, agendaId?: string | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, agenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined } | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManySpeakerQueryVariables = Exact<{
  where?: InputMaybe<SpeakerWhereInput>;
  orderBy?: InputMaybe<Array<SpeakerOrderByWithRelationInput> | SpeakerOrderByWithRelationInput>;
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySpeakerQuery = { __typename?: 'Query', findManySpeaker: Array<{ __typename?: 'Speaker', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, agendaId?: string | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, agenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined } | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManySpeakerCountQueryVariables = Exact<{
  where?: InputMaybe<SpeakerWhereInput>;
  orderBy?: InputMaybe<Array<SpeakerOrderByWithRelationInput> | SpeakerOrderByWithRelationInput>;
  cursor?: InputMaybe<SpeakerWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySpeakerCountQuery = { __typename?: 'Query', findManySpeakerCount: number };

export type CreateOneSpeakerMutationVariables = Exact<{
  data: SpeakerCreateInput;
}>;


export type CreateOneSpeakerMutation = { __typename?: 'Mutation', createOneSpeaker: { __typename?: 'Speaker', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, agendaId?: string | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, agenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined } | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneSpeakerMutationVariables = Exact<{
  where: SpeakerWhereUniqueInput;
  data: SpeakerUpdateInput;
}>;


export type UpdateOneSpeakerMutation = { __typename?: 'Mutation', updateOneSpeaker: { __typename?: 'Speaker', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, agendaId?: string | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, agenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined } | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneSpeakerMutationVariables = Exact<{
  where: SpeakerWhereUniqueInput;
}>;


export type DeleteOneSpeakerMutation = { __typename?: 'Mutation', deleteOneSpeaker?: { __typename?: 'Speaker', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, agendaId?: string | undefined, description?: string | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, agenda?: { __typename?: 'Agenda', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, endTime?: any | undefined, eventId?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, startTime?: any | undefined } | undefined, event?: { __typename?: 'Event', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, chain?: Chain | undefined, commissionFee?: number | undefined, content?: any | undefined, contractAddress?: string | undefined, description?: string | undefined, endDate?: any | undefined, endTime?: any | undefined, eventEndTime?: any | undefined, eventStartTime?: any | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery?: any | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isExternalNft?: boolean | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, maxOrderPerUser?: number | undefined, maxQuantity?: number | undefined, name?: string | undefined, payWithUSD?: boolean | undefined, price?: number | undefined, productType?: ProductType | undefined, quantity?: number | undefined, quantitySold?: number | undefined, royaltyBps?: number | undefined, royaltyFee?: number | undefined, saleEnabled?: boolean | undefined, salePrice?: number | undefined, slug?: string | undefined, startDate?: any | undefined, startTime?: any | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, transactionHash?: string | undefined, useCommission?: boolean | undefined, useExternalNft?: boolean | undefined, useMultipleDays?: boolean | undefined, useNft?: boolean | undefined, usePrice?: boolean | undefined, useQuantity?: boolean | undefined, useRoyalty?: boolean | undefined, useStartTime?: boolean | undefined, useUsd?: boolean | undefined, useVariations?: boolean | undefined, variationOptions?: any | undefined, variations?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManySpeakerMutationVariables = Exact<{
  where?: InputMaybe<SpeakerWhereInput>;
}>;


export type DeleteManySpeakerMutation = { __typename?: 'Mutation', deleteManySpeaker: { __typename?: 'BatchPayload', count: number } };

export type UpdateManySpeakerMutationVariables = Exact<{
  where?: InputMaybe<SpeakerWhereInput>;
  data: SpeakerUpdateManyMutationInput;
}>;


export type UpdateManySpeakerMutation = { __typename?: 'Mutation', updateManySpeaker: { __typename?: 'BatchPayload', count: number } };

export type UserFieldsFragment = { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined };

export type UserFragment = { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined };

export type FindUniqueUserQueryVariables = Exact<{
  where: UserWhereUniqueInput;
}>;


export type FindUniqueUserQuery = { __typename?: 'Query', findUniqueUser?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined };

export type FindManyUserQueryVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput> | UserOrderByWithRelationInput>;
  cursor?: InputMaybe<UserWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyUserQuery = { __typename?: 'Query', findManyUser: Array<{ __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined }> };

export type FindManyUserCountQueryVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput> | UserOrderByWithRelationInput>;
  cursor?: InputMaybe<UserWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyUserCountQuery = { __typename?: 'Query', findManyUserCount: number };

export type CreateOneUserMutationVariables = Exact<{
  data: UserCreateInput;
}>;


export type CreateOneUserMutation = { __typename?: 'Mutation', createOneUser: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } };

export type UpdateOneUserMutationVariables = Exact<{
  where: UserWhereUniqueInput;
  data: UserUpdateInput;
}>;


export type UpdateOneUserMutation = { __typename?: 'Mutation', updateOneUser: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } };

export type DeleteOneUserMutationVariables = Exact<{
  where: UserWhereUniqueInput;
}>;


export type DeleteOneUserMutation = { __typename?: 'Mutation', deleteOneUser?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined };

export type DeleteManyUserMutationVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
}>;


export type DeleteManyUserMutation = { __typename?: 'Mutation', deleteManyUser: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyUserMutationVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
  data: UserUpdateManyMutationInput;
}>;


export type UpdateManyUserMutation = { __typename?: 'Mutation', updateManyUser: { __typename?: 'BatchPayload', count: number } };

export type VideoFieldsFragment = { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined };

export type VideoFragment = { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueVideoQueryVariables = Exact<{
  where: VideoWhereUniqueInput;
}>;


export type FindUniqueVideoQuery = { __typename?: 'Query', findUniqueVideo?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyVideoQueryVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
  orderBy?: InputMaybe<Array<VideoOrderByWithRelationInput> | VideoOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoQuery = { __typename?: 'Query', findManyVideo: Array<{ __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyVideoCountQueryVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
  orderBy?: InputMaybe<Array<VideoOrderByWithRelationInput> | VideoOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoCountQuery = { __typename?: 'Query', findManyVideoCount: number };

export type CreateOneVideoMutationVariables = Exact<{
  data: VideoCreateInput;
}>;


export type CreateOneVideoMutation = { __typename?: 'Mutation', createOneVideo: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneVideoMutationVariables = Exact<{
  where: VideoWhereUniqueInput;
  data: VideoUpdateInput;
}>;


export type UpdateOneVideoMutation = { __typename?: 'Mutation', updateOneVideo: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneVideoMutationVariables = Exact<{
  where: VideoWhereUniqueInput;
}>;


export type DeleteOneVideoMutation = { __typename?: 'Mutation', deleteOneVideo?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyVideoMutationVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
}>;


export type DeleteManyVideoMutation = { __typename?: 'Mutation', deleteManyVideo: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyVideoMutationVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
  data: VideoUpdateManyMutationInput;
}>;


export type UpdateManyVideoMutation = { __typename?: 'Mutation', updateManyVideo: { __typename?: 'BatchPayload', count: number } };

export type VideoCollectionFieldsFragment = { __typename?: 'VideoCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined };

export type VideoCollectionFragment = { __typename?: 'VideoCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueVideoCollectionQueryVariables = Exact<{
  where: VideoCollectionWhereUniqueInput;
}>;


export type FindUniqueVideoCollectionQuery = { __typename?: 'Query', findUniqueVideoCollection?: { __typename?: 'VideoCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyVideoCollectionQueryVariables = Exact<{
  where?: InputMaybe<VideoCollectionWhereInput>;
  orderBy?: InputMaybe<Array<VideoCollectionOrderByWithRelationInput> | VideoCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoCollectionQuery = { __typename?: 'Query', findManyVideoCollection: Array<{ __typename?: 'VideoCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyVideoCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<VideoCollectionWhereInput>;
  orderBy?: InputMaybe<Array<VideoCollectionOrderByWithRelationInput> | VideoCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoCollectionCountQuery = { __typename?: 'Query', findManyVideoCollectionCount: number };

export type CreateOneVideoCollectionMutationVariables = Exact<{
  data: VideoCollectionCreateInput;
}>;


export type CreateOneVideoCollectionMutation = { __typename?: 'Mutation', createOneVideoCollection: { __typename?: 'VideoCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneVideoCollectionMutationVariables = Exact<{
  where: VideoCollectionWhereUniqueInput;
  data: VideoCollectionUpdateInput;
}>;


export type UpdateOneVideoCollectionMutation = { __typename?: 'Mutation', updateOneVideoCollection: { __typename?: 'VideoCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneVideoCollectionMutationVariables = Exact<{
  where: VideoCollectionWhereUniqueInput;
}>;


export type DeleteOneVideoCollectionMutation = { __typename?: 'Mutation', deleteOneVideoCollection?: { __typename?: 'VideoCollection', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyVideoCollectionMutationVariables = Exact<{
  where?: InputMaybe<VideoCollectionWhereInput>;
}>;


export type DeleteManyVideoCollectionMutation = { __typename?: 'Mutation', deleteManyVideoCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyVideoCollectionMutationVariables = Exact<{
  where?: InputMaybe<VideoCollectionWhereInput>;
  data: VideoCollectionUpdateManyMutationInput;
}>;


export type UpdateManyVideoCollectionMutation = { __typename?: 'Mutation', updateManyVideoCollection: { __typename?: 'BatchPayload', count: number } };

export type VideoViewFieldsFragment = { __typename?: 'VideoView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, videoId?: string | undefined };

export type VideoViewFragment = { __typename?: 'VideoView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, videoId?: string | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueVideoViewQueryVariables = Exact<{
  where: VideoViewWhereUniqueInput;
}>;


export type FindUniqueVideoViewQuery = { __typename?: 'Query', findUniqueVideoView?: { __typename?: 'VideoView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, videoId?: string | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyVideoViewQueryVariables = Exact<{
  where?: InputMaybe<VideoViewWhereInput>;
  orderBy?: InputMaybe<Array<VideoViewOrderByWithRelationInput> | VideoViewOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoViewQuery = { __typename?: 'Query', findManyVideoView: Array<{ __typename?: 'VideoView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, videoId?: string | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyVideoViewCountQueryVariables = Exact<{
  where?: InputMaybe<VideoViewWhereInput>;
  orderBy?: InputMaybe<Array<VideoViewOrderByWithRelationInput> | VideoViewOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoViewCountQuery = { __typename?: 'Query', findManyVideoViewCount: number };

export type CreateOneVideoViewMutationVariables = Exact<{
  data: VideoViewCreateInput;
}>;


export type CreateOneVideoViewMutation = { __typename?: 'Mutation', createOneVideoView: { __typename?: 'VideoView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, videoId?: string | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneVideoViewMutationVariables = Exact<{
  where: VideoViewWhereUniqueInput;
  data: VideoViewUpdateInput;
}>;


export type UpdateOneVideoViewMutation = { __typename?: 'Mutation', updateOneVideoView: { __typename?: 'VideoView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, videoId?: string | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneVideoViewMutationVariables = Exact<{
  where: VideoViewWhereUniqueInput;
}>;


export type DeleteOneVideoViewMutation = { __typename?: 'Mutation', deleteOneVideoView?: { __typename?: 'VideoView', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, ip?: string | undefined, videoId?: string | undefined, video?: { __typename?: 'Video', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, externalUrl?: string | undefined, id: string, imageObj?: any | undefined, isExternalLink?: boolean | undefined, isIndex?: boolean | undefined, isYoutube?: boolean | undefined, menu?: boolean | undefined, name?: string | undefined, navColor?: NavColor | undefined, password?: string | undefined, slug?: string | undefined, videoObj?: any | undefined, videoPreviewObj?: any | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyVideoViewMutationVariables = Exact<{
  where?: InputMaybe<VideoViewWhereInput>;
}>;


export type DeleteManyVideoViewMutation = { __typename?: 'Mutation', deleteManyVideoView: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyVideoViewMutationVariables = Exact<{
  where?: InputMaybe<VideoViewWhereInput>;
  data: VideoViewUpdateManyMutationInput;
}>;


export type UpdateManyVideoViewMutation = { __typename?: 'Mutation', updateManyVideoView: { __typename?: 'BatchPayload', count: number } };

export type WebsiteFieldsFragment = { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined };

export type WebsiteFragment = { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined };

export type FindUniqueWebsiteQueryVariables = Exact<{
  where: WebsiteWhereUniqueInput;
}>;


export type FindUniqueWebsiteQuery = { __typename?: 'Query', findUniqueWebsite?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type FindManyWebsiteQueryVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
  orderBy?: InputMaybe<Array<WebsiteOrderByWithRelationInput> | WebsiteOrderByWithRelationInput>;
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWebsiteQuery = { __typename?: 'Query', findManyWebsite: Array<{ __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined }> };

export type FindManyWebsiteCountQueryVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
  orderBy?: InputMaybe<Array<WebsiteOrderByWithRelationInput> | WebsiteOrderByWithRelationInput>;
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWebsiteCountQuery = { __typename?: 'Query', findManyWebsiteCount: number };

export type CreateOneWebsiteMutationVariables = Exact<{
  data: WebsiteCreateInput;
}>;


export type CreateOneWebsiteMutation = { __typename?: 'Mutation', createOneWebsite: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type UpdateOneWebsiteMutationVariables = Exact<{
  where: WebsiteWhereUniqueInput;
  data: WebsiteUpdateInput;
}>;


export type UpdateOneWebsiteMutation = { __typename?: 'Mutation', updateOneWebsite: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } };

export type DeleteOneWebsiteMutationVariables = Exact<{
  where: WebsiteWhereUniqueInput;
}>;


export type DeleteOneWebsiteMutation = { __typename?: 'Mutation', deleteOneWebsite?: { __typename?: 'Website', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, active?: boolean | undefined, address?: any | undefined, adminFilters?: any | undefined, chain?: any | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, gasless?: boolean | undefined, hasLocation?: boolean | undefined, id: string, imageObj?: any | undefined, isTemplate?: boolean | undefined, languageCode?: LanguageCode | undefined, locationAddress?: string | undefined, locationLat?: number | undefined, locationLng?: number | undefined, logoObj?: any | undefined, menu?: any | undefined, name?: string | undefined, phone?: string | undefined, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor?: Color | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', adminFilters?: any | undefined, createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, email?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, telegramUserId?: string | undefined } | undefined } | undefined };

export type DeleteManyWebsiteMutationVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
}>;


export type DeleteManyWebsiteMutation = { __typename?: 'Mutation', deleteManyWebsite: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyWebsiteMutationVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
  data: WebsiteUpdateManyMutationInput;
}>;


export type UpdateManyWebsiteMutation = { __typename?: 'Mutation', updateManyWebsite: { __typename?: 'BatchPayload', count: number } };

export type WebsiteGroupFieldsFragment = { __typename?: 'WebsiteGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined };

export type WebsiteGroupFragment = { __typename?: 'WebsiteGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueWebsiteGroupQueryVariables = Exact<{
  where: WebsiteGroupWhereUniqueInput;
}>;


export type FindUniqueWebsiteGroupQuery = { __typename?: 'Query', findUniqueWebsiteGroup?: { __typename?: 'WebsiteGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyWebsiteGroupQueryVariables = Exact<{
  where?: InputMaybe<WebsiteGroupWhereInput>;
  orderBy?: InputMaybe<Array<WebsiteGroupOrderByWithRelationInput> | WebsiteGroupOrderByWithRelationInput>;
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWebsiteGroupQuery = { __typename?: 'Query', findManyWebsiteGroup: Array<{ __typename?: 'WebsiteGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyWebsiteGroupCountQueryVariables = Exact<{
  where?: InputMaybe<WebsiteGroupWhereInput>;
  orderBy?: InputMaybe<Array<WebsiteGroupOrderByWithRelationInput> | WebsiteGroupOrderByWithRelationInput>;
  cursor?: InputMaybe<WebsiteGroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWebsiteGroupCountQuery = { __typename?: 'Query', findManyWebsiteGroupCount: number };

export type CreateOneWebsiteGroupMutationVariables = Exact<{
  data: WebsiteGroupCreateInput;
}>;


export type CreateOneWebsiteGroupMutation = { __typename?: 'Mutation', createOneWebsiteGroup: { __typename?: 'WebsiteGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneWebsiteGroupMutationVariables = Exact<{
  where: WebsiteGroupWhereUniqueInput;
  data: WebsiteGroupUpdateInput;
}>;


export type UpdateOneWebsiteGroupMutation = { __typename?: 'Mutation', updateOneWebsiteGroup: { __typename?: 'WebsiteGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneWebsiteGroupMutationVariables = Exact<{
  where: WebsiteGroupWhereUniqueInput;
}>;


export type DeleteOneWebsiteGroupMutation = { __typename?: 'Mutation', deleteOneWebsiteGroup?: { __typename?: 'WebsiteGroup', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, id: string, name?: string | undefined, organizationId?: string | undefined, organization?: { __typename?: 'Organization', createdAt?: any | undefined, deletedAt?: any | undefined, deleted?: boolean | undefined, updatedAt?: any | undefined, description?: string | undefined, id: string, logoObj?: any | undefined, name?: string | undefined, slug?: string | undefined, telegramApiToken?: string | undefined, telegramBotId?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyWebsiteGroupMutationVariables = Exact<{
  where?: InputMaybe<WebsiteGroupWhereInput>;
}>;


export type DeleteManyWebsiteGroupMutation = { __typename?: 'Mutation', deleteManyWebsiteGroup: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyWebsiteGroupMutationVariables = Exact<{
  where?: InputMaybe<WebsiteGroupWhereInput>;
  data: WebsiteGroupUpdateManyMutationInput;
}>;


export type UpdateManyWebsiteGroupMutation = { __typename?: 'Mutation', updateManyWebsiteGroup: { __typename?: 'BatchPayload', count: number } };

export type LoginMutationVariables = Exact<{
  email: Scalars['String'];
  password: Scalars['String'];
}>;


export type LoginMutation = { __typename?: 'Mutation', login?: { __typename?: 'User', id: string, email?: string | undefined, name?: string | undefined } | undefined };

export type SignupMutationVariables = Exact<{
  email: Scalars['String'];
  password: Scalars['String'];
  name: Scalars['String'];
}>;


export type SignupMutation = { __typename?: 'Mutation', signup?: { __typename?: 'User', id: string, email?: string | undefined, name?: string | undefined } | undefined };

export type MeQueryVariables = Exact<{ [key: string]: never; }>;


export type MeQuery = { __typename?: 'Query', me?: { __typename?: 'User', id: string, name?: string | undefined, email?: string | undefined } | undefined };

export type GetCustomerQueryVariables = Exact<{
  websiteSlug: Scalars['String'];
}>;


export type GetCustomerQuery = { __typename?: 'Query', getCustomer?: any | undefined };

export type SignUploadUrlMutationVariables = Exact<{
  filename: Scalars['String'];
  acl: Scalars['String'];
  contentType: Scalars['String'];
}>;


export type SignUploadUrlMutation = { __typename?: 'Mutation', signUploadUrl?: string | undefined };

export type PermissionQueryVariables = Exact<{ [key: string]: never; }>;


export type PermissionQuery = { __typename?: 'Query', permission?: any | undefined };

export type EnterAdminMutationVariables = Exact<{
  admin: Scalars['String'];
  id: Scalars['String'];
}>;


export type EnterAdminMutation = { __typename?: 'Mutation', enterAdmin?: any | undefined };

export type LogoutAdminMutationVariables = Exact<{ [key: string]: never; }>;


export type LogoutAdminMutation = { __typename?: 'Mutation', logoutAdmin?: any | undefined };

export type LogoutMutationVariables = Exact<{ [key: string]: never; }>;


export type LogoutMutation = { __typename?: 'Mutation', logout?: boolean | undefined };

export type AddTemplateMutationVariables = Exact<{
  id: Scalars['String'];
  currentJson: Scalars['String'];
}>;


export type AddTemplateMutation = { __typename?: 'Mutation', addTemplate?: any | undefined };

export type GetTemplatesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetTemplatesQuery = { __typename?: 'Query', getTemplates?: any | undefined };

export type StripeCheckoutMutationVariables = Exact<{
  items: Scalars['Json'];
  websiteSlug: Scalars['String'];
  couponCode?: InputMaybe<Scalars['String']>;
  shippingId?: InputMaybe<Scalars['String']>;
  customerId: Scalars['String'];
}>;


export type StripeCheckoutMutation = { __typename?: 'Mutation', stripeCheckout?: any | undefined };

export type GetAdminSettingsQueryVariables = Exact<{
  admin: Scalars['String'];
  Admin?: InputMaybe<Scalars['String']>;
  Version: Scalars['String'];
}>;


export type GetAdminSettingsQuery = { __typename?: 'Query', getAdminSettings?: any | undefined };

export type GetUiTreeQueryVariables = Exact<{
  adminId: Scalars['String'];
}>;


export type GetUiTreeQuery = { __typename?: 'Query', getUiTree?: any | undefined };

export type StripeEnabledQueryVariables = Exact<{
  websiteSlug: Scalars['String'];
}>;


export type StripeEnabledQuery = { __typename?: 'Query', stripeEnabled?: boolean | undefined };

export type StripeAccountStatusQueryVariables = Exact<{ [key: string]: never; }>;


export type StripeAccountStatusQuery = { __typename?: 'Query', stripeAccountStatus?: any | undefined };

export type GetMetadataMutationVariables = Exact<{
  pageUrl: Scalars['String'];
}>;


export type GetMetadataMutation = { __typename?: 'Mutation', getMetadata?: any | undefined };

export type GetAnalyticsMutationVariables = Exact<{
  type: Scalars['String'];
  beginSec: Scalars['Int'];
  endSec: Scalars['Int'];
  wedsiteId: Scalars['String'];
  isRenew?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetAnalyticsMutation = { __typename?: 'Mutation', getAnalytics?: any | undefined };

export type ServerMintMutationVariables = Exact<{
  orderedProductId: Scalars['String'];
  walletAddress: Scalars['String'];
}>;


export type ServerMintMutation = { __typename?: 'Mutation', serverMint?: any | undefined };

export type InstallTemplateMutationVariables = Exact<{
  templateId: Scalars['String'];
  websiteId: Scalars['String'];
}>;


export type InstallTemplateMutation = { __typename?: 'Mutation', installTemplate?: { __typename?: 'Website', id: string } | undefined };

export type AdminMintNftMutationVariables = Exact<{
  orderId: Scalars['String'];
}>;


export type AdminMintNftMutation = { __typename?: 'Mutation', adminMintNft?: { __typename?: 'Order', id: string, amount?: number | undefined, applicationFee?: number | undefined } | undefined };

export type PayProductMutationVariables = Exact<{
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
  customerId: Scalars['String'];
  paymentAddress: Scalars['String'];
}>;


export type PayProductMutation = { __typename?: 'Mutation', payProduct?: { __typename?: 'Order', id: string, amount?: number | undefined, applicationFee?: number | undefined } | undefined };

export type PreparePurchaseMutationVariables = Exact<{
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
  customerId?: InputMaybe<Scalars['String']>;
  paymentAddress: Scalars['String'];
  quantity: Scalars['Int'];
  affiliateWalletAddress?: InputMaybe<Scalars['String']>;
}>;


export type PreparePurchaseMutation = { __typename?: 'Mutation', preparePurchase?: any | undefined };

export type FinishPurchaseMutationVariables = Exact<{
  orderId: Scalars['String'];
  transactionHash: Scalars['String'];
}>;


export type FinishPurchaseMutation = { __typename?: 'Mutation', finishPurchase?: any | undefined };

export type PrepareStripePurchaseMutationVariables = Exact<{
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
  customerId: Scalars['String'];
}>;


export type PrepareStripePurchaseMutation = { __typename?: 'Mutation', prepareStripePurchase?: any | undefined };

export type UpdateOrderMutationVariables = Exact<{
  orderId: Scalars['String'];
  transactionHash?: InputMaybe<Scalars['String']>;
}>;


export type UpdateOrderMutation = { __typename?: 'Mutation', updateOrder?: { __typename?: 'Order', id: string } | undefined };

export type PrepareRequestMutationVariables = Exact<{
  requestId: Scalars['String'];
}>;


export type PrepareRequestMutation = { __typename?: 'Mutation', prepareRequest?: any | undefined };

export const AffiliateFieldsFragmentDoc = gql`
    fragment AffiliateFields on Affiliate {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  customerId
  description
  id
  igId
  lineId
  name
  tgId
  url
  walletAddress
  websiteId
}
    `;
export const CustomerFieldsFragmentDoc = gql`
    fragment CustomerFields on Customer {
  createdAt
  deletedAt
  deleted
  updatedAt
  email
  id
  imageObj
  name
  note
  userId
  walletAddress
  websiteId
}
    `;
export const WebsiteFieldsFragmentDoc = gql`
    fragment WebsiteFields on Website {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  address
  adminFilters
  chain
  currencyCode
  description
  gasless
  hasLocation
  id
  imageObj
  isTemplate
  languageCode
  locationAddress
  locationLat
  locationLng
  logoObj
  menu
  name
  phone
  slug
  stripeAccountId
  themeColor
  userId
  walletAddress
}
    `;
export const AffiliateFragmentDoc = gql`
    fragment Affiliate on Affiliate {
  ...AffiliateFields
  customer {
    ...CustomerFields
  }
  website {
    ...WebsiteFields
  }
}
    ${AffiliateFieldsFragmentDoc}
${CustomerFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const AgendaFieldsFragmentDoc = gql`
    fragment AgendaFields on Agenda {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  endTime
  eventId
  id
  imageObj
  name
  startTime
}
    `;
export const EventFieldsFragmentDoc = gql`
    fragment EventFields on Event {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  chain
  commissionFee
  content
  contractAddress
  description
  endDate
  endTime
  eventEndTime
  eventStartTime
  externalNftChain
  externalNftContractAddress
  externalUrl
  gallery
  hasLocation
  id
  imageObj
  isExternalNft
  locationAddress
  locationLat
  locationLng
  maxOrderPerUser
  maxQuantity
  name
  payWithUSD
  price
  productType
  quantity
  quantitySold
  royaltyBps
  royaltyFee
  saleEnabled
  salePrice
  slug
  startDate
  startTime
  telegramApiToken
  telegramBotId
  transactionHash
  useCommission
  useExternalNft
  useMultipleDays
  useNft
  usePrice
  useQuantity
  useRoyalty
  useStartTime
  useUsd
  useVariations
  variationOptions
  variations
  websiteId
}
    `;
export const AgendaFragmentDoc = gql`
    fragment Agenda on Agenda {
  ...AgendaFields
  event {
    ...EventFields
  }
}
    ${AgendaFieldsFragmentDoc}
${EventFieldsFragmentDoc}`;
export const AttachmentFieldsFragmentDoc = gql`
    fragment AttachmentFields on Attachment {
  createdAt
  deletedAt
  deleted
  updatedAt
  attachmentObj
  attachmentType
  description
  eventId
  id
  imageObj
  name
  previewObj
  productId
  upload
  url
  userId
  websiteId
}
    `;
export const ProductFieldsFragmentDoc = gql`
    fragment ProductFields on Product {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  chain
  commissionFee
  content
  contractAddress
  description
  endTime
  eventEndTime
  eventStartTime
  externalNftChain
  externalNftContractAddress
  externalUrl
  gallery
  hasLocation
  id
  imageObj
  locationAddress
  locationLat
  locationLng
  maxQuantity
  name
  price
  productType
  prodyctType
  quantity
  quantitySold
  royaltyFee
  salePrice
  slug
  startTime
  transactionHash
  useCommission
  useExternalNft
  useNft
  useQuantity
  useRoyalty
  useStartTime
  useUsd
  useVariations
  variationOptions
  variations
  websiteId
}
    `;
export const UserFieldsFragmentDoc = gql`
    fragment UserFields on User {
  adminFilters
  createdAt
  deletedAt
  deleted
  updatedAt
  email
  id
  imageObj
  name
  password
  stripeAccountId
  stripeCustomerId
  telegramUserId
}
    `;
export const AttachmentFragmentDoc = gql`
    fragment Attachment on Attachment {
  ...AttachmentFields
  event {
    ...EventFields
  }
  product {
    ...ProductFields
  }
  user {
    ...UserFields
  }
  website {
    ...WebsiteFields
  }
}
    ${AttachmentFieldsFragmentDoc}
${EventFieldsFragmentDoc}
${ProductFieldsFragmentDoc}
${UserFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const AttributeFieldsFragmentDoc = gql`
    fragment AttributeFields on Attribute {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  name
  slug
  values
  websiteId
}
    `;
export const AttributeFragmentDoc = gql`
    fragment Attribute on Attribute {
  ...AttributeFields
  website {
    ...WebsiteFields
  }
}
    ${AttributeFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const AudioFieldsFragmentDoc = gql`
    fragment AudioFields on Audio {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  audioObj
  audioPreviewObj
  content
  description
  externalUrl
  id
  imageObj
  isExternalLink
  isIndex
  menu
  name
  navColor
  password
  slug
  websiteId
}
    `;
export const AudioFragmentDoc = gql`
    fragment Audio on Audio {
  ...AudioFields
  website {
    ...WebsiteFields
  }
}
    ${AudioFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const AudioCollectionFieldsFragmentDoc = gql`
    fragment AudioCollectionFields on AudioCollection {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const AudioCollectionFragmentDoc = gql`
    fragment AudioCollection on AudioCollection {
  ...AudioCollectionFields
  website {
    ...WebsiteFields
  }
}
    ${AudioCollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const AudioViewFieldsFragmentDoc = gql`
    fragment AudioViewFields on AudioView {
  createdAt
  deletedAt
  deleted
  updatedAt
  audioId
  id
  ip
}
    `;
export const AudioViewFragmentDoc = gql`
    fragment AudioView on AudioView {
  ...AudioViewFields
  audio {
    ...AudioFields
  }
}
    ${AudioViewFieldsFragmentDoc}
${AudioFieldsFragmentDoc}`;
export const CouponFieldsFragmentDoc = gql`
    fragment CouponFields on Coupon {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  amountOff
  couponType
  description
  expiredAt
  id
  name
  percentOff
  quantity
  slug
  startAt
  websiteId
}
    `;
export const CouponFragmentDoc = gql`
    fragment Coupon on Coupon {
  ...CouponFields
  website {
    ...WebsiteFields
  }
}
    ${CouponFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const CustomerFragmentDoc = gql`
    fragment Customer on Customer {
  ...CustomerFields
  affiliate {
    ...AffiliateFields
  }
  user {
    ...UserFields
  }
  website {
    ...WebsiteFields
  }
}
    ${CustomerFieldsFragmentDoc}
${AffiliateFieldsFragmentDoc}
${UserFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const EventFragmentDoc = gql`
    fragment Event on Event {
  ...EventFields
  website {
    ...WebsiteFields
  }
}
    ${EventFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const EventCollectionFieldsFragmentDoc = gql`
    fragment EventCollectionFields on EventCollection {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const EventCollectionFragmentDoc = gql`
    fragment EventCollection on EventCollection {
  ...EventCollectionFields
  website {
    ...WebsiteFields
  }
}
    ${EventCollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const EventGroupFieldsFragmentDoc = gql`
    fragment EventGroupFields on EventGroup {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  id
  name
  organizationId
  websiteId
}
    `;
export const OrganizationFieldsFragmentDoc = gql`
    fragment OrganizationFields on Organization {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  id
  logoObj
  name
  slug
  telegramApiToken
  telegramBotId
  userId
  walletAddress
}
    `;
export const EventGroupFragmentDoc = gql`
    fragment EventGroup on EventGroup {
  ...EventGroupFields
  organization {
    ...OrganizationFields
  }
  website {
    ...WebsiteFields
  }
}
    ${EventGroupFieldsFragmentDoc}
${OrganizationFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const LoginTokenFieldsFragmentDoc = gql`
    fragment LoginTokenFields on LoginToken {
  createdAt
  deletedAt
  deleted
  updatedAt
  approved
  domain
  email
  expires
  geo
  id
  ip
  secret
  userAgent
  userAgentRaw
  userId
}
    `;
export const LoginTokenFragmentDoc = gql`
    fragment LoginToken on LoginToken {
  ...LoginTokenFields
  user {
    ...UserFields
  }
}
    ${LoginTokenFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const MarketingLocationFieldsFragmentDoc = gql`
    fragment MarketingLocationFields on MarketingLocation {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  id
  imageObj
  locationAddress
  locationLat
  locationLng
  name
  websiteId
}
    `;
export const MarketingLocationFragmentDoc = gql`
    fragment MarketingLocation on MarketingLocation {
  ...MarketingLocationFields
  website {
    ...WebsiteFields
  }
}
    ${MarketingLocationFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const NotificationFieldsFragmentDoc = gql`
    fragment NotificationFields on Notification {
  createdAt
  deletedAt
  deleted
  updatedAt
  action
  description
  id
  isUnRead
  message
  model
  modelId
  title
  url
  userId
  websiteId
}
    `;
export const NotificationFragmentDoc = gql`
    fragment Notification on Notification {
  ...NotificationFields
  user {
    ...UserFields
  }
  website {
    ...WebsiteFields
  }
}
    ${NotificationFieldsFragmentDoc}
${UserFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const OrderFieldsFragmentDoc = gql`
    fragment OrderFields on Order {
  createdAt
  deletedAt
  deleted
  updatedAt
  affiliateFee
  affiliateWalletAddress
  affiliateWebsiteSlug
  amount
  applicationFee
  completed
  couponId
  currencyCode
  customerId
  discount
  id
  isAirdrop
  paid
  paymentType
  stripeFee
  total
  transactionHash
  walletAddress
  websiteId
}
    `;
export const OrderFragmentDoc = gql`
    fragment Order on Order {
  ...OrderFields
  coupon {
    ...CouponFields
  }
  customer {
    ...CustomerFields
  }
  website {
    ...WebsiteFields
  }
}
    ${OrderFieldsFragmentDoc}
${CouponFieldsFragmentDoc}
${CustomerFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const OrderedProductFieldsFragmentDoc = gql`
    fragment OrderedProductFields on OrderedProduct {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  eventId
  id
  imageObj
  minted
  name
  orderId
  price
  productId
  productSlug
  productType
  productUrl
  quantity
  redeemedQuantity
  slug
  tokenId
  total
  transactionHash
  variationId
  variationName
  variationOption
  walletAddress
}
    `;
export const OrderedProductFragmentDoc = gql`
    fragment OrderedProduct on OrderedProduct {
  ...OrderedProductFields
  event {
    ...EventFields
  }
  order {
    ...OrderFields
  }
  product {
    ...ProductFields
  }
}
    ${OrderedProductFieldsFragmentDoc}
${EventFieldsFragmentDoc}
${OrderFieldsFragmentDoc}
${ProductFieldsFragmentDoc}`;
export const OrganizationFragmentDoc = gql`
    fragment Organization on Organization {
  ...OrganizationFields
  user {
    ...UserFields
  }
}
    ${OrganizationFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const PageFieldsFragmentDoc = gql`
    fragment PageFields on Page {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  content
  description
  externalUrl
  id
  imageObj
  isExternalLink
  isIndex
  menu
  name
  navColor
  password
  slug
  websiteId
}
    `;
export const PageFragmentDoc = gql`
    fragment Page on Page {
  ...PageFields
  website {
    ...WebsiteFields
  }
}
    ${PageFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const PageCollectionFieldsFragmentDoc = gql`
    fragment PageCollectionFields on PageCollection {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const PageCollectionFragmentDoc = gql`
    fragment PageCollection on PageCollection {
  ...PageCollectionFields
  website {
    ...WebsiteFields
  }
}
    ${PageCollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const PageViewFieldsFragmentDoc = gql`
    fragment PageViewFields on PageView {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  ip
  pageId
}
    `;
export const PageViewFragmentDoc = gql`
    fragment PageView on PageView {
  ...PageViewFields
  page {
    ...PageFields
  }
}
    ${PageViewFieldsFragmentDoc}
${PageFieldsFragmentDoc}`;
export const ProductFragmentDoc = gql`
    fragment Product on Product {
  ...ProductFields
  website {
    ...WebsiteFields
  }
}
    ${ProductFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const ProductCollectionFieldsFragmentDoc = gql`
    fragment ProductCollectionFields on ProductCollection {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const ProductCollectionFragmentDoc = gql`
    fragment ProductCollection on ProductCollection {
  ...ProductCollectionFields
  website {
    ...WebsiteFields
  }
}
    ${ProductCollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const ProductGroupFieldsFragmentDoc = gql`
    fragment ProductGroupFields on ProductGroup {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  name
  organizationId
  websiteId
}
    `;
export const ProductGroupFragmentDoc = gql`
    fragment ProductGroup on ProductGroup {
  ...ProductGroupFields
  organization {
    ...OrganizationFields
  }
  website {
    ...WebsiteFields
  }
}
    ${ProductGroupFieldsFragmentDoc}
${OrganizationFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const RefreshTokenFieldsFragmentDoc = gql`
    fragment RefreshTokenFields on RefreshToken {
  createdAt
  deletedAt
  deleted
  updatedAt
  expires
  geo
  ip
  lastActive
  loginTokenId
  userAgent
  userAgentRaw
  userId
  value
}
    `;
export const RefreshTokenFragmentDoc = gql`
    fragment RefreshToken on RefreshToken {
  ...RefreshTokenFields
  user {
    ...UserFields
  }
}
    ${RefreshTokenFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const RequestFieldsFragmentDoc = gql`
    fragment RequestFields on Request {
  createdAt
  deletedAt
  deleted
  updatedAt
  accept
  acceptBefore
  active
  applicationFee
  audioId
  chain
  currencyCode
  customerId
  days
  description
  expiredAt
  id
  imageObj
  message
  name
  pageId
  paid
  paidAt
  paymentId
  paymentType
  price
  requestStatus
  stripeFee
  subject
  total
  transactionHash
  url
  useUsd
  videoId
  walletAddress
}
    `;
export const VideoFieldsFragmentDoc = gql`
    fragment VideoFields on Video {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  content
  description
  externalUrl
  id
  imageObj
  isExternalLink
  isIndex
  isYoutube
  menu
  name
  navColor
  password
  slug
  videoObj
  videoPreviewObj
  websiteId
}
    `;
export const RequestFragmentDoc = gql`
    fragment Request on Request {
  ...RequestFields
  audio {
    ...AudioFields
  }
  customer {
    ...CustomerFields
  }
  page {
    ...PageFields
  }
  video {
    ...VideoFields
  }
}
    ${RequestFieldsFragmentDoc}
${AudioFieldsFragmentDoc}
${CustomerFieldsFragmentDoc}
${PageFieldsFragmentDoc}
${VideoFieldsFragmentDoc}`;
export const RequestClickFieldsFragmentDoc = gql`
    fragment RequestClickFields on RequestClick {
  createdAt
  deletedAt
  deleted
  updatedAt
  audioId
  id
  ip
  pageId
  requestId
  videoId
}
    `;
export const RequestClickFragmentDoc = gql`
    fragment RequestClick on RequestClick {
  ...RequestClickFields
  audio {
    ...AudioFields
  }
  page {
    ...PageFields
  }
  request {
    ...RequestFields
  }
  video {
    ...VideoFields
  }
}
    ${RequestClickFieldsFragmentDoc}
${AudioFieldsFragmentDoc}
${PageFieldsFragmentDoc}
${RequestFieldsFragmentDoc}
${VideoFieldsFragmentDoc}`;
export const SlugCounterFieldsFragmentDoc = gql`
    fragment SlugCounterFields on SlugCounter {
  counter
  createdAt
  deleted
  deletedAt
  id
  model
  slug
  title
  updatedAt
}
    `;
export const SlugCounterFragmentDoc = gql`
    fragment SlugCounter on SlugCounter {
  ...SlugCounterFields
}
    ${SlugCounterFieldsFragmentDoc}`;
export const SpeakerFieldsFragmentDoc = gql`
    fragment SpeakerFields on Speaker {
  createdAt
  deletedAt
  deleted
  updatedAt
  agendaId
  description
  eventId
  id
  imageObj
  name
}
    `;
export const SpeakerFragmentDoc = gql`
    fragment Speaker on Speaker {
  ...SpeakerFields
  agenda {
    ...AgendaFields
  }
  event {
    ...EventFields
  }
}
    ${SpeakerFieldsFragmentDoc}
${AgendaFieldsFragmentDoc}
${EventFieldsFragmentDoc}`;
export const UserFragmentDoc = gql`
    fragment User on User {
  ...UserFields
}
    ${UserFieldsFragmentDoc}`;
export const VideoFragmentDoc = gql`
    fragment Video on Video {
  ...VideoFields
  website {
    ...WebsiteFields
  }
}
    ${VideoFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const VideoCollectionFieldsFragmentDoc = gql`
    fragment VideoCollectionFields on VideoCollection {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const VideoCollectionFragmentDoc = gql`
    fragment VideoCollection on VideoCollection {
  ...VideoCollectionFields
  website {
    ...WebsiteFields
  }
}
    ${VideoCollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const VideoViewFieldsFragmentDoc = gql`
    fragment VideoViewFields on VideoView {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  ip
  videoId
}
    `;
export const VideoViewFragmentDoc = gql`
    fragment VideoView on VideoView {
  ...VideoViewFields
  video {
    ...VideoFields
  }
}
    ${VideoViewFieldsFragmentDoc}
${VideoFieldsFragmentDoc}`;
export const WebsiteFragmentDoc = gql`
    fragment Website on Website {
  ...WebsiteFields
  user {
    ...UserFields
  }
}
    ${WebsiteFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const WebsiteGroupFieldsFragmentDoc = gql`
    fragment WebsiteGroupFields on WebsiteGroup {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  name
  organizationId
}
    `;
export const WebsiteGroupFragmentDoc = gql`
    fragment WebsiteGroup on WebsiteGroup {
  ...WebsiteGroupFields
  organization {
    ...OrganizationFields
  }
}
    ${WebsiteGroupFieldsFragmentDoc}
${OrganizationFieldsFragmentDoc}`;
export const FindUniqueAffiliateDocument = gql`
    query findUniqueAffiliate($where: AffiliateWhereUniqueInput!) {
  findUniqueAffiliate(where: $where) {
    ...Affiliate
  }
}
    ${AffiliateFragmentDoc}`;

/**
 * __useFindUniqueAffiliateQuery__
 *
 * To run a query within a React component, call `useFindUniqueAffiliateQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAffiliateQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAffiliateQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAffiliateQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAffiliateQuery, FindUniqueAffiliateQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAffiliateQuery, FindUniqueAffiliateQueryVariables>(FindUniqueAffiliateDocument, options);
      }
export function useFindUniqueAffiliateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAffiliateQuery, FindUniqueAffiliateQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAffiliateQuery, FindUniqueAffiliateQueryVariables>(FindUniqueAffiliateDocument, options);
        }
export type FindUniqueAffiliateQueryHookResult = ReturnType<typeof useFindUniqueAffiliateQuery>;
export type FindUniqueAffiliateLazyQueryHookResult = ReturnType<typeof useFindUniqueAffiliateLazyQuery>;
export type FindUniqueAffiliateQueryResult = Apollo.QueryResult<FindUniqueAffiliateQuery, FindUniqueAffiliateQueryVariables>;
export const FindManyAffiliateDocument = gql`
    query findManyAffiliate($where: AffiliateWhereInput, $orderBy: [AffiliateOrderByWithRelationInput!], $cursor: AffiliateWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAffiliate(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Affiliate
  }
}
    ${AffiliateFragmentDoc}`;

/**
 * __useFindManyAffiliateQuery__
 *
 * To run a query within a React component, call `useFindManyAffiliateQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAffiliateQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAffiliateQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAffiliateQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAffiliateQuery, FindManyAffiliateQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAffiliateQuery, FindManyAffiliateQueryVariables>(FindManyAffiliateDocument, options);
      }
export function useFindManyAffiliateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAffiliateQuery, FindManyAffiliateQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAffiliateQuery, FindManyAffiliateQueryVariables>(FindManyAffiliateDocument, options);
        }
export type FindManyAffiliateQueryHookResult = ReturnType<typeof useFindManyAffiliateQuery>;
export type FindManyAffiliateLazyQueryHookResult = ReturnType<typeof useFindManyAffiliateLazyQuery>;
export type FindManyAffiliateQueryResult = Apollo.QueryResult<FindManyAffiliateQuery, FindManyAffiliateQueryVariables>;
export const FindManyAffiliateCountDocument = gql`
    query findManyAffiliateCount($where: AffiliateWhereInput, $orderBy: [AffiliateOrderByWithRelationInput!], $cursor: AffiliateWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAffiliateCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyAffiliateCountQuery__
 *
 * To run a query within a React component, call `useFindManyAffiliateCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAffiliateCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAffiliateCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAffiliateCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAffiliateCountQuery, FindManyAffiliateCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAffiliateCountQuery, FindManyAffiliateCountQueryVariables>(FindManyAffiliateCountDocument, options);
      }
export function useFindManyAffiliateCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAffiliateCountQuery, FindManyAffiliateCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAffiliateCountQuery, FindManyAffiliateCountQueryVariables>(FindManyAffiliateCountDocument, options);
        }
export type FindManyAffiliateCountQueryHookResult = ReturnType<typeof useFindManyAffiliateCountQuery>;
export type FindManyAffiliateCountLazyQueryHookResult = ReturnType<typeof useFindManyAffiliateCountLazyQuery>;
export type FindManyAffiliateCountQueryResult = Apollo.QueryResult<FindManyAffiliateCountQuery, FindManyAffiliateCountQueryVariables>;
export const CreateOneAffiliateDocument = gql`
    mutation createOneAffiliate($data: AffiliateCreateInput!) {
  createOneAffiliate(data: $data) {
    ...Affiliate
  }
}
    ${AffiliateFragmentDoc}`;

/**
 * __useCreateOneAffiliateMutation__
 *
 * To run a mutation, you first call `useCreateOneAffiliateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAffiliateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAffiliateMutation, { data, loading, error }] = useCreateOneAffiliateMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAffiliateMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAffiliateMutation, CreateOneAffiliateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAffiliateMutation, CreateOneAffiliateMutationVariables>(CreateOneAffiliateDocument, options);
      }
export type CreateOneAffiliateMutationHookResult = ReturnType<typeof useCreateOneAffiliateMutation>;
export type CreateOneAffiliateMutationResult = Apollo.MutationResult<CreateOneAffiliateMutation>;
export type CreateOneAffiliateMutationOptions = Apollo.BaseMutationOptions<CreateOneAffiliateMutation, CreateOneAffiliateMutationVariables>;
export const UpdateOneAffiliateDocument = gql`
    mutation updateOneAffiliate($where: AffiliateWhereUniqueInput!, $data: AffiliateUpdateInput!) {
  updateOneAffiliate(where: $where, data: $data) {
    ...Affiliate
  }
}
    ${AffiliateFragmentDoc}`;

/**
 * __useUpdateOneAffiliateMutation__
 *
 * To run a mutation, you first call `useUpdateOneAffiliateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAffiliateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAffiliateMutation, { data, loading, error }] = useUpdateOneAffiliateMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAffiliateMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAffiliateMutation, UpdateOneAffiliateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAffiliateMutation, UpdateOneAffiliateMutationVariables>(UpdateOneAffiliateDocument, options);
      }
export type UpdateOneAffiliateMutationHookResult = ReturnType<typeof useUpdateOneAffiliateMutation>;
export type UpdateOneAffiliateMutationResult = Apollo.MutationResult<UpdateOneAffiliateMutation>;
export type UpdateOneAffiliateMutationOptions = Apollo.BaseMutationOptions<UpdateOneAffiliateMutation, UpdateOneAffiliateMutationVariables>;
export const DeleteOneAffiliateDocument = gql`
    mutation deleteOneAffiliate($where: AffiliateWhereUniqueInput!) {
  deleteOneAffiliate(where: $where) {
    ...Affiliate
  }
}
    ${AffiliateFragmentDoc}`;

/**
 * __useDeleteOneAffiliateMutation__
 *
 * To run a mutation, you first call `useDeleteOneAffiliateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAffiliateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAffiliateMutation, { data, loading, error }] = useDeleteOneAffiliateMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAffiliateMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAffiliateMutation, DeleteOneAffiliateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAffiliateMutation, DeleteOneAffiliateMutationVariables>(DeleteOneAffiliateDocument, options);
      }
export type DeleteOneAffiliateMutationHookResult = ReturnType<typeof useDeleteOneAffiliateMutation>;
export type DeleteOneAffiliateMutationResult = Apollo.MutationResult<DeleteOneAffiliateMutation>;
export type DeleteOneAffiliateMutationOptions = Apollo.BaseMutationOptions<DeleteOneAffiliateMutation, DeleteOneAffiliateMutationVariables>;
export const DeleteManyAffiliateDocument = gql`
    mutation deleteManyAffiliate($where: AffiliateWhereInput) {
  deleteManyAffiliate(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAffiliateMutation__
 *
 * To run a mutation, you first call `useDeleteManyAffiliateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAffiliateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAffiliateMutation, { data, loading, error }] = useDeleteManyAffiliateMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAffiliateMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAffiliateMutation, DeleteManyAffiliateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAffiliateMutation, DeleteManyAffiliateMutationVariables>(DeleteManyAffiliateDocument, options);
      }
export type DeleteManyAffiliateMutationHookResult = ReturnType<typeof useDeleteManyAffiliateMutation>;
export type DeleteManyAffiliateMutationResult = Apollo.MutationResult<DeleteManyAffiliateMutation>;
export type DeleteManyAffiliateMutationOptions = Apollo.BaseMutationOptions<DeleteManyAffiliateMutation, DeleteManyAffiliateMutationVariables>;
export const UpdateManyAffiliateDocument = gql`
    mutation updateManyAffiliate($where: AffiliateWhereInput, $data: AffiliateUpdateManyMutationInput!) {
  updateManyAffiliate(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAffiliateMutation__
 *
 * To run a mutation, you first call `useUpdateManyAffiliateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAffiliateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAffiliateMutation, { data, loading, error }] = useUpdateManyAffiliateMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAffiliateMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAffiliateMutation, UpdateManyAffiliateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAffiliateMutation, UpdateManyAffiliateMutationVariables>(UpdateManyAffiliateDocument, options);
      }
export type UpdateManyAffiliateMutationHookResult = ReturnType<typeof useUpdateManyAffiliateMutation>;
export type UpdateManyAffiliateMutationResult = Apollo.MutationResult<UpdateManyAffiliateMutation>;
export type UpdateManyAffiliateMutationOptions = Apollo.BaseMutationOptions<UpdateManyAffiliateMutation, UpdateManyAffiliateMutationVariables>;
export const FindUniqueAgendaDocument = gql`
    query findUniqueAgenda($where: AgendaWhereUniqueInput!) {
  findUniqueAgenda(where: $where) {
    ...Agenda
  }
}
    ${AgendaFragmentDoc}`;

/**
 * __useFindUniqueAgendaQuery__
 *
 * To run a query within a React component, call `useFindUniqueAgendaQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAgendaQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAgendaQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAgendaQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAgendaQuery, FindUniqueAgendaQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAgendaQuery, FindUniqueAgendaQueryVariables>(FindUniqueAgendaDocument, options);
      }
export function useFindUniqueAgendaLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAgendaQuery, FindUniqueAgendaQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAgendaQuery, FindUniqueAgendaQueryVariables>(FindUniqueAgendaDocument, options);
        }
export type FindUniqueAgendaQueryHookResult = ReturnType<typeof useFindUniqueAgendaQuery>;
export type FindUniqueAgendaLazyQueryHookResult = ReturnType<typeof useFindUniqueAgendaLazyQuery>;
export type FindUniqueAgendaQueryResult = Apollo.QueryResult<FindUniqueAgendaQuery, FindUniqueAgendaQueryVariables>;
export const FindManyAgendaDocument = gql`
    query findManyAgenda($where: AgendaWhereInput, $orderBy: [AgendaOrderByWithRelationInput!], $cursor: AgendaWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAgenda(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Agenda
  }
}
    ${AgendaFragmentDoc}`;

/**
 * __useFindManyAgendaQuery__
 *
 * To run a query within a React component, call `useFindManyAgendaQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAgendaQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAgendaQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAgendaQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAgendaQuery, FindManyAgendaQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAgendaQuery, FindManyAgendaQueryVariables>(FindManyAgendaDocument, options);
      }
export function useFindManyAgendaLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAgendaQuery, FindManyAgendaQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAgendaQuery, FindManyAgendaQueryVariables>(FindManyAgendaDocument, options);
        }
export type FindManyAgendaQueryHookResult = ReturnType<typeof useFindManyAgendaQuery>;
export type FindManyAgendaLazyQueryHookResult = ReturnType<typeof useFindManyAgendaLazyQuery>;
export type FindManyAgendaQueryResult = Apollo.QueryResult<FindManyAgendaQuery, FindManyAgendaQueryVariables>;
export const FindManyAgendaCountDocument = gql`
    query findManyAgendaCount($where: AgendaWhereInput, $orderBy: [AgendaOrderByWithRelationInput!], $cursor: AgendaWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAgendaCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyAgendaCountQuery__
 *
 * To run a query within a React component, call `useFindManyAgendaCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAgendaCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAgendaCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAgendaCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAgendaCountQuery, FindManyAgendaCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAgendaCountQuery, FindManyAgendaCountQueryVariables>(FindManyAgendaCountDocument, options);
      }
export function useFindManyAgendaCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAgendaCountQuery, FindManyAgendaCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAgendaCountQuery, FindManyAgendaCountQueryVariables>(FindManyAgendaCountDocument, options);
        }
export type FindManyAgendaCountQueryHookResult = ReturnType<typeof useFindManyAgendaCountQuery>;
export type FindManyAgendaCountLazyQueryHookResult = ReturnType<typeof useFindManyAgendaCountLazyQuery>;
export type FindManyAgendaCountQueryResult = Apollo.QueryResult<FindManyAgendaCountQuery, FindManyAgendaCountQueryVariables>;
export const CreateOneAgendaDocument = gql`
    mutation createOneAgenda($data: AgendaCreateInput!) {
  createOneAgenda(data: $data) {
    ...Agenda
  }
}
    ${AgendaFragmentDoc}`;

/**
 * __useCreateOneAgendaMutation__
 *
 * To run a mutation, you first call `useCreateOneAgendaMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAgendaMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAgendaMutation, { data, loading, error }] = useCreateOneAgendaMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAgendaMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAgendaMutation, CreateOneAgendaMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAgendaMutation, CreateOneAgendaMutationVariables>(CreateOneAgendaDocument, options);
      }
export type CreateOneAgendaMutationHookResult = ReturnType<typeof useCreateOneAgendaMutation>;
export type CreateOneAgendaMutationResult = Apollo.MutationResult<CreateOneAgendaMutation>;
export type CreateOneAgendaMutationOptions = Apollo.BaseMutationOptions<CreateOneAgendaMutation, CreateOneAgendaMutationVariables>;
export const UpdateOneAgendaDocument = gql`
    mutation updateOneAgenda($where: AgendaWhereUniqueInput!, $data: AgendaUpdateInput!) {
  updateOneAgenda(where: $where, data: $data) {
    ...Agenda
  }
}
    ${AgendaFragmentDoc}`;

/**
 * __useUpdateOneAgendaMutation__
 *
 * To run a mutation, you first call `useUpdateOneAgendaMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAgendaMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAgendaMutation, { data, loading, error }] = useUpdateOneAgendaMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAgendaMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAgendaMutation, UpdateOneAgendaMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAgendaMutation, UpdateOneAgendaMutationVariables>(UpdateOneAgendaDocument, options);
      }
export type UpdateOneAgendaMutationHookResult = ReturnType<typeof useUpdateOneAgendaMutation>;
export type UpdateOneAgendaMutationResult = Apollo.MutationResult<UpdateOneAgendaMutation>;
export type UpdateOneAgendaMutationOptions = Apollo.BaseMutationOptions<UpdateOneAgendaMutation, UpdateOneAgendaMutationVariables>;
export const DeleteOneAgendaDocument = gql`
    mutation deleteOneAgenda($where: AgendaWhereUniqueInput!) {
  deleteOneAgenda(where: $where) {
    ...Agenda
  }
}
    ${AgendaFragmentDoc}`;

/**
 * __useDeleteOneAgendaMutation__
 *
 * To run a mutation, you first call `useDeleteOneAgendaMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAgendaMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAgendaMutation, { data, loading, error }] = useDeleteOneAgendaMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAgendaMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAgendaMutation, DeleteOneAgendaMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAgendaMutation, DeleteOneAgendaMutationVariables>(DeleteOneAgendaDocument, options);
      }
export type DeleteOneAgendaMutationHookResult = ReturnType<typeof useDeleteOneAgendaMutation>;
export type DeleteOneAgendaMutationResult = Apollo.MutationResult<DeleteOneAgendaMutation>;
export type DeleteOneAgendaMutationOptions = Apollo.BaseMutationOptions<DeleteOneAgendaMutation, DeleteOneAgendaMutationVariables>;
export const DeleteManyAgendaDocument = gql`
    mutation deleteManyAgenda($where: AgendaWhereInput) {
  deleteManyAgenda(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAgendaMutation__
 *
 * To run a mutation, you first call `useDeleteManyAgendaMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAgendaMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAgendaMutation, { data, loading, error }] = useDeleteManyAgendaMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAgendaMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAgendaMutation, DeleteManyAgendaMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAgendaMutation, DeleteManyAgendaMutationVariables>(DeleteManyAgendaDocument, options);
      }
export type DeleteManyAgendaMutationHookResult = ReturnType<typeof useDeleteManyAgendaMutation>;
export type DeleteManyAgendaMutationResult = Apollo.MutationResult<DeleteManyAgendaMutation>;
export type DeleteManyAgendaMutationOptions = Apollo.BaseMutationOptions<DeleteManyAgendaMutation, DeleteManyAgendaMutationVariables>;
export const UpdateManyAgendaDocument = gql`
    mutation updateManyAgenda($where: AgendaWhereInput, $data: AgendaUpdateManyMutationInput!) {
  updateManyAgenda(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAgendaMutation__
 *
 * To run a mutation, you first call `useUpdateManyAgendaMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAgendaMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAgendaMutation, { data, loading, error }] = useUpdateManyAgendaMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAgendaMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAgendaMutation, UpdateManyAgendaMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAgendaMutation, UpdateManyAgendaMutationVariables>(UpdateManyAgendaDocument, options);
      }
export type UpdateManyAgendaMutationHookResult = ReturnType<typeof useUpdateManyAgendaMutation>;
export type UpdateManyAgendaMutationResult = Apollo.MutationResult<UpdateManyAgendaMutation>;
export type UpdateManyAgendaMutationOptions = Apollo.BaseMutationOptions<UpdateManyAgendaMutation, UpdateManyAgendaMutationVariables>;
export const FindUniqueAttachmentDocument = gql`
    query findUniqueAttachment($where: AttachmentWhereUniqueInput!) {
  findUniqueAttachment(where: $where) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useFindUniqueAttachmentQuery__
 *
 * To run a query within a React component, call `useFindUniqueAttachmentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAttachmentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAttachmentQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAttachmentQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>(FindUniqueAttachmentDocument, options);
      }
export function useFindUniqueAttachmentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>(FindUniqueAttachmentDocument, options);
        }
export type FindUniqueAttachmentQueryHookResult = ReturnType<typeof useFindUniqueAttachmentQuery>;
export type FindUniqueAttachmentLazyQueryHookResult = ReturnType<typeof useFindUniqueAttachmentLazyQuery>;
export type FindUniqueAttachmentQueryResult = Apollo.QueryResult<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>;
export const FindManyAttachmentDocument = gql`
    query findManyAttachment($where: AttachmentWhereInput, $orderBy: [AttachmentOrderByWithRelationInput!], $cursor: AttachmentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttachment(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useFindManyAttachmentQuery__
 *
 * To run a query within a React component, call `useFindManyAttachmentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttachmentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttachmentQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttachmentQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>(FindManyAttachmentDocument, options);
      }
export function useFindManyAttachmentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>(FindManyAttachmentDocument, options);
        }
export type FindManyAttachmentQueryHookResult = ReturnType<typeof useFindManyAttachmentQuery>;
export type FindManyAttachmentLazyQueryHookResult = ReturnType<typeof useFindManyAttachmentLazyQuery>;
export type FindManyAttachmentQueryResult = Apollo.QueryResult<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>;
export const FindManyAttachmentCountDocument = gql`
    query findManyAttachmentCount($where: AttachmentWhereInput, $orderBy: [AttachmentOrderByWithRelationInput!], $cursor: AttachmentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttachmentCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyAttachmentCountQuery__
 *
 * To run a query within a React component, call `useFindManyAttachmentCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttachmentCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttachmentCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttachmentCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>(FindManyAttachmentCountDocument, options);
      }
export function useFindManyAttachmentCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>(FindManyAttachmentCountDocument, options);
        }
export type FindManyAttachmentCountQueryHookResult = ReturnType<typeof useFindManyAttachmentCountQuery>;
export type FindManyAttachmentCountLazyQueryHookResult = ReturnType<typeof useFindManyAttachmentCountLazyQuery>;
export type FindManyAttachmentCountQueryResult = Apollo.QueryResult<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>;
export const CreateOneAttachmentDocument = gql`
    mutation createOneAttachment($data: AttachmentCreateInput!) {
  createOneAttachment(data: $data) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useCreateOneAttachmentMutation__
 *
 * To run a mutation, you first call `useCreateOneAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAttachmentMutation, { data, loading, error }] = useCreateOneAttachmentMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAttachmentMutation, CreateOneAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAttachmentMutation, CreateOneAttachmentMutationVariables>(CreateOneAttachmentDocument, options);
      }
export type CreateOneAttachmentMutationHookResult = ReturnType<typeof useCreateOneAttachmentMutation>;
export type CreateOneAttachmentMutationResult = Apollo.MutationResult<CreateOneAttachmentMutation>;
export type CreateOneAttachmentMutationOptions = Apollo.BaseMutationOptions<CreateOneAttachmentMutation, CreateOneAttachmentMutationVariables>;
export const UpdateOneAttachmentDocument = gql`
    mutation updateOneAttachment($where: AttachmentWhereUniqueInput!, $data: AttachmentUpdateInput!) {
  updateOneAttachment(where: $where, data: $data) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useUpdateOneAttachmentMutation__
 *
 * To run a mutation, you first call `useUpdateOneAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAttachmentMutation, { data, loading, error }] = useUpdateOneAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAttachmentMutation, UpdateOneAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAttachmentMutation, UpdateOneAttachmentMutationVariables>(UpdateOneAttachmentDocument, options);
      }
export type UpdateOneAttachmentMutationHookResult = ReturnType<typeof useUpdateOneAttachmentMutation>;
export type UpdateOneAttachmentMutationResult = Apollo.MutationResult<UpdateOneAttachmentMutation>;
export type UpdateOneAttachmentMutationOptions = Apollo.BaseMutationOptions<UpdateOneAttachmentMutation, UpdateOneAttachmentMutationVariables>;
export const DeleteOneAttachmentDocument = gql`
    mutation deleteOneAttachment($where: AttachmentWhereUniqueInput!) {
  deleteOneAttachment(where: $where) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useDeleteOneAttachmentMutation__
 *
 * To run a mutation, you first call `useDeleteOneAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAttachmentMutation, { data, loading, error }] = useDeleteOneAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAttachmentMutation, DeleteOneAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAttachmentMutation, DeleteOneAttachmentMutationVariables>(DeleteOneAttachmentDocument, options);
      }
export type DeleteOneAttachmentMutationHookResult = ReturnType<typeof useDeleteOneAttachmentMutation>;
export type DeleteOneAttachmentMutationResult = Apollo.MutationResult<DeleteOneAttachmentMutation>;
export type DeleteOneAttachmentMutationOptions = Apollo.BaseMutationOptions<DeleteOneAttachmentMutation, DeleteOneAttachmentMutationVariables>;
export const DeleteManyAttachmentDocument = gql`
    mutation deleteManyAttachment($where: AttachmentWhereInput) {
  deleteManyAttachment(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAttachmentMutation__
 *
 * To run a mutation, you first call `useDeleteManyAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAttachmentMutation, { data, loading, error }] = useDeleteManyAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAttachmentMutation, DeleteManyAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAttachmentMutation, DeleteManyAttachmentMutationVariables>(DeleteManyAttachmentDocument, options);
      }
export type DeleteManyAttachmentMutationHookResult = ReturnType<typeof useDeleteManyAttachmentMutation>;
export type DeleteManyAttachmentMutationResult = Apollo.MutationResult<DeleteManyAttachmentMutation>;
export type DeleteManyAttachmentMutationOptions = Apollo.BaseMutationOptions<DeleteManyAttachmentMutation, DeleteManyAttachmentMutationVariables>;
export const UpdateManyAttachmentDocument = gql`
    mutation updateManyAttachment($where: AttachmentWhereInput, $data: AttachmentUpdateManyMutationInput!) {
  updateManyAttachment(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAttachmentMutation__
 *
 * To run a mutation, you first call `useUpdateManyAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAttachmentMutation, { data, loading, error }] = useUpdateManyAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAttachmentMutation, UpdateManyAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAttachmentMutation, UpdateManyAttachmentMutationVariables>(UpdateManyAttachmentDocument, options);
      }
export type UpdateManyAttachmentMutationHookResult = ReturnType<typeof useUpdateManyAttachmentMutation>;
export type UpdateManyAttachmentMutationResult = Apollo.MutationResult<UpdateManyAttachmentMutation>;
export type UpdateManyAttachmentMutationOptions = Apollo.BaseMutationOptions<UpdateManyAttachmentMutation, UpdateManyAttachmentMutationVariables>;
export const FindUniqueAttributeDocument = gql`
    query findUniqueAttribute($where: AttributeWhereUniqueInput!) {
  findUniqueAttribute(where: $where) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useFindUniqueAttributeQuery__
 *
 * To run a query within a React component, call `useFindUniqueAttributeQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAttributeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAttributeQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAttributeQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>(FindUniqueAttributeDocument, options);
      }
export function useFindUniqueAttributeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>(FindUniqueAttributeDocument, options);
        }
export type FindUniqueAttributeQueryHookResult = ReturnType<typeof useFindUniqueAttributeQuery>;
export type FindUniqueAttributeLazyQueryHookResult = ReturnType<typeof useFindUniqueAttributeLazyQuery>;
export type FindUniqueAttributeQueryResult = Apollo.QueryResult<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>;
export const FindManyAttributeDocument = gql`
    query findManyAttribute($where: AttributeWhereInput, $orderBy: [AttributeOrderByWithRelationInput!], $cursor: AttributeWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttribute(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useFindManyAttributeQuery__
 *
 * To run a query within a React component, call `useFindManyAttributeQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttributeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttributeQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttributeQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttributeQuery, FindManyAttributeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttributeQuery, FindManyAttributeQueryVariables>(FindManyAttributeDocument, options);
      }
export function useFindManyAttributeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttributeQuery, FindManyAttributeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttributeQuery, FindManyAttributeQueryVariables>(FindManyAttributeDocument, options);
        }
export type FindManyAttributeQueryHookResult = ReturnType<typeof useFindManyAttributeQuery>;
export type FindManyAttributeLazyQueryHookResult = ReturnType<typeof useFindManyAttributeLazyQuery>;
export type FindManyAttributeQueryResult = Apollo.QueryResult<FindManyAttributeQuery, FindManyAttributeQueryVariables>;
export const FindManyAttributeCountDocument = gql`
    query findManyAttributeCount($where: AttributeWhereInput, $orderBy: [AttributeOrderByWithRelationInput!], $cursor: AttributeWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttributeCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyAttributeCountQuery__
 *
 * To run a query within a React component, call `useFindManyAttributeCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttributeCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttributeCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttributeCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>(FindManyAttributeCountDocument, options);
      }
export function useFindManyAttributeCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>(FindManyAttributeCountDocument, options);
        }
export type FindManyAttributeCountQueryHookResult = ReturnType<typeof useFindManyAttributeCountQuery>;
export type FindManyAttributeCountLazyQueryHookResult = ReturnType<typeof useFindManyAttributeCountLazyQuery>;
export type FindManyAttributeCountQueryResult = Apollo.QueryResult<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>;
export const CreateOneAttributeDocument = gql`
    mutation createOneAttribute($data: AttributeCreateInput!) {
  createOneAttribute(data: $data) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useCreateOneAttributeMutation__
 *
 * To run a mutation, you first call `useCreateOneAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAttributeMutation, { data, loading, error }] = useCreateOneAttributeMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAttributeMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAttributeMutation, CreateOneAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAttributeMutation, CreateOneAttributeMutationVariables>(CreateOneAttributeDocument, options);
      }
export type CreateOneAttributeMutationHookResult = ReturnType<typeof useCreateOneAttributeMutation>;
export type CreateOneAttributeMutationResult = Apollo.MutationResult<CreateOneAttributeMutation>;
export type CreateOneAttributeMutationOptions = Apollo.BaseMutationOptions<CreateOneAttributeMutation, CreateOneAttributeMutationVariables>;
export const UpdateOneAttributeDocument = gql`
    mutation updateOneAttribute($where: AttributeWhereUniqueInput!, $data: AttributeUpdateInput!) {
  updateOneAttribute(where: $where, data: $data) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useUpdateOneAttributeMutation__
 *
 * To run a mutation, you first call `useUpdateOneAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAttributeMutation, { data, loading, error }] = useUpdateOneAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAttributeMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAttributeMutation, UpdateOneAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAttributeMutation, UpdateOneAttributeMutationVariables>(UpdateOneAttributeDocument, options);
      }
export type UpdateOneAttributeMutationHookResult = ReturnType<typeof useUpdateOneAttributeMutation>;
export type UpdateOneAttributeMutationResult = Apollo.MutationResult<UpdateOneAttributeMutation>;
export type UpdateOneAttributeMutationOptions = Apollo.BaseMutationOptions<UpdateOneAttributeMutation, UpdateOneAttributeMutationVariables>;
export const DeleteOneAttributeDocument = gql`
    mutation deleteOneAttribute($where: AttributeWhereUniqueInput!) {
  deleteOneAttribute(where: $where) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useDeleteOneAttributeMutation__
 *
 * To run a mutation, you first call `useDeleteOneAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAttributeMutation, { data, loading, error }] = useDeleteOneAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAttributeMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAttributeMutation, DeleteOneAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAttributeMutation, DeleteOneAttributeMutationVariables>(DeleteOneAttributeDocument, options);
      }
export type DeleteOneAttributeMutationHookResult = ReturnType<typeof useDeleteOneAttributeMutation>;
export type DeleteOneAttributeMutationResult = Apollo.MutationResult<DeleteOneAttributeMutation>;
export type DeleteOneAttributeMutationOptions = Apollo.BaseMutationOptions<DeleteOneAttributeMutation, DeleteOneAttributeMutationVariables>;
export const DeleteManyAttributeDocument = gql`
    mutation deleteManyAttribute($where: AttributeWhereInput) {
  deleteManyAttribute(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAttributeMutation__
 *
 * To run a mutation, you first call `useDeleteManyAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAttributeMutation, { data, loading, error }] = useDeleteManyAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAttributeMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAttributeMutation, DeleteManyAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAttributeMutation, DeleteManyAttributeMutationVariables>(DeleteManyAttributeDocument, options);
      }
export type DeleteManyAttributeMutationHookResult = ReturnType<typeof useDeleteManyAttributeMutation>;
export type DeleteManyAttributeMutationResult = Apollo.MutationResult<DeleteManyAttributeMutation>;
export type DeleteManyAttributeMutationOptions = Apollo.BaseMutationOptions<DeleteManyAttributeMutation, DeleteManyAttributeMutationVariables>;
export const UpdateManyAttributeDocument = gql`
    mutation updateManyAttribute($where: AttributeWhereInput, $data: AttributeUpdateManyMutationInput!) {
  updateManyAttribute(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAttributeMutation__
 *
 * To run a mutation, you first call `useUpdateManyAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAttributeMutation, { data, loading, error }] = useUpdateManyAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAttributeMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAttributeMutation, UpdateManyAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAttributeMutation, UpdateManyAttributeMutationVariables>(UpdateManyAttributeDocument, options);
      }
export type UpdateManyAttributeMutationHookResult = ReturnType<typeof useUpdateManyAttributeMutation>;
export type UpdateManyAttributeMutationResult = Apollo.MutationResult<UpdateManyAttributeMutation>;
export type UpdateManyAttributeMutationOptions = Apollo.BaseMutationOptions<UpdateManyAttributeMutation, UpdateManyAttributeMutationVariables>;
export const FindUniqueAudioDocument = gql`
    query findUniqueAudio($where: AudioWhereUniqueInput!) {
  findUniqueAudio(where: $where) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useFindUniqueAudioQuery__
 *
 * To run a query within a React component, call `useFindUniqueAudioQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAudioQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAudioQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAudioQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>(FindUniqueAudioDocument, options);
      }
export function useFindUniqueAudioLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>(FindUniqueAudioDocument, options);
        }
export type FindUniqueAudioQueryHookResult = ReturnType<typeof useFindUniqueAudioQuery>;
export type FindUniqueAudioLazyQueryHookResult = ReturnType<typeof useFindUniqueAudioLazyQuery>;
export type FindUniqueAudioQueryResult = Apollo.QueryResult<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>;
export const FindManyAudioDocument = gql`
    query findManyAudio($where: AudioWhereInput, $orderBy: [AudioOrderByWithRelationInput!], $cursor: AudioWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudio(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useFindManyAudioQuery__
 *
 * To run a query within a React component, call `useFindManyAudioQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioQuery, FindManyAudioQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioQuery, FindManyAudioQueryVariables>(FindManyAudioDocument, options);
      }
export function useFindManyAudioLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioQuery, FindManyAudioQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioQuery, FindManyAudioQueryVariables>(FindManyAudioDocument, options);
        }
export type FindManyAudioQueryHookResult = ReturnType<typeof useFindManyAudioQuery>;
export type FindManyAudioLazyQueryHookResult = ReturnType<typeof useFindManyAudioLazyQuery>;
export type FindManyAudioQueryResult = Apollo.QueryResult<FindManyAudioQuery, FindManyAudioQueryVariables>;
export const FindManyAudioCountDocument = gql`
    query findManyAudioCount($where: AudioWhereInput, $orderBy: [AudioOrderByWithRelationInput!], $cursor: AudioWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudioCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyAudioCountQuery__
 *
 * To run a query within a React component, call `useFindManyAudioCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>(FindManyAudioCountDocument, options);
      }
export function useFindManyAudioCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>(FindManyAudioCountDocument, options);
        }
export type FindManyAudioCountQueryHookResult = ReturnType<typeof useFindManyAudioCountQuery>;
export type FindManyAudioCountLazyQueryHookResult = ReturnType<typeof useFindManyAudioCountLazyQuery>;
export type FindManyAudioCountQueryResult = Apollo.QueryResult<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>;
export const CreateOneAudioDocument = gql`
    mutation createOneAudio($data: AudioCreateInput!) {
  createOneAudio(data: $data) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useCreateOneAudioMutation__
 *
 * To run a mutation, you first call `useCreateOneAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAudioMutation, { data, loading, error }] = useCreateOneAudioMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAudioMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAudioMutation, CreateOneAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAudioMutation, CreateOneAudioMutationVariables>(CreateOneAudioDocument, options);
      }
export type CreateOneAudioMutationHookResult = ReturnType<typeof useCreateOneAudioMutation>;
export type CreateOneAudioMutationResult = Apollo.MutationResult<CreateOneAudioMutation>;
export type CreateOneAudioMutationOptions = Apollo.BaseMutationOptions<CreateOneAudioMutation, CreateOneAudioMutationVariables>;
export const UpdateOneAudioDocument = gql`
    mutation updateOneAudio($where: AudioWhereUniqueInput!, $data: AudioUpdateInput!) {
  updateOneAudio(where: $where, data: $data) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useUpdateOneAudioMutation__
 *
 * To run a mutation, you first call `useUpdateOneAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAudioMutation, { data, loading, error }] = useUpdateOneAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAudioMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAudioMutation, UpdateOneAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAudioMutation, UpdateOneAudioMutationVariables>(UpdateOneAudioDocument, options);
      }
export type UpdateOneAudioMutationHookResult = ReturnType<typeof useUpdateOneAudioMutation>;
export type UpdateOneAudioMutationResult = Apollo.MutationResult<UpdateOneAudioMutation>;
export type UpdateOneAudioMutationOptions = Apollo.BaseMutationOptions<UpdateOneAudioMutation, UpdateOneAudioMutationVariables>;
export const DeleteOneAudioDocument = gql`
    mutation deleteOneAudio($where: AudioWhereUniqueInput!) {
  deleteOneAudio(where: $where) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useDeleteOneAudioMutation__
 *
 * To run a mutation, you first call `useDeleteOneAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAudioMutation, { data, loading, error }] = useDeleteOneAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAudioMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAudioMutation, DeleteOneAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAudioMutation, DeleteOneAudioMutationVariables>(DeleteOneAudioDocument, options);
      }
export type DeleteOneAudioMutationHookResult = ReturnType<typeof useDeleteOneAudioMutation>;
export type DeleteOneAudioMutationResult = Apollo.MutationResult<DeleteOneAudioMutation>;
export type DeleteOneAudioMutationOptions = Apollo.BaseMutationOptions<DeleteOneAudioMutation, DeleteOneAudioMutationVariables>;
export const DeleteManyAudioDocument = gql`
    mutation deleteManyAudio($where: AudioWhereInput) {
  deleteManyAudio(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAudioMutation__
 *
 * To run a mutation, you first call `useDeleteManyAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAudioMutation, { data, loading, error }] = useDeleteManyAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAudioMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAudioMutation, DeleteManyAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAudioMutation, DeleteManyAudioMutationVariables>(DeleteManyAudioDocument, options);
      }
export type DeleteManyAudioMutationHookResult = ReturnType<typeof useDeleteManyAudioMutation>;
export type DeleteManyAudioMutationResult = Apollo.MutationResult<DeleteManyAudioMutation>;
export type DeleteManyAudioMutationOptions = Apollo.BaseMutationOptions<DeleteManyAudioMutation, DeleteManyAudioMutationVariables>;
export const UpdateManyAudioDocument = gql`
    mutation updateManyAudio($where: AudioWhereInput, $data: AudioUpdateManyMutationInput!) {
  updateManyAudio(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAudioMutation__
 *
 * To run a mutation, you first call `useUpdateManyAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAudioMutation, { data, loading, error }] = useUpdateManyAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAudioMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAudioMutation, UpdateManyAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAudioMutation, UpdateManyAudioMutationVariables>(UpdateManyAudioDocument, options);
      }
export type UpdateManyAudioMutationHookResult = ReturnType<typeof useUpdateManyAudioMutation>;
export type UpdateManyAudioMutationResult = Apollo.MutationResult<UpdateManyAudioMutation>;
export type UpdateManyAudioMutationOptions = Apollo.BaseMutationOptions<UpdateManyAudioMutation, UpdateManyAudioMutationVariables>;
export const FindUniqueAudioCollectionDocument = gql`
    query findUniqueAudioCollection($where: AudioCollectionWhereUniqueInput!) {
  findUniqueAudioCollection(where: $where) {
    ...AudioCollection
  }
}
    ${AudioCollectionFragmentDoc}`;

/**
 * __useFindUniqueAudioCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniqueAudioCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAudioCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAudioCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAudioCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAudioCollectionQuery, FindUniqueAudioCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAudioCollectionQuery, FindUniqueAudioCollectionQueryVariables>(FindUniqueAudioCollectionDocument, options);
      }
export function useFindUniqueAudioCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAudioCollectionQuery, FindUniqueAudioCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAudioCollectionQuery, FindUniqueAudioCollectionQueryVariables>(FindUniqueAudioCollectionDocument, options);
        }
export type FindUniqueAudioCollectionQueryHookResult = ReturnType<typeof useFindUniqueAudioCollectionQuery>;
export type FindUniqueAudioCollectionLazyQueryHookResult = ReturnType<typeof useFindUniqueAudioCollectionLazyQuery>;
export type FindUniqueAudioCollectionQueryResult = Apollo.QueryResult<FindUniqueAudioCollectionQuery, FindUniqueAudioCollectionQueryVariables>;
export const FindManyAudioCollectionDocument = gql`
    query findManyAudioCollection($where: AudioCollectionWhereInput, $orderBy: [AudioCollectionOrderByWithRelationInput!], $cursor: AudioCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudioCollection(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...AudioCollection
  }
}
    ${AudioCollectionFragmentDoc}`;

/**
 * __useFindManyAudioCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyAudioCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioCollectionQuery, FindManyAudioCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioCollectionQuery, FindManyAudioCollectionQueryVariables>(FindManyAudioCollectionDocument, options);
      }
export function useFindManyAudioCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioCollectionQuery, FindManyAudioCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioCollectionQuery, FindManyAudioCollectionQueryVariables>(FindManyAudioCollectionDocument, options);
        }
export type FindManyAudioCollectionQueryHookResult = ReturnType<typeof useFindManyAudioCollectionQuery>;
export type FindManyAudioCollectionLazyQueryHookResult = ReturnType<typeof useFindManyAudioCollectionLazyQuery>;
export type FindManyAudioCollectionQueryResult = Apollo.QueryResult<FindManyAudioCollectionQuery, FindManyAudioCollectionQueryVariables>;
export const FindManyAudioCollectionCountDocument = gql`
    query findManyAudioCollectionCount($where: AudioCollectionWhereInput, $orderBy: [AudioCollectionOrderByWithRelationInput!], $cursor: AudioCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudioCollectionCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyAudioCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyAudioCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioCollectionCountQuery, FindManyAudioCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioCollectionCountQuery, FindManyAudioCollectionCountQueryVariables>(FindManyAudioCollectionCountDocument, options);
      }
export function useFindManyAudioCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioCollectionCountQuery, FindManyAudioCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioCollectionCountQuery, FindManyAudioCollectionCountQueryVariables>(FindManyAudioCollectionCountDocument, options);
        }
export type FindManyAudioCollectionCountQueryHookResult = ReturnType<typeof useFindManyAudioCollectionCountQuery>;
export type FindManyAudioCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyAudioCollectionCountLazyQuery>;
export type FindManyAudioCollectionCountQueryResult = Apollo.QueryResult<FindManyAudioCollectionCountQuery, FindManyAudioCollectionCountQueryVariables>;
export const CreateOneAudioCollectionDocument = gql`
    mutation createOneAudioCollection($data: AudioCollectionCreateInput!) {
  createOneAudioCollection(data: $data) {
    ...AudioCollection
  }
}
    ${AudioCollectionFragmentDoc}`;

/**
 * __useCreateOneAudioCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOneAudioCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAudioCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAudioCollectionMutation, { data, loading, error }] = useCreateOneAudioCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAudioCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAudioCollectionMutation, CreateOneAudioCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAudioCollectionMutation, CreateOneAudioCollectionMutationVariables>(CreateOneAudioCollectionDocument, options);
      }
export type CreateOneAudioCollectionMutationHookResult = ReturnType<typeof useCreateOneAudioCollectionMutation>;
export type CreateOneAudioCollectionMutationResult = Apollo.MutationResult<CreateOneAudioCollectionMutation>;
export type CreateOneAudioCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOneAudioCollectionMutation, CreateOneAudioCollectionMutationVariables>;
export const UpdateOneAudioCollectionDocument = gql`
    mutation updateOneAudioCollection($where: AudioCollectionWhereUniqueInput!, $data: AudioCollectionUpdateInput!) {
  updateOneAudioCollection(where: $where, data: $data) {
    ...AudioCollection
  }
}
    ${AudioCollectionFragmentDoc}`;

/**
 * __useUpdateOneAudioCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOneAudioCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAudioCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAudioCollectionMutation, { data, loading, error }] = useUpdateOneAudioCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAudioCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAudioCollectionMutation, UpdateOneAudioCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAudioCollectionMutation, UpdateOneAudioCollectionMutationVariables>(UpdateOneAudioCollectionDocument, options);
      }
export type UpdateOneAudioCollectionMutationHookResult = ReturnType<typeof useUpdateOneAudioCollectionMutation>;
export type UpdateOneAudioCollectionMutationResult = Apollo.MutationResult<UpdateOneAudioCollectionMutation>;
export type UpdateOneAudioCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOneAudioCollectionMutation, UpdateOneAudioCollectionMutationVariables>;
export const DeleteOneAudioCollectionDocument = gql`
    mutation deleteOneAudioCollection($where: AudioCollectionWhereUniqueInput!) {
  deleteOneAudioCollection(where: $where) {
    ...AudioCollection
  }
}
    ${AudioCollectionFragmentDoc}`;

/**
 * __useDeleteOneAudioCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOneAudioCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAudioCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAudioCollectionMutation, { data, loading, error }] = useDeleteOneAudioCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAudioCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAudioCollectionMutation, DeleteOneAudioCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAudioCollectionMutation, DeleteOneAudioCollectionMutationVariables>(DeleteOneAudioCollectionDocument, options);
      }
export type DeleteOneAudioCollectionMutationHookResult = ReturnType<typeof useDeleteOneAudioCollectionMutation>;
export type DeleteOneAudioCollectionMutationResult = Apollo.MutationResult<DeleteOneAudioCollectionMutation>;
export type DeleteOneAudioCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOneAudioCollectionMutation, DeleteOneAudioCollectionMutationVariables>;
export const DeleteManyAudioCollectionDocument = gql`
    mutation deleteManyAudioCollection($where: AudioCollectionWhereInput) {
  deleteManyAudioCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAudioCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyAudioCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAudioCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAudioCollectionMutation, { data, loading, error }] = useDeleteManyAudioCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAudioCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAudioCollectionMutation, DeleteManyAudioCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAudioCollectionMutation, DeleteManyAudioCollectionMutationVariables>(DeleteManyAudioCollectionDocument, options);
      }
export type DeleteManyAudioCollectionMutationHookResult = ReturnType<typeof useDeleteManyAudioCollectionMutation>;
export type DeleteManyAudioCollectionMutationResult = Apollo.MutationResult<DeleteManyAudioCollectionMutation>;
export type DeleteManyAudioCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyAudioCollectionMutation, DeleteManyAudioCollectionMutationVariables>;
export const UpdateManyAudioCollectionDocument = gql`
    mutation updateManyAudioCollection($where: AudioCollectionWhereInput, $data: AudioCollectionUpdateManyMutationInput!) {
  updateManyAudioCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAudioCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyAudioCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAudioCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAudioCollectionMutation, { data, loading, error }] = useUpdateManyAudioCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAudioCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAudioCollectionMutation, UpdateManyAudioCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAudioCollectionMutation, UpdateManyAudioCollectionMutationVariables>(UpdateManyAudioCollectionDocument, options);
      }
export type UpdateManyAudioCollectionMutationHookResult = ReturnType<typeof useUpdateManyAudioCollectionMutation>;
export type UpdateManyAudioCollectionMutationResult = Apollo.MutationResult<UpdateManyAudioCollectionMutation>;
export type UpdateManyAudioCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyAudioCollectionMutation, UpdateManyAudioCollectionMutationVariables>;
export const FindUniqueAudioViewDocument = gql`
    query findUniqueAudioView($where: AudioViewWhereUniqueInput!) {
  findUniqueAudioView(where: $where) {
    ...AudioView
  }
}
    ${AudioViewFragmentDoc}`;

/**
 * __useFindUniqueAudioViewQuery__
 *
 * To run a query within a React component, call `useFindUniqueAudioViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAudioViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAudioViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAudioViewQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAudioViewQuery, FindUniqueAudioViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAudioViewQuery, FindUniqueAudioViewQueryVariables>(FindUniqueAudioViewDocument, options);
      }
export function useFindUniqueAudioViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAudioViewQuery, FindUniqueAudioViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAudioViewQuery, FindUniqueAudioViewQueryVariables>(FindUniqueAudioViewDocument, options);
        }
export type FindUniqueAudioViewQueryHookResult = ReturnType<typeof useFindUniqueAudioViewQuery>;
export type FindUniqueAudioViewLazyQueryHookResult = ReturnType<typeof useFindUniqueAudioViewLazyQuery>;
export type FindUniqueAudioViewQueryResult = Apollo.QueryResult<FindUniqueAudioViewQuery, FindUniqueAudioViewQueryVariables>;
export const FindManyAudioViewDocument = gql`
    query findManyAudioView($where: AudioViewWhereInput, $orderBy: [AudioViewOrderByWithRelationInput!], $cursor: AudioViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudioView(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...AudioView
  }
}
    ${AudioViewFragmentDoc}`;

/**
 * __useFindManyAudioViewQuery__
 *
 * To run a query within a React component, call `useFindManyAudioViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioViewQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioViewQuery, FindManyAudioViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioViewQuery, FindManyAudioViewQueryVariables>(FindManyAudioViewDocument, options);
      }
export function useFindManyAudioViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioViewQuery, FindManyAudioViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioViewQuery, FindManyAudioViewQueryVariables>(FindManyAudioViewDocument, options);
        }
export type FindManyAudioViewQueryHookResult = ReturnType<typeof useFindManyAudioViewQuery>;
export type FindManyAudioViewLazyQueryHookResult = ReturnType<typeof useFindManyAudioViewLazyQuery>;
export type FindManyAudioViewQueryResult = Apollo.QueryResult<FindManyAudioViewQuery, FindManyAudioViewQueryVariables>;
export const FindManyAudioViewCountDocument = gql`
    query findManyAudioViewCount($where: AudioViewWhereInput, $orderBy: [AudioViewOrderByWithRelationInput!], $cursor: AudioViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudioViewCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyAudioViewCountQuery__
 *
 * To run a query within a React component, call `useFindManyAudioViewCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioViewCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioViewCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioViewCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioViewCountQuery, FindManyAudioViewCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioViewCountQuery, FindManyAudioViewCountQueryVariables>(FindManyAudioViewCountDocument, options);
      }
export function useFindManyAudioViewCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioViewCountQuery, FindManyAudioViewCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioViewCountQuery, FindManyAudioViewCountQueryVariables>(FindManyAudioViewCountDocument, options);
        }
export type FindManyAudioViewCountQueryHookResult = ReturnType<typeof useFindManyAudioViewCountQuery>;
export type FindManyAudioViewCountLazyQueryHookResult = ReturnType<typeof useFindManyAudioViewCountLazyQuery>;
export type FindManyAudioViewCountQueryResult = Apollo.QueryResult<FindManyAudioViewCountQuery, FindManyAudioViewCountQueryVariables>;
export const CreateOneAudioViewDocument = gql`
    mutation createOneAudioView($data: AudioViewCreateInput!) {
  createOneAudioView(data: $data) {
    ...AudioView
  }
}
    ${AudioViewFragmentDoc}`;

/**
 * __useCreateOneAudioViewMutation__
 *
 * To run a mutation, you first call `useCreateOneAudioViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAudioViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAudioViewMutation, { data, loading, error }] = useCreateOneAudioViewMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAudioViewMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAudioViewMutation, CreateOneAudioViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAudioViewMutation, CreateOneAudioViewMutationVariables>(CreateOneAudioViewDocument, options);
      }
export type CreateOneAudioViewMutationHookResult = ReturnType<typeof useCreateOneAudioViewMutation>;
export type CreateOneAudioViewMutationResult = Apollo.MutationResult<CreateOneAudioViewMutation>;
export type CreateOneAudioViewMutationOptions = Apollo.BaseMutationOptions<CreateOneAudioViewMutation, CreateOneAudioViewMutationVariables>;
export const UpdateOneAudioViewDocument = gql`
    mutation updateOneAudioView($where: AudioViewWhereUniqueInput!, $data: AudioViewUpdateInput!) {
  updateOneAudioView(where: $where, data: $data) {
    ...AudioView
  }
}
    ${AudioViewFragmentDoc}`;

/**
 * __useUpdateOneAudioViewMutation__
 *
 * To run a mutation, you first call `useUpdateOneAudioViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAudioViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAudioViewMutation, { data, loading, error }] = useUpdateOneAudioViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAudioViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAudioViewMutation, UpdateOneAudioViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAudioViewMutation, UpdateOneAudioViewMutationVariables>(UpdateOneAudioViewDocument, options);
      }
export type UpdateOneAudioViewMutationHookResult = ReturnType<typeof useUpdateOneAudioViewMutation>;
export type UpdateOneAudioViewMutationResult = Apollo.MutationResult<UpdateOneAudioViewMutation>;
export type UpdateOneAudioViewMutationOptions = Apollo.BaseMutationOptions<UpdateOneAudioViewMutation, UpdateOneAudioViewMutationVariables>;
export const DeleteOneAudioViewDocument = gql`
    mutation deleteOneAudioView($where: AudioViewWhereUniqueInput!) {
  deleteOneAudioView(where: $where) {
    ...AudioView
  }
}
    ${AudioViewFragmentDoc}`;

/**
 * __useDeleteOneAudioViewMutation__
 *
 * To run a mutation, you first call `useDeleteOneAudioViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAudioViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAudioViewMutation, { data, loading, error }] = useDeleteOneAudioViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAudioViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAudioViewMutation, DeleteOneAudioViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAudioViewMutation, DeleteOneAudioViewMutationVariables>(DeleteOneAudioViewDocument, options);
      }
export type DeleteOneAudioViewMutationHookResult = ReturnType<typeof useDeleteOneAudioViewMutation>;
export type DeleteOneAudioViewMutationResult = Apollo.MutationResult<DeleteOneAudioViewMutation>;
export type DeleteOneAudioViewMutationOptions = Apollo.BaseMutationOptions<DeleteOneAudioViewMutation, DeleteOneAudioViewMutationVariables>;
export const DeleteManyAudioViewDocument = gql`
    mutation deleteManyAudioView($where: AudioViewWhereInput) {
  deleteManyAudioView(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAudioViewMutation__
 *
 * To run a mutation, you first call `useDeleteManyAudioViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAudioViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAudioViewMutation, { data, loading, error }] = useDeleteManyAudioViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAudioViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAudioViewMutation, DeleteManyAudioViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAudioViewMutation, DeleteManyAudioViewMutationVariables>(DeleteManyAudioViewDocument, options);
      }
export type DeleteManyAudioViewMutationHookResult = ReturnType<typeof useDeleteManyAudioViewMutation>;
export type DeleteManyAudioViewMutationResult = Apollo.MutationResult<DeleteManyAudioViewMutation>;
export type DeleteManyAudioViewMutationOptions = Apollo.BaseMutationOptions<DeleteManyAudioViewMutation, DeleteManyAudioViewMutationVariables>;
export const UpdateManyAudioViewDocument = gql`
    mutation updateManyAudioView($where: AudioViewWhereInput, $data: AudioViewUpdateManyMutationInput!) {
  updateManyAudioView(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAudioViewMutation__
 *
 * To run a mutation, you first call `useUpdateManyAudioViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAudioViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAudioViewMutation, { data, loading, error }] = useUpdateManyAudioViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAudioViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAudioViewMutation, UpdateManyAudioViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAudioViewMutation, UpdateManyAudioViewMutationVariables>(UpdateManyAudioViewDocument, options);
      }
export type UpdateManyAudioViewMutationHookResult = ReturnType<typeof useUpdateManyAudioViewMutation>;
export type UpdateManyAudioViewMutationResult = Apollo.MutationResult<UpdateManyAudioViewMutation>;
export type UpdateManyAudioViewMutationOptions = Apollo.BaseMutationOptions<UpdateManyAudioViewMutation, UpdateManyAudioViewMutationVariables>;
export const FindUniqueCouponDocument = gql`
    query findUniqueCoupon($where: CouponWhereUniqueInput!) {
  findUniqueCoupon(where: $where) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useFindUniqueCouponQuery__
 *
 * To run a query within a React component, call `useFindUniqueCouponQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueCouponQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueCouponQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueCouponQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>(FindUniqueCouponDocument, options);
      }
export function useFindUniqueCouponLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>(FindUniqueCouponDocument, options);
        }
export type FindUniqueCouponQueryHookResult = ReturnType<typeof useFindUniqueCouponQuery>;
export type FindUniqueCouponLazyQueryHookResult = ReturnType<typeof useFindUniqueCouponLazyQuery>;
export type FindUniqueCouponQueryResult = Apollo.QueryResult<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>;
export const FindManyCouponDocument = gql`
    query findManyCoupon($where: CouponWhereInput, $orderBy: [CouponOrderByWithRelationInput!], $cursor: CouponWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCoupon(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useFindManyCouponQuery__
 *
 * To run a query within a React component, call `useFindManyCouponQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCouponQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCouponQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCouponQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCouponQuery, FindManyCouponQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCouponQuery, FindManyCouponQueryVariables>(FindManyCouponDocument, options);
      }
export function useFindManyCouponLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCouponQuery, FindManyCouponQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCouponQuery, FindManyCouponQueryVariables>(FindManyCouponDocument, options);
        }
export type FindManyCouponQueryHookResult = ReturnType<typeof useFindManyCouponQuery>;
export type FindManyCouponLazyQueryHookResult = ReturnType<typeof useFindManyCouponLazyQuery>;
export type FindManyCouponQueryResult = Apollo.QueryResult<FindManyCouponQuery, FindManyCouponQueryVariables>;
export const FindManyCouponCountDocument = gql`
    query findManyCouponCount($where: CouponWhereInput, $orderBy: [CouponOrderByWithRelationInput!], $cursor: CouponWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCouponCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyCouponCountQuery__
 *
 * To run a query within a React component, call `useFindManyCouponCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCouponCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCouponCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCouponCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>(FindManyCouponCountDocument, options);
      }
export function useFindManyCouponCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>(FindManyCouponCountDocument, options);
        }
export type FindManyCouponCountQueryHookResult = ReturnType<typeof useFindManyCouponCountQuery>;
export type FindManyCouponCountLazyQueryHookResult = ReturnType<typeof useFindManyCouponCountLazyQuery>;
export type FindManyCouponCountQueryResult = Apollo.QueryResult<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>;
export const CreateOneCouponDocument = gql`
    mutation createOneCoupon($data: CouponCreateInput!) {
  createOneCoupon(data: $data) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useCreateOneCouponMutation__
 *
 * To run a mutation, you first call `useCreateOneCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneCouponMutation, { data, loading, error }] = useCreateOneCouponMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneCouponMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneCouponMutation, CreateOneCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneCouponMutation, CreateOneCouponMutationVariables>(CreateOneCouponDocument, options);
      }
export type CreateOneCouponMutationHookResult = ReturnType<typeof useCreateOneCouponMutation>;
export type CreateOneCouponMutationResult = Apollo.MutationResult<CreateOneCouponMutation>;
export type CreateOneCouponMutationOptions = Apollo.BaseMutationOptions<CreateOneCouponMutation, CreateOneCouponMutationVariables>;
export const UpdateOneCouponDocument = gql`
    mutation updateOneCoupon($where: CouponWhereUniqueInput!, $data: CouponUpdateInput!) {
  updateOneCoupon(where: $where, data: $data) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useUpdateOneCouponMutation__
 *
 * To run a mutation, you first call `useUpdateOneCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneCouponMutation, { data, loading, error }] = useUpdateOneCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneCouponMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneCouponMutation, UpdateOneCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneCouponMutation, UpdateOneCouponMutationVariables>(UpdateOneCouponDocument, options);
      }
export type UpdateOneCouponMutationHookResult = ReturnType<typeof useUpdateOneCouponMutation>;
export type UpdateOneCouponMutationResult = Apollo.MutationResult<UpdateOneCouponMutation>;
export type UpdateOneCouponMutationOptions = Apollo.BaseMutationOptions<UpdateOneCouponMutation, UpdateOneCouponMutationVariables>;
export const DeleteOneCouponDocument = gql`
    mutation deleteOneCoupon($where: CouponWhereUniqueInput!) {
  deleteOneCoupon(where: $where) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useDeleteOneCouponMutation__
 *
 * To run a mutation, you first call `useDeleteOneCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneCouponMutation, { data, loading, error }] = useDeleteOneCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneCouponMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneCouponMutation, DeleteOneCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneCouponMutation, DeleteOneCouponMutationVariables>(DeleteOneCouponDocument, options);
      }
export type DeleteOneCouponMutationHookResult = ReturnType<typeof useDeleteOneCouponMutation>;
export type DeleteOneCouponMutationResult = Apollo.MutationResult<DeleteOneCouponMutation>;
export type DeleteOneCouponMutationOptions = Apollo.BaseMutationOptions<DeleteOneCouponMutation, DeleteOneCouponMutationVariables>;
export const DeleteManyCouponDocument = gql`
    mutation deleteManyCoupon($where: CouponWhereInput) {
  deleteManyCoupon(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyCouponMutation__
 *
 * To run a mutation, you first call `useDeleteManyCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyCouponMutation, { data, loading, error }] = useDeleteManyCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyCouponMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyCouponMutation, DeleteManyCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyCouponMutation, DeleteManyCouponMutationVariables>(DeleteManyCouponDocument, options);
      }
export type DeleteManyCouponMutationHookResult = ReturnType<typeof useDeleteManyCouponMutation>;
export type DeleteManyCouponMutationResult = Apollo.MutationResult<DeleteManyCouponMutation>;
export type DeleteManyCouponMutationOptions = Apollo.BaseMutationOptions<DeleteManyCouponMutation, DeleteManyCouponMutationVariables>;
export const UpdateManyCouponDocument = gql`
    mutation updateManyCoupon($where: CouponWhereInput, $data: CouponUpdateManyMutationInput!) {
  updateManyCoupon(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyCouponMutation__
 *
 * To run a mutation, you first call `useUpdateManyCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyCouponMutation, { data, loading, error }] = useUpdateManyCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyCouponMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyCouponMutation, UpdateManyCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyCouponMutation, UpdateManyCouponMutationVariables>(UpdateManyCouponDocument, options);
      }
export type UpdateManyCouponMutationHookResult = ReturnType<typeof useUpdateManyCouponMutation>;
export type UpdateManyCouponMutationResult = Apollo.MutationResult<UpdateManyCouponMutation>;
export type UpdateManyCouponMutationOptions = Apollo.BaseMutationOptions<UpdateManyCouponMutation, UpdateManyCouponMutationVariables>;
export const FindUniqueCustomerDocument = gql`
    query findUniqueCustomer($where: CustomerWhereUniqueInput!) {
  findUniqueCustomer(where: $where) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useFindUniqueCustomerQuery__
 *
 * To run a query within a React component, call `useFindUniqueCustomerQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueCustomerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueCustomerQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueCustomerQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>(FindUniqueCustomerDocument, options);
      }
export function useFindUniqueCustomerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>(FindUniqueCustomerDocument, options);
        }
export type FindUniqueCustomerQueryHookResult = ReturnType<typeof useFindUniqueCustomerQuery>;
export type FindUniqueCustomerLazyQueryHookResult = ReturnType<typeof useFindUniqueCustomerLazyQuery>;
export type FindUniqueCustomerQueryResult = Apollo.QueryResult<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>;
export const FindManyCustomerDocument = gql`
    query findManyCustomer($where: CustomerWhereInput, $orderBy: [CustomerOrderByWithRelationInput!], $cursor: CustomerWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCustomer(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useFindManyCustomerQuery__
 *
 * To run a query within a React component, call `useFindManyCustomerQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCustomerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCustomerQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCustomerQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCustomerQuery, FindManyCustomerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCustomerQuery, FindManyCustomerQueryVariables>(FindManyCustomerDocument, options);
      }
export function useFindManyCustomerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCustomerQuery, FindManyCustomerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCustomerQuery, FindManyCustomerQueryVariables>(FindManyCustomerDocument, options);
        }
export type FindManyCustomerQueryHookResult = ReturnType<typeof useFindManyCustomerQuery>;
export type FindManyCustomerLazyQueryHookResult = ReturnType<typeof useFindManyCustomerLazyQuery>;
export type FindManyCustomerQueryResult = Apollo.QueryResult<FindManyCustomerQuery, FindManyCustomerQueryVariables>;
export const FindManyCustomerCountDocument = gql`
    query findManyCustomerCount($where: CustomerWhereInput, $orderBy: [CustomerOrderByWithRelationInput!], $cursor: CustomerWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCustomerCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyCustomerCountQuery__
 *
 * To run a query within a React component, call `useFindManyCustomerCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCustomerCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCustomerCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCustomerCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>(FindManyCustomerCountDocument, options);
      }
export function useFindManyCustomerCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>(FindManyCustomerCountDocument, options);
        }
export type FindManyCustomerCountQueryHookResult = ReturnType<typeof useFindManyCustomerCountQuery>;
export type FindManyCustomerCountLazyQueryHookResult = ReturnType<typeof useFindManyCustomerCountLazyQuery>;
export type FindManyCustomerCountQueryResult = Apollo.QueryResult<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>;
export const CreateOneCustomerDocument = gql`
    mutation createOneCustomer($data: CustomerCreateInput!) {
  createOneCustomer(data: $data) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useCreateOneCustomerMutation__
 *
 * To run a mutation, you first call `useCreateOneCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneCustomerMutation, { data, loading, error }] = useCreateOneCustomerMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneCustomerMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneCustomerMutation, CreateOneCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneCustomerMutation, CreateOneCustomerMutationVariables>(CreateOneCustomerDocument, options);
      }
export type CreateOneCustomerMutationHookResult = ReturnType<typeof useCreateOneCustomerMutation>;
export type CreateOneCustomerMutationResult = Apollo.MutationResult<CreateOneCustomerMutation>;
export type CreateOneCustomerMutationOptions = Apollo.BaseMutationOptions<CreateOneCustomerMutation, CreateOneCustomerMutationVariables>;
export const UpdateOneCustomerDocument = gql`
    mutation updateOneCustomer($where: CustomerWhereUniqueInput!, $data: CustomerUpdateInput!) {
  updateOneCustomer(where: $where, data: $data) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useUpdateOneCustomerMutation__
 *
 * To run a mutation, you first call `useUpdateOneCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneCustomerMutation, { data, loading, error }] = useUpdateOneCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneCustomerMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneCustomerMutation, UpdateOneCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneCustomerMutation, UpdateOneCustomerMutationVariables>(UpdateOneCustomerDocument, options);
      }
export type UpdateOneCustomerMutationHookResult = ReturnType<typeof useUpdateOneCustomerMutation>;
export type UpdateOneCustomerMutationResult = Apollo.MutationResult<UpdateOneCustomerMutation>;
export type UpdateOneCustomerMutationOptions = Apollo.BaseMutationOptions<UpdateOneCustomerMutation, UpdateOneCustomerMutationVariables>;
export const DeleteOneCustomerDocument = gql`
    mutation deleteOneCustomer($where: CustomerWhereUniqueInput!) {
  deleteOneCustomer(where: $where) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useDeleteOneCustomerMutation__
 *
 * To run a mutation, you first call `useDeleteOneCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneCustomerMutation, { data, loading, error }] = useDeleteOneCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneCustomerMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneCustomerMutation, DeleteOneCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneCustomerMutation, DeleteOneCustomerMutationVariables>(DeleteOneCustomerDocument, options);
      }
export type DeleteOneCustomerMutationHookResult = ReturnType<typeof useDeleteOneCustomerMutation>;
export type DeleteOneCustomerMutationResult = Apollo.MutationResult<DeleteOneCustomerMutation>;
export type DeleteOneCustomerMutationOptions = Apollo.BaseMutationOptions<DeleteOneCustomerMutation, DeleteOneCustomerMutationVariables>;
export const DeleteManyCustomerDocument = gql`
    mutation deleteManyCustomer($where: CustomerWhereInput) {
  deleteManyCustomer(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyCustomerMutation__
 *
 * To run a mutation, you first call `useDeleteManyCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyCustomerMutation, { data, loading, error }] = useDeleteManyCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyCustomerMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyCustomerMutation, DeleteManyCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyCustomerMutation, DeleteManyCustomerMutationVariables>(DeleteManyCustomerDocument, options);
      }
export type DeleteManyCustomerMutationHookResult = ReturnType<typeof useDeleteManyCustomerMutation>;
export type DeleteManyCustomerMutationResult = Apollo.MutationResult<DeleteManyCustomerMutation>;
export type DeleteManyCustomerMutationOptions = Apollo.BaseMutationOptions<DeleteManyCustomerMutation, DeleteManyCustomerMutationVariables>;
export const UpdateManyCustomerDocument = gql`
    mutation updateManyCustomer($where: CustomerWhereInput, $data: CustomerUpdateManyMutationInput!) {
  updateManyCustomer(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyCustomerMutation__
 *
 * To run a mutation, you first call `useUpdateManyCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyCustomerMutation, { data, loading, error }] = useUpdateManyCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyCustomerMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyCustomerMutation, UpdateManyCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyCustomerMutation, UpdateManyCustomerMutationVariables>(UpdateManyCustomerDocument, options);
      }
export type UpdateManyCustomerMutationHookResult = ReturnType<typeof useUpdateManyCustomerMutation>;
export type UpdateManyCustomerMutationResult = Apollo.MutationResult<UpdateManyCustomerMutation>;
export type UpdateManyCustomerMutationOptions = Apollo.BaseMutationOptions<UpdateManyCustomerMutation, UpdateManyCustomerMutationVariables>;
export const FindUniqueEventDocument = gql`
    query findUniqueEvent($where: EventWhereUniqueInput!) {
  findUniqueEvent(where: $where) {
    ...Event
  }
}
    ${EventFragmentDoc}`;

/**
 * __useFindUniqueEventQuery__
 *
 * To run a query within a React component, call `useFindUniqueEventQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueEventQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueEventQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueEventQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueEventQuery, FindUniqueEventQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueEventQuery, FindUniqueEventQueryVariables>(FindUniqueEventDocument, options);
      }
export function useFindUniqueEventLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueEventQuery, FindUniqueEventQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueEventQuery, FindUniqueEventQueryVariables>(FindUniqueEventDocument, options);
        }
export type FindUniqueEventQueryHookResult = ReturnType<typeof useFindUniqueEventQuery>;
export type FindUniqueEventLazyQueryHookResult = ReturnType<typeof useFindUniqueEventLazyQuery>;
export type FindUniqueEventQueryResult = Apollo.QueryResult<FindUniqueEventQuery, FindUniqueEventQueryVariables>;
export const FindManyEventDocument = gql`
    query findManyEvent($where: EventWhereInput, $orderBy: [EventOrderByWithRelationInput!], $cursor: EventWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEvent(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Event
  }
}
    ${EventFragmentDoc}`;

/**
 * __useFindManyEventQuery__
 *
 * To run a query within a React component, call `useFindManyEventQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEventQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEventQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEventQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEventQuery, FindManyEventQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEventQuery, FindManyEventQueryVariables>(FindManyEventDocument, options);
      }
export function useFindManyEventLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEventQuery, FindManyEventQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEventQuery, FindManyEventQueryVariables>(FindManyEventDocument, options);
        }
export type FindManyEventQueryHookResult = ReturnType<typeof useFindManyEventQuery>;
export type FindManyEventLazyQueryHookResult = ReturnType<typeof useFindManyEventLazyQuery>;
export type FindManyEventQueryResult = Apollo.QueryResult<FindManyEventQuery, FindManyEventQueryVariables>;
export const FindManyEventCountDocument = gql`
    query findManyEventCount($where: EventWhereInput, $orderBy: [EventOrderByWithRelationInput!], $cursor: EventWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEventCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyEventCountQuery__
 *
 * To run a query within a React component, call `useFindManyEventCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEventCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEventCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEventCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEventCountQuery, FindManyEventCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEventCountQuery, FindManyEventCountQueryVariables>(FindManyEventCountDocument, options);
      }
export function useFindManyEventCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEventCountQuery, FindManyEventCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEventCountQuery, FindManyEventCountQueryVariables>(FindManyEventCountDocument, options);
        }
export type FindManyEventCountQueryHookResult = ReturnType<typeof useFindManyEventCountQuery>;
export type FindManyEventCountLazyQueryHookResult = ReturnType<typeof useFindManyEventCountLazyQuery>;
export type FindManyEventCountQueryResult = Apollo.QueryResult<FindManyEventCountQuery, FindManyEventCountQueryVariables>;
export const CreateOneEventDocument = gql`
    mutation createOneEvent($data: EventCreateInput!) {
  createOneEvent(data: $data) {
    ...Event
  }
}
    ${EventFragmentDoc}`;

/**
 * __useCreateOneEventMutation__
 *
 * To run a mutation, you first call `useCreateOneEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneEventMutation, { data, loading, error }] = useCreateOneEventMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneEventMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneEventMutation, CreateOneEventMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneEventMutation, CreateOneEventMutationVariables>(CreateOneEventDocument, options);
      }
export type CreateOneEventMutationHookResult = ReturnType<typeof useCreateOneEventMutation>;
export type CreateOneEventMutationResult = Apollo.MutationResult<CreateOneEventMutation>;
export type CreateOneEventMutationOptions = Apollo.BaseMutationOptions<CreateOneEventMutation, CreateOneEventMutationVariables>;
export const UpdateOneEventDocument = gql`
    mutation updateOneEvent($where: EventWhereUniqueInput!, $data: EventUpdateInput!) {
  updateOneEvent(where: $where, data: $data) {
    ...Event
  }
}
    ${EventFragmentDoc}`;

/**
 * __useUpdateOneEventMutation__
 *
 * To run a mutation, you first call `useUpdateOneEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneEventMutation, { data, loading, error }] = useUpdateOneEventMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneEventMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneEventMutation, UpdateOneEventMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneEventMutation, UpdateOneEventMutationVariables>(UpdateOneEventDocument, options);
      }
export type UpdateOneEventMutationHookResult = ReturnType<typeof useUpdateOneEventMutation>;
export type UpdateOneEventMutationResult = Apollo.MutationResult<UpdateOneEventMutation>;
export type UpdateOneEventMutationOptions = Apollo.BaseMutationOptions<UpdateOneEventMutation, UpdateOneEventMutationVariables>;
export const DeleteOneEventDocument = gql`
    mutation deleteOneEvent($where: EventWhereUniqueInput!) {
  deleteOneEvent(where: $where) {
    ...Event
  }
}
    ${EventFragmentDoc}`;

/**
 * __useDeleteOneEventMutation__
 *
 * To run a mutation, you first call `useDeleteOneEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneEventMutation, { data, loading, error }] = useDeleteOneEventMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneEventMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneEventMutation, DeleteOneEventMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneEventMutation, DeleteOneEventMutationVariables>(DeleteOneEventDocument, options);
      }
export type DeleteOneEventMutationHookResult = ReturnType<typeof useDeleteOneEventMutation>;
export type DeleteOneEventMutationResult = Apollo.MutationResult<DeleteOneEventMutation>;
export type DeleteOneEventMutationOptions = Apollo.BaseMutationOptions<DeleteOneEventMutation, DeleteOneEventMutationVariables>;
export const DeleteManyEventDocument = gql`
    mutation deleteManyEvent($where: EventWhereInput) {
  deleteManyEvent(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyEventMutation__
 *
 * To run a mutation, you first call `useDeleteManyEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyEventMutation, { data, loading, error }] = useDeleteManyEventMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyEventMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyEventMutation, DeleteManyEventMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyEventMutation, DeleteManyEventMutationVariables>(DeleteManyEventDocument, options);
      }
export type DeleteManyEventMutationHookResult = ReturnType<typeof useDeleteManyEventMutation>;
export type DeleteManyEventMutationResult = Apollo.MutationResult<DeleteManyEventMutation>;
export type DeleteManyEventMutationOptions = Apollo.BaseMutationOptions<DeleteManyEventMutation, DeleteManyEventMutationVariables>;
export const UpdateManyEventDocument = gql`
    mutation updateManyEvent($where: EventWhereInput, $data: EventUpdateManyMutationInput!) {
  updateManyEvent(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyEventMutation__
 *
 * To run a mutation, you first call `useUpdateManyEventMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyEventMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyEventMutation, { data, loading, error }] = useUpdateManyEventMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyEventMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyEventMutation, UpdateManyEventMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyEventMutation, UpdateManyEventMutationVariables>(UpdateManyEventDocument, options);
      }
export type UpdateManyEventMutationHookResult = ReturnType<typeof useUpdateManyEventMutation>;
export type UpdateManyEventMutationResult = Apollo.MutationResult<UpdateManyEventMutation>;
export type UpdateManyEventMutationOptions = Apollo.BaseMutationOptions<UpdateManyEventMutation, UpdateManyEventMutationVariables>;
export const FindUniqueEventCollectionDocument = gql`
    query findUniqueEventCollection($where: EventCollectionWhereUniqueInput!) {
  findUniqueEventCollection(where: $where) {
    ...EventCollection
  }
}
    ${EventCollectionFragmentDoc}`;

/**
 * __useFindUniqueEventCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniqueEventCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueEventCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueEventCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueEventCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueEventCollectionQuery, FindUniqueEventCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueEventCollectionQuery, FindUniqueEventCollectionQueryVariables>(FindUniqueEventCollectionDocument, options);
      }
export function useFindUniqueEventCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueEventCollectionQuery, FindUniqueEventCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueEventCollectionQuery, FindUniqueEventCollectionQueryVariables>(FindUniqueEventCollectionDocument, options);
        }
export type FindUniqueEventCollectionQueryHookResult = ReturnType<typeof useFindUniqueEventCollectionQuery>;
export type FindUniqueEventCollectionLazyQueryHookResult = ReturnType<typeof useFindUniqueEventCollectionLazyQuery>;
export type FindUniqueEventCollectionQueryResult = Apollo.QueryResult<FindUniqueEventCollectionQuery, FindUniqueEventCollectionQueryVariables>;
export const FindManyEventCollectionDocument = gql`
    query findManyEventCollection($where: EventCollectionWhereInput, $orderBy: [EventCollectionOrderByWithRelationInput!], $cursor: EventCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEventCollection(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...EventCollection
  }
}
    ${EventCollectionFragmentDoc}`;

/**
 * __useFindManyEventCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyEventCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEventCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEventCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEventCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEventCollectionQuery, FindManyEventCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEventCollectionQuery, FindManyEventCollectionQueryVariables>(FindManyEventCollectionDocument, options);
      }
export function useFindManyEventCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEventCollectionQuery, FindManyEventCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEventCollectionQuery, FindManyEventCollectionQueryVariables>(FindManyEventCollectionDocument, options);
        }
export type FindManyEventCollectionQueryHookResult = ReturnType<typeof useFindManyEventCollectionQuery>;
export type FindManyEventCollectionLazyQueryHookResult = ReturnType<typeof useFindManyEventCollectionLazyQuery>;
export type FindManyEventCollectionQueryResult = Apollo.QueryResult<FindManyEventCollectionQuery, FindManyEventCollectionQueryVariables>;
export const FindManyEventCollectionCountDocument = gql`
    query findManyEventCollectionCount($where: EventCollectionWhereInput, $orderBy: [EventCollectionOrderByWithRelationInput!], $cursor: EventCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEventCollectionCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyEventCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyEventCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEventCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEventCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEventCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEventCollectionCountQuery, FindManyEventCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEventCollectionCountQuery, FindManyEventCollectionCountQueryVariables>(FindManyEventCollectionCountDocument, options);
      }
export function useFindManyEventCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEventCollectionCountQuery, FindManyEventCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEventCollectionCountQuery, FindManyEventCollectionCountQueryVariables>(FindManyEventCollectionCountDocument, options);
        }
export type FindManyEventCollectionCountQueryHookResult = ReturnType<typeof useFindManyEventCollectionCountQuery>;
export type FindManyEventCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyEventCollectionCountLazyQuery>;
export type FindManyEventCollectionCountQueryResult = Apollo.QueryResult<FindManyEventCollectionCountQuery, FindManyEventCollectionCountQueryVariables>;
export const CreateOneEventCollectionDocument = gql`
    mutation createOneEventCollection($data: EventCollectionCreateInput!) {
  createOneEventCollection(data: $data) {
    ...EventCollection
  }
}
    ${EventCollectionFragmentDoc}`;

/**
 * __useCreateOneEventCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOneEventCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneEventCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneEventCollectionMutation, { data, loading, error }] = useCreateOneEventCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneEventCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneEventCollectionMutation, CreateOneEventCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneEventCollectionMutation, CreateOneEventCollectionMutationVariables>(CreateOneEventCollectionDocument, options);
      }
export type CreateOneEventCollectionMutationHookResult = ReturnType<typeof useCreateOneEventCollectionMutation>;
export type CreateOneEventCollectionMutationResult = Apollo.MutationResult<CreateOneEventCollectionMutation>;
export type CreateOneEventCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOneEventCollectionMutation, CreateOneEventCollectionMutationVariables>;
export const UpdateOneEventCollectionDocument = gql`
    mutation updateOneEventCollection($where: EventCollectionWhereUniqueInput!, $data: EventCollectionUpdateInput!) {
  updateOneEventCollection(where: $where, data: $data) {
    ...EventCollection
  }
}
    ${EventCollectionFragmentDoc}`;

/**
 * __useUpdateOneEventCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOneEventCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneEventCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneEventCollectionMutation, { data, loading, error }] = useUpdateOneEventCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneEventCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneEventCollectionMutation, UpdateOneEventCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneEventCollectionMutation, UpdateOneEventCollectionMutationVariables>(UpdateOneEventCollectionDocument, options);
      }
export type UpdateOneEventCollectionMutationHookResult = ReturnType<typeof useUpdateOneEventCollectionMutation>;
export type UpdateOneEventCollectionMutationResult = Apollo.MutationResult<UpdateOneEventCollectionMutation>;
export type UpdateOneEventCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOneEventCollectionMutation, UpdateOneEventCollectionMutationVariables>;
export const DeleteOneEventCollectionDocument = gql`
    mutation deleteOneEventCollection($where: EventCollectionWhereUniqueInput!) {
  deleteOneEventCollection(where: $where) {
    ...EventCollection
  }
}
    ${EventCollectionFragmentDoc}`;

/**
 * __useDeleteOneEventCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOneEventCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneEventCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneEventCollectionMutation, { data, loading, error }] = useDeleteOneEventCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneEventCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneEventCollectionMutation, DeleteOneEventCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneEventCollectionMutation, DeleteOneEventCollectionMutationVariables>(DeleteOneEventCollectionDocument, options);
      }
export type DeleteOneEventCollectionMutationHookResult = ReturnType<typeof useDeleteOneEventCollectionMutation>;
export type DeleteOneEventCollectionMutationResult = Apollo.MutationResult<DeleteOneEventCollectionMutation>;
export type DeleteOneEventCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOneEventCollectionMutation, DeleteOneEventCollectionMutationVariables>;
export const DeleteManyEventCollectionDocument = gql`
    mutation deleteManyEventCollection($where: EventCollectionWhereInput) {
  deleteManyEventCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyEventCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyEventCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyEventCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyEventCollectionMutation, { data, loading, error }] = useDeleteManyEventCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyEventCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyEventCollectionMutation, DeleteManyEventCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyEventCollectionMutation, DeleteManyEventCollectionMutationVariables>(DeleteManyEventCollectionDocument, options);
      }
export type DeleteManyEventCollectionMutationHookResult = ReturnType<typeof useDeleteManyEventCollectionMutation>;
export type DeleteManyEventCollectionMutationResult = Apollo.MutationResult<DeleteManyEventCollectionMutation>;
export type DeleteManyEventCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyEventCollectionMutation, DeleteManyEventCollectionMutationVariables>;
export const UpdateManyEventCollectionDocument = gql`
    mutation updateManyEventCollection($where: EventCollectionWhereInput, $data: EventCollectionUpdateManyMutationInput!) {
  updateManyEventCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyEventCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyEventCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyEventCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyEventCollectionMutation, { data, loading, error }] = useUpdateManyEventCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyEventCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyEventCollectionMutation, UpdateManyEventCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyEventCollectionMutation, UpdateManyEventCollectionMutationVariables>(UpdateManyEventCollectionDocument, options);
      }
export type UpdateManyEventCollectionMutationHookResult = ReturnType<typeof useUpdateManyEventCollectionMutation>;
export type UpdateManyEventCollectionMutationResult = Apollo.MutationResult<UpdateManyEventCollectionMutation>;
export type UpdateManyEventCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyEventCollectionMutation, UpdateManyEventCollectionMutationVariables>;
export const FindUniqueEventGroupDocument = gql`
    query findUniqueEventGroup($where: EventGroupWhereUniqueInput!) {
  findUniqueEventGroup(where: $where) {
    ...EventGroup
  }
}
    ${EventGroupFragmentDoc}`;

/**
 * __useFindUniqueEventGroupQuery__
 *
 * To run a query within a React component, call `useFindUniqueEventGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueEventGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueEventGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueEventGroupQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueEventGroupQuery, FindUniqueEventGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueEventGroupQuery, FindUniqueEventGroupQueryVariables>(FindUniqueEventGroupDocument, options);
      }
export function useFindUniqueEventGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueEventGroupQuery, FindUniqueEventGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueEventGroupQuery, FindUniqueEventGroupQueryVariables>(FindUniqueEventGroupDocument, options);
        }
export type FindUniqueEventGroupQueryHookResult = ReturnType<typeof useFindUniqueEventGroupQuery>;
export type FindUniqueEventGroupLazyQueryHookResult = ReturnType<typeof useFindUniqueEventGroupLazyQuery>;
export type FindUniqueEventGroupQueryResult = Apollo.QueryResult<FindUniqueEventGroupQuery, FindUniqueEventGroupQueryVariables>;
export const FindManyEventGroupDocument = gql`
    query findManyEventGroup($where: EventGroupWhereInput, $orderBy: [EventGroupOrderByWithRelationInput!], $cursor: EventGroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEventGroup(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...EventGroup
  }
}
    ${EventGroupFragmentDoc}`;

/**
 * __useFindManyEventGroupQuery__
 *
 * To run a query within a React component, call `useFindManyEventGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEventGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEventGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEventGroupQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEventGroupQuery, FindManyEventGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEventGroupQuery, FindManyEventGroupQueryVariables>(FindManyEventGroupDocument, options);
      }
export function useFindManyEventGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEventGroupQuery, FindManyEventGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEventGroupQuery, FindManyEventGroupQueryVariables>(FindManyEventGroupDocument, options);
        }
export type FindManyEventGroupQueryHookResult = ReturnType<typeof useFindManyEventGroupQuery>;
export type FindManyEventGroupLazyQueryHookResult = ReturnType<typeof useFindManyEventGroupLazyQuery>;
export type FindManyEventGroupQueryResult = Apollo.QueryResult<FindManyEventGroupQuery, FindManyEventGroupQueryVariables>;
export const FindManyEventGroupCountDocument = gql`
    query findManyEventGroupCount($where: EventGroupWhereInput, $orderBy: [EventGroupOrderByWithRelationInput!], $cursor: EventGroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEventGroupCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyEventGroupCountQuery__
 *
 * To run a query within a React component, call `useFindManyEventGroupCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEventGroupCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEventGroupCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEventGroupCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEventGroupCountQuery, FindManyEventGroupCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEventGroupCountQuery, FindManyEventGroupCountQueryVariables>(FindManyEventGroupCountDocument, options);
      }
export function useFindManyEventGroupCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEventGroupCountQuery, FindManyEventGroupCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEventGroupCountQuery, FindManyEventGroupCountQueryVariables>(FindManyEventGroupCountDocument, options);
        }
export type FindManyEventGroupCountQueryHookResult = ReturnType<typeof useFindManyEventGroupCountQuery>;
export type FindManyEventGroupCountLazyQueryHookResult = ReturnType<typeof useFindManyEventGroupCountLazyQuery>;
export type FindManyEventGroupCountQueryResult = Apollo.QueryResult<FindManyEventGroupCountQuery, FindManyEventGroupCountQueryVariables>;
export const CreateOneEventGroupDocument = gql`
    mutation createOneEventGroup($data: EventGroupCreateInput!) {
  createOneEventGroup(data: $data) {
    ...EventGroup
  }
}
    ${EventGroupFragmentDoc}`;

/**
 * __useCreateOneEventGroupMutation__
 *
 * To run a mutation, you first call `useCreateOneEventGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneEventGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneEventGroupMutation, { data, loading, error }] = useCreateOneEventGroupMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneEventGroupMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneEventGroupMutation, CreateOneEventGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneEventGroupMutation, CreateOneEventGroupMutationVariables>(CreateOneEventGroupDocument, options);
      }
export type CreateOneEventGroupMutationHookResult = ReturnType<typeof useCreateOneEventGroupMutation>;
export type CreateOneEventGroupMutationResult = Apollo.MutationResult<CreateOneEventGroupMutation>;
export type CreateOneEventGroupMutationOptions = Apollo.BaseMutationOptions<CreateOneEventGroupMutation, CreateOneEventGroupMutationVariables>;
export const UpdateOneEventGroupDocument = gql`
    mutation updateOneEventGroup($where: EventGroupWhereUniqueInput!, $data: EventGroupUpdateInput!) {
  updateOneEventGroup(where: $where, data: $data) {
    ...EventGroup
  }
}
    ${EventGroupFragmentDoc}`;

/**
 * __useUpdateOneEventGroupMutation__
 *
 * To run a mutation, you first call `useUpdateOneEventGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneEventGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneEventGroupMutation, { data, loading, error }] = useUpdateOneEventGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneEventGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneEventGroupMutation, UpdateOneEventGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneEventGroupMutation, UpdateOneEventGroupMutationVariables>(UpdateOneEventGroupDocument, options);
      }
export type UpdateOneEventGroupMutationHookResult = ReturnType<typeof useUpdateOneEventGroupMutation>;
export type UpdateOneEventGroupMutationResult = Apollo.MutationResult<UpdateOneEventGroupMutation>;
export type UpdateOneEventGroupMutationOptions = Apollo.BaseMutationOptions<UpdateOneEventGroupMutation, UpdateOneEventGroupMutationVariables>;
export const DeleteOneEventGroupDocument = gql`
    mutation deleteOneEventGroup($where: EventGroupWhereUniqueInput!) {
  deleteOneEventGroup(where: $where) {
    ...EventGroup
  }
}
    ${EventGroupFragmentDoc}`;

/**
 * __useDeleteOneEventGroupMutation__
 *
 * To run a mutation, you first call `useDeleteOneEventGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneEventGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneEventGroupMutation, { data, loading, error }] = useDeleteOneEventGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneEventGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneEventGroupMutation, DeleteOneEventGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneEventGroupMutation, DeleteOneEventGroupMutationVariables>(DeleteOneEventGroupDocument, options);
      }
export type DeleteOneEventGroupMutationHookResult = ReturnType<typeof useDeleteOneEventGroupMutation>;
export type DeleteOneEventGroupMutationResult = Apollo.MutationResult<DeleteOneEventGroupMutation>;
export type DeleteOneEventGroupMutationOptions = Apollo.BaseMutationOptions<DeleteOneEventGroupMutation, DeleteOneEventGroupMutationVariables>;
export const DeleteManyEventGroupDocument = gql`
    mutation deleteManyEventGroup($where: EventGroupWhereInput) {
  deleteManyEventGroup(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyEventGroupMutation__
 *
 * To run a mutation, you first call `useDeleteManyEventGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyEventGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyEventGroupMutation, { data, loading, error }] = useDeleteManyEventGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyEventGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyEventGroupMutation, DeleteManyEventGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyEventGroupMutation, DeleteManyEventGroupMutationVariables>(DeleteManyEventGroupDocument, options);
      }
export type DeleteManyEventGroupMutationHookResult = ReturnType<typeof useDeleteManyEventGroupMutation>;
export type DeleteManyEventGroupMutationResult = Apollo.MutationResult<DeleteManyEventGroupMutation>;
export type DeleteManyEventGroupMutationOptions = Apollo.BaseMutationOptions<DeleteManyEventGroupMutation, DeleteManyEventGroupMutationVariables>;
export const UpdateManyEventGroupDocument = gql`
    mutation updateManyEventGroup($where: EventGroupWhereInput, $data: EventGroupUpdateManyMutationInput!) {
  updateManyEventGroup(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyEventGroupMutation__
 *
 * To run a mutation, you first call `useUpdateManyEventGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyEventGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyEventGroupMutation, { data, loading, error }] = useUpdateManyEventGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyEventGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyEventGroupMutation, UpdateManyEventGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyEventGroupMutation, UpdateManyEventGroupMutationVariables>(UpdateManyEventGroupDocument, options);
      }
export type UpdateManyEventGroupMutationHookResult = ReturnType<typeof useUpdateManyEventGroupMutation>;
export type UpdateManyEventGroupMutationResult = Apollo.MutationResult<UpdateManyEventGroupMutation>;
export type UpdateManyEventGroupMutationOptions = Apollo.BaseMutationOptions<UpdateManyEventGroupMutation, UpdateManyEventGroupMutationVariables>;
export const FindUniqueLoginTokenDocument = gql`
    query findUniqueLoginToken($where: LoginTokenWhereUniqueInput!) {
  findUniqueLoginToken(where: $where) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useFindUniqueLoginTokenQuery__
 *
 * To run a query within a React component, call `useFindUniqueLoginTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueLoginTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueLoginTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueLoginTokenQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>(FindUniqueLoginTokenDocument, options);
      }
export function useFindUniqueLoginTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>(FindUniqueLoginTokenDocument, options);
        }
export type FindUniqueLoginTokenQueryHookResult = ReturnType<typeof useFindUniqueLoginTokenQuery>;
export type FindUniqueLoginTokenLazyQueryHookResult = ReturnType<typeof useFindUniqueLoginTokenLazyQuery>;
export type FindUniqueLoginTokenQueryResult = Apollo.QueryResult<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>;
export const FindManyLoginTokenDocument = gql`
    query findManyLoginToken($where: LoginTokenWhereInput, $orderBy: [LoginTokenOrderByWithRelationInput!], $cursor: LoginTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyLoginToken(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useFindManyLoginTokenQuery__
 *
 * To run a query within a React component, call `useFindManyLoginTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyLoginTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyLoginTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyLoginTokenQuery(baseOptions?: Apollo.QueryHookOptions<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>(FindManyLoginTokenDocument, options);
      }
export function useFindManyLoginTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>(FindManyLoginTokenDocument, options);
        }
export type FindManyLoginTokenQueryHookResult = ReturnType<typeof useFindManyLoginTokenQuery>;
export type FindManyLoginTokenLazyQueryHookResult = ReturnType<typeof useFindManyLoginTokenLazyQuery>;
export type FindManyLoginTokenQueryResult = Apollo.QueryResult<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>;
export const FindManyLoginTokenCountDocument = gql`
    query findManyLoginTokenCount($where: LoginTokenWhereInput, $orderBy: [LoginTokenOrderByWithRelationInput!], $cursor: LoginTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyLoginTokenCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyLoginTokenCountQuery__
 *
 * To run a query within a React component, call `useFindManyLoginTokenCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyLoginTokenCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyLoginTokenCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyLoginTokenCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>(FindManyLoginTokenCountDocument, options);
      }
export function useFindManyLoginTokenCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>(FindManyLoginTokenCountDocument, options);
        }
export type FindManyLoginTokenCountQueryHookResult = ReturnType<typeof useFindManyLoginTokenCountQuery>;
export type FindManyLoginTokenCountLazyQueryHookResult = ReturnType<typeof useFindManyLoginTokenCountLazyQuery>;
export type FindManyLoginTokenCountQueryResult = Apollo.QueryResult<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>;
export const CreateOneLoginTokenDocument = gql`
    mutation createOneLoginToken($data: LoginTokenCreateInput!) {
  createOneLoginToken(data: $data) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useCreateOneLoginTokenMutation__
 *
 * To run a mutation, you first call `useCreateOneLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneLoginTokenMutation, { data, loading, error }] = useCreateOneLoginTokenMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneLoginTokenMutation, CreateOneLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneLoginTokenMutation, CreateOneLoginTokenMutationVariables>(CreateOneLoginTokenDocument, options);
      }
export type CreateOneLoginTokenMutationHookResult = ReturnType<typeof useCreateOneLoginTokenMutation>;
export type CreateOneLoginTokenMutationResult = Apollo.MutationResult<CreateOneLoginTokenMutation>;
export type CreateOneLoginTokenMutationOptions = Apollo.BaseMutationOptions<CreateOneLoginTokenMutation, CreateOneLoginTokenMutationVariables>;
export const UpdateOneLoginTokenDocument = gql`
    mutation updateOneLoginToken($where: LoginTokenWhereUniqueInput!, $data: LoginTokenUpdateInput!) {
  updateOneLoginToken(where: $where, data: $data) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useUpdateOneLoginTokenMutation__
 *
 * To run a mutation, you first call `useUpdateOneLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneLoginTokenMutation, { data, loading, error }] = useUpdateOneLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneLoginTokenMutation, UpdateOneLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneLoginTokenMutation, UpdateOneLoginTokenMutationVariables>(UpdateOneLoginTokenDocument, options);
      }
export type UpdateOneLoginTokenMutationHookResult = ReturnType<typeof useUpdateOneLoginTokenMutation>;
export type UpdateOneLoginTokenMutationResult = Apollo.MutationResult<UpdateOneLoginTokenMutation>;
export type UpdateOneLoginTokenMutationOptions = Apollo.BaseMutationOptions<UpdateOneLoginTokenMutation, UpdateOneLoginTokenMutationVariables>;
export const DeleteOneLoginTokenDocument = gql`
    mutation deleteOneLoginToken($where: LoginTokenWhereUniqueInput!) {
  deleteOneLoginToken(where: $where) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useDeleteOneLoginTokenMutation__
 *
 * To run a mutation, you first call `useDeleteOneLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneLoginTokenMutation, { data, loading, error }] = useDeleteOneLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneLoginTokenMutation, DeleteOneLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneLoginTokenMutation, DeleteOneLoginTokenMutationVariables>(DeleteOneLoginTokenDocument, options);
      }
export type DeleteOneLoginTokenMutationHookResult = ReturnType<typeof useDeleteOneLoginTokenMutation>;
export type DeleteOneLoginTokenMutationResult = Apollo.MutationResult<DeleteOneLoginTokenMutation>;
export type DeleteOneLoginTokenMutationOptions = Apollo.BaseMutationOptions<DeleteOneLoginTokenMutation, DeleteOneLoginTokenMutationVariables>;
export const DeleteManyLoginTokenDocument = gql`
    mutation deleteManyLoginToken($where: LoginTokenWhereInput) {
  deleteManyLoginToken(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyLoginTokenMutation__
 *
 * To run a mutation, you first call `useDeleteManyLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyLoginTokenMutation, { data, loading, error }] = useDeleteManyLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyLoginTokenMutation, DeleteManyLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyLoginTokenMutation, DeleteManyLoginTokenMutationVariables>(DeleteManyLoginTokenDocument, options);
      }
export type DeleteManyLoginTokenMutationHookResult = ReturnType<typeof useDeleteManyLoginTokenMutation>;
export type DeleteManyLoginTokenMutationResult = Apollo.MutationResult<DeleteManyLoginTokenMutation>;
export type DeleteManyLoginTokenMutationOptions = Apollo.BaseMutationOptions<DeleteManyLoginTokenMutation, DeleteManyLoginTokenMutationVariables>;
export const UpdateManyLoginTokenDocument = gql`
    mutation updateManyLoginToken($where: LoginTokenWhereInput, $data: LoginTokenUpdateManyMutationInput!) {
  updateManyLoginToken(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyLoginTokenMutation__
 *
 * To run a mutation, you first call `useUpdateManyLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyLoginTokenMutation, { data, loading, error }] = useUpdateManyLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyLoginTokenMutation, UpdateManyLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyLoginTokenMutation, UpdateManyLoginTokenMutationVariables>(UpdateManyLoginTokenDocument, options);
      }
export type UpdateManyLoginTokenMutationHookResult = ReturnType<typeof useUpdateManyLoginTokenMutation>;
export type UpdateManyLoginTokenMutationResult = Apollo.MutationResult<UpdateManyLoginTokenMutation>;
export type UpdateManyLoginTokenMutationOptions = Apollo.BaseMutationOptions<UpdateManyLoginTokenMutation, UpdateManyLoginTokenMutationVariables>;
export const FindUniqueMarketingLocationDocument = gql`
    query findUniqueMarketingLocation($where: MarketingLocationWhereUniqueInput!) {
  findUniqueMarketingLocation(where: $where) {
    ...MarketingLocation
  }
}
    ${MarketingLocationFragmentDoc}`;

/**
 * __useFindUniqueMarketingLocationQuery__
 *
 * To run a query within a React component, call `useFindUniqueMarketingLocationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueMarketingLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueMarketingLocationQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueMarketingLocationQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueMarketingLocationQuery, FindUniqueMarketingLocationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueMarketingLocationQuery, FindUniqueMarketingLocationQueryVariables>(FindUniqueMarketingLocationDocument, options);
      }
export function useFindUniqueMarketingLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueMarketingLocationQuery, FindUniqueMarketingLocationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueMarketingLocationQuery, FindUniqueMarketingLocationQueryVariables>(FindUniqueMarketingLocationDocument, options);
        }
export type FindUniqueMarketingLocationQueryHookResult = ReturnType<typeof useFindUniqueMarketingLocationQuery>;
export type FindUniqueMarketingLocationLazyQueryHookResult = ReturnType<typeof useFindUniqueMarketingLocationLazyQuery>;
export type FindUniqueMarketingLocationQueryResult = Apollo.QueryResult<FindUniqueMarketingLocationQuery, FindUniqueMarketingLocationQueryVariables>;
export const FindManyMarketingLocationDocument = gql`
    query findManyMarketingLocation($where: MarketingLocationWhereInput, $orderBy: [MarketingLocationOrderByWithRelationInput!], $cursor: MarketingLocationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyMarketingLocation(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...MarketingLocation
  }
}
    ${MarketingLocationFragmentDoc}`;

/**
 * __useFindManyMarketingLocationQuery__
 *
 * To run a query within a React component, call `useFindManyMarketingLocationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyMarketingLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyMarketingLocationQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyMarketingLocationQuery(baseOptions?: Apollo.QueryHookOptions<FindManyMarketingLocationQuery, FindManyMarketingLocationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyMarketingLocationQuery, FindManyMarketingLocationQueryVariables>(FindManyMarketingLocationDocument, options);
      }
export function useFindManyMarketingLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyMarketingLocationQuery, FindManyMarketingLocationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyMarketingLocationQuery, FindManyMarketingLocationQueryVariables>(FindManyMarketingLocationDocument, options);
        }
export type FindManyMarketingLocationQueryHookResult = ReturnType<typeof useFindManyMarketingLocationQuery>;
export type FindManyMarketingLocationLazyQueryHookResult = ReturnType<typeof useFindManyMarketingLocationLazyQuery>;
export type FindManyMarketingLocationQueryResult = Apollo.QueryResult<FindManyMarketingLocationQuery, FindManyMarketingLocationQueryVariables>;
export const FindManyMarketingLocationCountDocument = gql`
    query findManyMarketingLocationCount($where: MarketingLocationWhereInput, $orderBy: [MarketingLocationOrderByWithRelationInput!], $cursor: MarketingLocationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyMarketingLocationCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyMarketingLocationCountQuery__
 *
 * To run a query within a React component, call `useFindManyMarketingLocationCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyMarketingLocationCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyMarketingLocationCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyMarketingLocationCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyMarketingLocationCountQuery, FindManyMarketingLocationCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyMarketingLocationCountQuery, FindManyMarketingLocationCountQueryVariables>(FindManyMarketingLocationCountDocument, options);
      }
export function useFindManyMarketingLocationCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyMarketingLocationCountQuery, FindManyMarketingLocationCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyMarketingLocationCountQuery, FindManyMarketingLocationCountQueryVariables>(FindManyMarketingLocationCountDocument, options);
        }
export type FindManyMarketingLocationCountQueryHookResult = ReturnType<typeof useFindManyMarketingLocationCountQuery>;
export type FindManyMarketingLocationCountLazyQueryHookResult = ReturnType<typeof useFindManyMarketingLocationCountLazyQuery>;
export type FindManyMarketingLocationCountQueryResult = Apollo.QueryResult<FindManyMarketingLocationCountQuery, FindManyMarketingLocationCountQueryVariables>;
export const CreateOneMarketingLocationDocument = gql`
    mutation createOneMarketingLocation($data: MarketingLocationCreateInput!) {
  createOneMarketingLocation(data: $data) {
    ...MarketingLocation
  }
}
    ${MarketingLocationFragmentDoc}`;

/**
 * __useCreateOneMarketingLocationMutation__
 *
 * To run a mutation, you first call `useCreateOneMarketingLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneMarketingLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneMarketingLocationMutation, { data, loading, error }] = useCreateOneMarketingLocationMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneMarketingLocationMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneMarketingLocationMutation, CreateOneMarketingLocationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneMarketingLocationMutation, CreateOneMarketingLocationMutationVariables>(CreateOneMarketingLocationDocument, options);
      }
export type CreateOneMarketingLocationMutationHookResult = ReturnType<typeof useCreateOneMarketingLocationMutation>;
export type CreateOneMarketingLocationMutationResult = Apollo.MutationResult<CreateOneMarketingLocationMutation>;
export type CreateOneMarketingLocationMutationOptions = Apollo.BaseMutationOptions<CreateOneMarketingLocationMutation, CreateOneMarketingLocationMutationVariables>;
export const UpdateOneMarketingLocationDocument = gql`
    mutation updateOneMarketingLocation($where: MarketingLocationWhereUniqueInput!, $data: MarketingLocationUpdateInput!) {
  updateOneMarketingLocation(where: $where, data: $data) {
    ...MarketingLocation
  }
}
    ${MarketingLocationFragmentDoc}`;

/**
 * __useUpdateOneMarketingLocationMutation__
 *
 * To run a mutation, you first call `useUpdateOneMarketingLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneMarketingLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneMarketingLocationMutation, { data, loading, error }] = useUpdateOneMarketingLocationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneMarketingLocationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneMarketingLocationMutation, UpdateOneMarketingLocationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneMarketingLocationMutation, UpdateOneMarketingLocationMutationVariables>(UpdateOneMarketingLocationDocument, options);
      }
export type UpdateOneMarketingLocationMutationHookResult = ReturnType<typeof useUpdateOneMarketingLocationMutation>;
export type UpdateOneMarketingLocationMutationResult = Apollo.MutationResult<UpdateOneMarketingLocationMutation>;
export type UpdateOneMarketingLocationMutationOptions = Apollo.BaseMutationOptions<UpdateOneMarketingLocationMutation, UpdateOneMarketingLocationMutationVariables>;
export const DeleteOneMarketingLocationDocument = gql`
    mutation deleteOneMarketingLocation($where: MarketingLocationWhereUniqueInput!) {
  deleteOneMarketingLocation(where: $where) {
    ...MarketingLocation
  }
}
    ${MarketingLocationFragmentDoc}`;

/**
 * __useDeleteOneMarketingLocationMutation__
 *
 * To run a mutation, you first call `useDeleteOneMarketingLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneMarketingLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneMarketingLocationMutation, { data, loading, error }] = useDeleteOneMarketingLocationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneMarketingLocationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneMarketingLocationMutation, DeleteOneMarketingLocationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneMarketingLocationMutation, DeleteOneMarketingLocationMutationVariables>(DeleteOneMarketingLocationDocument, options);
      }
export type DeleteOneMarketingLocationMutationHookResult = ReturnType<typeof useDeleteOneMarketingLocationMutation>;
export type DeleteOneMarketingLocationMutationResult = Apollo.MutationResult<DeleteOneMarketingLocationMutation>;
export type DeleteOneMarketingLocationMutationOptions = Apollo.BaseMutationOptions<DeleteOneMarketingLocationMutation, DeleteOneMarketingLocationMutationVariables>;
export const DeleteManyMarketingLocationDocument = gql`
    mutation deleteManyMarketingLocation($where: MarketingLocationWhereInput) {
  deleteManyMarketingLocation(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyMarketingLocationMutation__
 *
 * To run a mutation, you first call `useDeleteManyMarketingLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyMarketingLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyMarketingLocationMutation, { data, loading, error }] = useDeleteManyMarketingLocationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyMarketingLocationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyMarketingLocationMutation, DeleteManyMarketingLocationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyMarketingLocationMutation, DeleteManyMarketingLocationMutationVariables>(DeleteManyMarketingLocationDocument, options);
      }
export type DeleteManyMarketingLocationMutationHookResult = ReturnType<typeof useDeleteManyMarketingLocationMutation>;
export type DeleteManyMarketingLocationMutationResult = Apollo.MutationResult<DeleteManyMarketingLocationMutation>;
export type DeleteManyMarketingLocationMutationOptions = Apollo.BaseMutationOptions<DeleteManyMarketingLocationMutation, DeleteManyMarketingLocationMutationVariables>;
export const UpdateManyMarketingLocationDocument = gql`
    mutation updateManyMarketingLocation($where: MarketingLocationWhereInput, $data: MarketingLocationUpdateManyMutationInput!) {
  updateManyMarketingLocation(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyMarketingLocationMutation__
 *
 * To run a mutation, you first call `useUpdateManyMarketingLocationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyMarketingLocationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyMarketingLocationMutation, { data, loading, error }] = useUpdateManyMarketingLocationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyMarketingLocationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyMarketingLocationMutation, UpdateManyMarketingLocationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyMarketingLocationMutation, UpdateManyMarketingLocationMutationVariables>(UpdateManyMarketingLocationDocument, options);
      }
export type UpdateManyMarketingLocationMutationHookResult = ReturnType<typeof useUpdateManyMarketingLocationMutation>;
export type UpdateManyMarketingLocationMutationResult = Apollo.MutationResult<UpdateManyMarketingLocationMutation>;
export type UpdateManyMarketingLocationMutationOptions = Apollo.BaseMutationOptions<UpdateManyMarketingLocationMutation, UpdateManyMarketingLocationMutationVariables>;
export const FindUniqueNotificationDocument = gql`
    query findUniqueNotification($where: NotificationWhereUniqueInput!) {
  findUniqueNotification(where: $where) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useFindUniqueNotificationQuery__
 *
 * To run a query within a React component, call `useFindUniqueNotificationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueNotificationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueNotificationQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueNotificationQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>(FindUniqueNotificationDocument, options);
      }
export function useFindUniqueNotificationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>(FindUniqueNotificationDocument, options);
        }
export type FindUniqueNotificationQueryHookResult = ReturnType<typeof useFindUniqueNotificationQuery>;
export type FindUniqueNotificationLazyQueryHookResult = ReturnType<typeof useFindUniqueNotificationLazyQuery>;
export type FindUniqueNotificationQueryResult = Apollo.QueryResult<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>;
export const FindManyNotificationDocument = gql`
    query findManyNotification($where: NotificationWhereInput, $orderBy: [NotificationOrderByWithRelationInput!], $cursor: NotificationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyNotification(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useFindManyNotificationQuery__
 *
 * To run a query within a React component, call `useFindManyNotificationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyNotificationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyNotificationQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyNotificationQuery(baseOptions?: Apollo.QueryHookOptions<FindManyNotificationQuery, FindManyNotificationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyNotificationQuery, FindManyNotificationQueryVariables>(FindManyNotificationDocument, options);
      }
export function useFindManyNotificationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyNotificationQuery, FindManyNotificationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyNotificationQuery, FindManyNotificationQueryVariables>(FindManyNotificationDocument, options);
        }
export type FindManyNotificationQueryHookResult = ReturnType<typeof useFindManyNotificationQuery>;
export type FindManyNotificationLazyQueryHookResult = ReturnType<typeof useFindManyNotificationLazyQuery>;
export type FindManyNotificationQueryResult = Apollo.QueryResult<FindManyNotificationQuery, FindManyNotificationQueryVariables>;
export const FindManyNotificationCountDocument = gql`
    query findManyNotificationCount($where: NotificationWhereInput, $orderBy: [NotificationOrderByWithRelationInput!], $cursor: NotificationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyNotificationCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyNotificationCountQuery__
 *
 * To run a query within a React component, call `useFindManyNotificationCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyNotificationCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyNotificationCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyNotificationCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>(FindManyNotificationCountDocument, options);
      }
export function useFindManyNotificationCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>(FindManyNotificationCountDocument, options);
        }
export type FindManyNotificationCountQueryHookResult = ReturnType<typeof useFindManyNotificationCountQuery>;
export type FindManyNotificationCountLazyQueryHookResult = ReturnType<typeof useFindManyNotificationCountLazyQuery>;
export type FindManyNotificationCountQueryResult = Apollo.QueryResult<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>;
export const CreateOneNotificationDocument = gql`
    mutation createOneNotification($data: NotificationCreateInput!) {
  createOneNotification(data: $data) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useCreateOneNotificationMutation__
 *
 * To run a mutation, you first call `useCreateOneNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneNotificationMutation, { data, loading, error }] = useCreateOneNotificationMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneNotificationMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneNotificationMutation, CreateOneNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneNotificationMutation, CreateOneNotificationMutationVariables>(CreateOneNotificationDocument, options);
      }
export type CreateOneNotificationMutationHookResult = ReturnType<typeof useCreateOneNotificationMutation>;
export type CreateOneNotificationMutationResult = Apollo.MutationResult<CreateOneNotificationMutation>;
export type CreateOneNotificationMutationOptions = Apollo.BaseMutationOptions<CreateOneNotificationMutation, CreateOneNotificationMutationVariables>;
export const UpdateOneNotificationDocument = gql`
    mutation updateOneNotification($where: NotificationWhereUniqueInput!, $data: NotificationUpdateInput!) {
  updateOneNotification(where: $where, data: $data) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useUpdateOneNotificationMutation__
 *
 * To run a mutation, you first call `useUpdateOneNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneNotificationMutation, { data, loading, error }] = useUpdateOneNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneNotificationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneNotificationMutation, UpdateOneNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneNotificationMutation, UpdateOneNotificationMutationVariables>(UpdateOneNotificationDocument, options);
      }
export type UpdateOneNotificationMutationHookResult = ReturnType<typeof useUpdateOneNotificationMutation>;
export type UpdateOneNotificationMutationResult = Apollo.MutationResult<UpdateOneNotificationMutation>;
export type UpdateOneNotificationMutationOptions = Apollo.BaseMutationOptions<UpdateOneNotificationMutation, UpdateOneNotificationMutationVariables>;
export const DeleteOneNotificationDocument = gql`
    mutation deleteOneNotification($where: NotificationWhereUniqueInput!) {
  deleteOneNotification(where: $where) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useDeleteOneNotificationMutation__
 *
 * To run a mutation, you first call `useDeleteOneNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneNotificationMutation, { data, loading, error }] = useDeleteOneNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneNotificationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneNotificationMutation, DeleteOneNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneNotificationMutation, DeleteOneNotificationMutationVariables>(DeleteOneNotificationDocument, options);
      }
export type DeleteOneNotificationMutationHookResult = ReturnType<typeof useDeleteOneNotificationMutation>;
export type DeleteOneNotificationMutationResult = Apollo.MutationResult<DeleteOneNotificationMutation>;
export type DeleteOneNotificationMutationOptions = Apollo.BaseMutationOptions<DeleteOneNotificationMutation, DeleteOneNotificationMutationVariables>;
export const DeleteManyNotificationDocument = gql`
    mutation deleteManyNotification($where: NotificationWhereInput) {
  deleteManyNotification(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyNotificationMutation__
 *
 * To run a mutation, you first call `useDeleteManyNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyNotificationMutation, { data, loading, error }] = useDeleteManyNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyNotificationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyNotificationMutation, DeleteManyNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyNotificationMutation, DeleteManyNotificationMutationVariables>(DeleteManyNotificationDocument, options);
      }
export type DeleteManyNotificationMutationHookResult = ReturnType<typeof useDeleteManyNotificationMutation>;
export type DeleteManyNotificationMutationResult = Apollo.MutationResult<DeleteManyNotificationMutation>;
export type DeleteManyNotificationMutationOptions = Apollo.BaseMutationOptions<DeleteManyNotificationMutation, DeleteManyNotificationMutationVariables>;
export const UpdateManyNotificationDocument = gql`
    mutation updateManyNotification($where: NotificationWhereInput, $data: NotificationUpdateManyMutationInput!) {
  updateManyNotification(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyNotificationMutation__
 *
 * To run a mutation, you first call `useUpdateManyNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyNotificationMutation, { data, loading, error }] = useUpdateManyNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyNotificationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyNotificationMutation, UpdateManyNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyNotificationMutation, UpdateManyNotificationMutationVariables>(UpdateManyNotificationDocument, options);
      }
export type UpdateManyNotificationMutationHookResult = ReturnType<typeof useUpdateManyNotificationMutation>;
export type UpdateManyNotificationMutationResult = Apollo.MutationResult<UpdateManyNotificationMutation>;
export type UpdateManyNotificationMutationOptions = Apollo.BaseMutationOptions<UpdateManyNotificationMutation, UpdateManyNotificationMutationVariables>;
export const FindUniqueOrderDocument = gql`
    query findUniqueOrder($where: OrderWhereUniqueInput!) {
  findUniqueOrder(where: $where) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useFindUniqueOrderQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>(FindUniqueOrderDocument, options);
      }
export function useFindUniqueOrderLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>(FindUniqueOrderDocument, options);
        }
export type FindUniqueOrderQueryHookResult = ReturnType<typeof useFindUniqueOrderQuery>;
export type FindUniqueOrderLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderLazyQuery>;
export type FindUniqueOrderQueryResult = Apollo.QueryResult<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>;
export const FindManyOrderDocument = gql`
    query findManyOrder($where: OrderWhereInput, $orderBy: [OrderOrderByWithRelationInput!], $cursor: OrderWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrder(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useFindManyOrderQuery__
 *
 * To run a query within a React component, call `useFindManyOrderQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderQuery, FindManyOrderQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderQuery, FindManyOrderQueryVariables>(FindManyOrderDocument, options);
      }
export function useFindManyOrderLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderQuery, FindManyOrderQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderQuery, FindManyOrderQueryVariables>(FindManyOrderDocument, options);
        }
export type FindManyOrderQueryHookResult = ReturnType<typeof useFindManyOrderQuery>;
export type FindManyOrderLazyQueryHookResult = ReturnType<typeof useFindManyOrderLazyQuery>;
export type FindManyOrderQueryResult = Apollo.QueryResult<FindManyOrderQuery, FindManyOrderQueryVariables>;
export const FindManyOrderCountDocument = gql`
    query findManyOrderCount($where: OrderWhereInput, $orderBy: [OrderOrderByWithRelationInput!], $cursor: OrderWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyOrderCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>(FindManyOrderCountDocument, options);
      }
export function useFindManyOrderCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>(FindManyOrderCountDocument, options);
        }
export type FindManyOrderCountQueryHookResult = ReturnType<typeof useFindManyOrderCountQuery>;
export type FindManyOrderCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderCountLazyQuery>;
export type FindManyOrderCountQueryResult = Apollo.QueryResult<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>;
export const CreateOneOrderDocument = gql`
    mutation createOneOrder($data: OrderCreateInput!) {
  createOneOrder(data: $data) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useCreateOneOrderMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderMutation, { data, loading, error }] = useCreateOneOrderMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderMutation, CreateOneOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderMutation, CreateOneOrderMutationVariables>(CreateOneOrderDocument, options);
      }
export type CreateOneOrderMutationHookResult = ReturnType<typeof useCreateOneOrderMutation>;
export type CreateOneOrderMutationResult = Apollo.MutationResult<CreateOneOrderMutation>;
export type CreateOneOrderMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderMutation, CreateOneOrderMutationVariables>;
export const UpdateOneOrderDocument = gql`
    mutation updateOneOrder($where: OrderWhereUniqueInput!, $data: OrderUpdateInput!) {
  updateOneOrder(where: $where, data: $data) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useUpdateOneOrderMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderMutation, { data, loading, error }] = useUpdateOneOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderMutation, UpdateOneOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderMutation, UpdateOneOrderMutationVariables>(UpdateOneOrderDocument, options);
      }
export type UpdateOneOrderMutationHookResult = ReturnType<typeof useUpdateOneOrderMutation>;
export type UpdateOneOrderMutationResult = Apollo.MutationResult<UpdateOneOrderMutation>;
export type UpdateOneOrderMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderMutation, UpdateOneOrderMutationVariables>;
export const DeleteOneOrderDocument = gql`
    mutation deleteOneOrder($where: OrderWhereUniqueInput!) {
  deleteOneOrder(where: $where) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useDeleteOneOrderMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderMutation, { data, loading, error }] = useDeleteOneOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderMutation, DeleteOneOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderMutation, DeleteOneOrderMutationVariables>(DeleteOneOrderDocument, options);
      }
export type DeleteOneOrderMutationHookResult = ReturnType<typeof useDeleteOneOrderMutation>;
export type DeleteOneOrderMutationResult = Apollo.MutationResult<DeleteOneOrderMutation>;
export type DeleteOneOrderMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderMutation, DeleteOneOrderMutationVariables>;
export const DeleteManyOrderDocument = gql`
    mutation deleteManyOrder($where: OrderWhereInput) {
  deleteManyOrder(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderMutation, { data, loading, error }] = useDeleteManyOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderMutation, DeleteManyOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderMutation, DeleteManyOrderMutationVariables>(DeleteManyOrderDocument, options);
      }
export type DeleteManyOrderMutationHookResult = ReturnType<typeof useDeleteManyOrderMutation>;
export type DeleteManyOrderMutationResult = Apollo.MutationResult<DeleteManyOrderMutation>;
export type DeleteManyOrderMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderMutation, DeleteManyOrderMutationVariables>;
export const UpdateManyOrderDocument = gql`
    mutation updateManyOrder($where: OrderWhereInput, $data: OrderUpdateManyMutationInput!) {
  updateManyOrder(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderMutation, { data, loading, error }] = useUpdateManyOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderMutation, UpdateManyOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderMutation, UpdateManyOrderMutationVariables>(UpdateManyOrderDocument, options);
      }
export type UpdateManyOrderMutationHookResult = ReturnType<typeof useUpdateManyOrderMutation>;
export type UpdateManyOrderMutationResult = Apollo.MutationResult<UpdateManyOrderMutation>;
export type UpdateManyOrderMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderMutation, UpdateManyOrderMutationVariables>;
export const FindUniqueOrderedProductDocument = gql`
    query findUniqueOrderedProduct($where: OrderedProductWhereUniqueInput!) {
  findUniqueOrderedProduct(where: $where) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useFindUniqueOrderedProductQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedProductQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>(FindUniqueOrderedProductDocument, options);
      }
export function useFindUniqueOrderedProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>(FindUniqueOrderedProductDocument, options);
        }
export type FindUniqueOrderedProductQueryHookResult = ReturnType<typeof useFindUniqueOrderedProductQuery>;
export type FindUniqueOrderedProductLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedProductLazyQuery>;
export type FindUniqueOrderedProductQueryResult = Apollo.QueryResult<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>;
export const FindManyOrderedProductDocument = gql`
    query findManyOrderedProduct($where: OrderedProductWhereInput, $orderBy: [OrderedProductOrderByWithRelationInput!], $cursor: OrderedProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedProduct(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useFindManyOrderedProductQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedProductQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>(FindManyOrderedProductDocument, options);
      }
export function useFindManyOrderedProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>(FindManyOrderedProductDocument, options);
        }
export type FindManyOrderedProductQueryHookResult = ReturnType<typeof useFindManyOrderedProductQuery>;
export type FindManyOrderedProductLazyQueryHookResult = ReturnType<typeof useFindManyOrderedProductLazyQuery>;
export type FindManyOrderedProductQueryResult = Apollo.QueryResult<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>;
export const FindManyOrderedProductCountDocument = gql`
    query findManyOrderedProductCount($where: OrderedProductWhereInput, $orderBy: [OrderedProductOrderByWithRelationInput!], $cursor: OrderedProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedProductCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyOrderedProductCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedProductCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedProductCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedProductCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedProductCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>(FindManyOrderedProductCountDocument, options);
      }
export function useFindManyOrderedProductCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>(FindManyOrderedProductCountDocument, options);
        }
export type FindManyOrderedProductCountQueryHookResult = ReturnType<typeof useFindManyOrderedProductCountQuery>;
export type FindManyOrderedProductCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedProductCountLazyQuery>;
export type FindManyOrderedProductCountQueryResult = Apollo.QueryResult<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>;
export const CreateOneOrderedProductDocument = gql`
    mutation createOneOrderedProduct($data: OrderedProductCreateInput!) {
  createOneOrderedProduct(data: $data) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useCreateOneOrderedProductMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedProductMutation, { data, loading, error }] = useCreateOneOrderedProductMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedProductMutation, CreateOneOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedProductMutation, CreateOneOrderedProductMutationVariables>(CreateOneOrderedProductDocument, options);
      }
export type CreateOneOrderedProductMutationHookResult = ReturnType<typeof useCreateOneOrderedProductMutation>;
export type CreateOneOrderedProductMutationResult = Apollo.MutationResult<CreateOneOrderedProductMutation>;
export type CreateOneOrderedProductMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedProductMutation, CreateOneOrderedProductMutationVariables>;
export const UpdateOneOrderedProductDocument = gql`
    mutation updateOneOrderedProduct($where: OrderedProductWhereUniqueInput!, $data: OrderedProductUpdateInput!) {
  updateOneOrderedProduct(where: $where, data: $data) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useUpdateOneOrderedProductMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedProductMutation, { data, loading, error }] = useUpdateOneOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedProductMutation, UpdateOneOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedProductMutation, UpdateOneOrderedProductMutationVariables>(UpdateOneOrderedProductDocument, options);
      }
export type UpdateOneOrderedProductMutationHookResult = ReturnType<typeof useUpdateOneOrderedProductMutation>;
export type UpdateOneOrderedProductMutationResult = Apollo.MutationResult<UpdateOneOrderedProductMutation>;
export type UpdateOneOrderedProductMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedProductMutation, UpdateOneOrderedProductMutationVariables>;
export const DeleteOneOrderedProductDocument = gql`
    mutation deleteOneOrderedProduct($where: OrderedProductWhereUniqueInput!) {
  deleteOneOrderedProduct(where: $where) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useDeleteOneOrderedProductMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedProductMutation, { data, loading, error }] = useDeleteOneOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedProductMutation, DeleteOneOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedProductMutation, DeleteOneOrderedProductMutationVariables>(DeleteOneOrderedProductDocument, options);
      }
export type DeleteOneOrderedProductMutationHookResult = ReturnType<typeof useDeleteOneOrderedProductMutation>;
export type DeleteOneOrderedProductMutationResult = Apollo.MutationResult<DeleteOneOrderedProductMutation>;
export type DeleteOneOrderedProductMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedProductMutation, DeleteOneOrderedProductMutationVariables>;
export const DeleteManyOrderedProductDocument = gql`
    mutation deleteManyOrderedProduct($where: OrderedProductWhereInput) {
  deleteManyOrderedProduct(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedProductMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedProductMutation, { data, loading, error }] = useDeleteManyOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedProductMutation, DeleteManyOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedProductMutation, DeleteManyOrderedProductMutationVariables>(DeleteManyOrderedProductDocument, options);
      }
export type DeleteManyOrderedProductMutationHookResult = ReturnType<typeof useDeleteManyOrderedProductMutation>;
export type DeleteManyOrderedProductMutationResult = Apollo.MutationResult<DeleteManyOrderedProductMutation>;
export type DeleteManyOrderedProductMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedProductMutation, DeleteManyOrderedProductMutationVariables>;
export const UpdateManyOrderedProductDocument = gql`
    mutation updateManyOrderedProduct($where: OrderedProductWhereInput, $data: OrderedProductUpdateManyMutationInput!) {
  updateManyOrderedProduct(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedProductMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedProductMutation, { data, loading, error }] = useUpdateManyOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedProductMutation, UpdateManyOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedProductMutation, UpdateManyOrderedProductMutationVariables>(UpdateManyOrderedProductDocument, options);
      }
export type UpdateManyOrderedProductMutationHookResult = ReturnType<typeof useUpdateManyOrderedProductMutation>;
export type UpdateManyOrderedProductMutationResult = Apollo.MutationResult<UpdateManyOrderedProductMutation>;
export type UpdateManyOrderedProductMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedProductMutation, UpdateManyOrderedProductMutationVariables>;
export const FindUniqueOrganizationDocument = gql`
    query findUniqueOrganization($where: OrganizationWhereUniqueInput!) {
  findUniqueOrganization(where: $where) {
    ...Organization
  }
}
    ${OrganizationFragmentDoc}`;

/**
 * __useFindUniqueOrganizationQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrganizationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrganizationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrganizationQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrganizationQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrganizationQuery, FindUniqueOrganizationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrganizationQuery, FindUniqueOrganizationQueryVariables>(FindUniqueOrganizationDocument, options);
      }
export function useFindUniqueOrganizationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrganizationQuery, FindUniqueOrganizationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrganizationQuery, FindUniqueOrganizationQueryVariables>(FindUniqueOrganizationDocument, options);
        }
export type FindUniqueOrganizationQueryHookResult = ReturnType<typeof useFindUniqueOrganizationQuery>;
export type FindUniqueOrganizationLazyQueryHookResult = ReturnType<typeof useFindUniqueOrganizationLazyQuery>;
export type FindUniqueOrganizationQueryResult = Apollo.QueryResult<FindUniqueOrganizationQuery, FindUniqueOrganizationQueryVariables>;
export const FindManyOrganizationDocument = gql`
    query findManyOrganization($where: OrganizationWhereInput, $orderBy: [OrganizationOrderByWithRelationInput!], $cursor: OrganizationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrganization(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Organization
  }
}
    ${OrganizationFragmentDoc}`;

/**
 * __useFindManyOrganizationQuery__
 *
 * To run a query within a React component, call `useFindManyOrganizationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrganizationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrganizationQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrganizationQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrganizationQuery, FindManyOrganizationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrganizationQuery, FindManyOrganizationQueryVariables>(FindManyOrganizationDocument, options);
      }
export function useFindManyOrganizationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrganizationQuery, FindManyOrganizationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrganizationQuery, FindManyOrganizationQueryVariables>(FindManyOrganizationDocument, options);
        }
export type FindManyOrganizationQueryHookResult = ReturnType<typeof useFindManyOrganizationQuery>;
export type FindManyOrganizationLazyQueryHookResult = ReturnType<typeof useFindManyOrganizationLazyQuery>;
export type FindManyOrganizationQueryResult = Apollo.QueryResult<FindManyOrganizationQuery, FindManyOrganizationQueryVariables>;
export const FindManyOrganizationCountDocument = gql`
    query findManyOrganizationCount($where: OrganizationWhereInput, $orderBy: [OrganizationOrderByWithRelationInput!], $cursor: OrganizationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrganizationCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyOrganizationCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrganizationCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrganizationCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrganizationCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrganizationCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrganizationCountQuery, FindManyOrganizationCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrganizationCountQuery, FindManyOrganizationCountQueryVariables>(FindManyOrganizationCountDocument, options);
      }
export function useFindManyOrganizationCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrganizationCountQuery, FindManyOrganizationCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrganizationCountQuery, FindManyOrganizationCountQueryVariables>(FindManyOrganizationCountDocument, options);
        }
export type FindManyOrganizationCountQueryHookResult = ReturnType<typeof useFindManyOrganizationCountQuery>;
export type FindManyOrganizationCountLazyQueryHookResult = ReturnType<typeof useFindManyOrganizationCountLazyQuery>;
export type FindManyOrganizationCountQueryResult = Apollo.QueryResult<FindManyOrganizationCountQuery, FindManyOrganizationCountQueryVariables>;
export const CreateOneOrganizationDocument = gql`
    mutation createOneOrganization($data: OrganizationCreateInput!) {
  createOneOrganization(data: $data) {
    ...Organization
  }
}
    ${OrganizationFragmentDoc}`;

/**
 * __useCreateOneOrganizationMutation__
 *
 * To run a mutation, you first call `useCreateOneOrganizationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrganizationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrganizationMutation, { data, loading, error }] = useCreateOneOrganizationMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrganizationMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrganizationMutation, CreateOneOrganizationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrganizationMutation, CreateOneOrganizationMutationVariables>(CreateOneOrganizationDocument, options);
      }
export type CreateOneOrganizationMutationHookResult = ReturnType<typeof useCreateOneOrganizationMutation>;
export type CreateOneOrganizationMutationResult = Apollo.MutationResult<CreateOneOrganizationMutation>;
export type CreateOneOrganizationMutationOptions = Apollo.BaseMutationOptions<CreateOneOrganizationMutation, CreateOneOrganizationMutationVariables>;
export const UpdateOneOrganizationDocument = gql`
    mutation updateOneOrganization($where: OrganizationWhereUniqueInput!, $data: OrganizationUpdateInput!) {
  updateOneOrganization(where: $where, data: $data) {
    ...Organization
  }
}
    ${OrganizationFragmentDoc}`;

/**
 * __useUpdateOneOrganizationMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrganizationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrganizationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrganizationMutation, { data, loading, error }] = useUpdateOneOrganizationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrganizationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrganizationMutation, UpdateOneOrganizationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrganizationMutation, UpdateOneOrganizationMutationVariables>(UpdateOneOrganizationDocument, options);
      }
export type UpdateOneOrganizationMutationHookResult = ReturnType<typeof useUpdateOneOrganizationMutation>;
export type UpdateOneOrganizationMutationResult = Apollo.MutationResult<UpdateOneOrganizationMutation>;
export type UpdateOneOrganizationMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrganizationMutation, UpdateOneOrganizationMutationVariables>;
export const DeleteOneOrganizationDocument = gql`
    mutation deleteOneOrganization($where: OrganizationWhereUniqueInput!) {
  deleteOneOrganization(where: $where) {
    ...Organization
  }
}
    ${OrganizationFragmentDoc}`;

/**
 * __useDeleteOneOrganizationMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrganizationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrganizationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrganizationMutation, { data, loading, error }] = useDeleteOneOrganizationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrganizationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrganizationMutation, DeleteOneOrganizationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrganizationMutation, DeleteOneOrganizationMutationVariables>(DeleteOneOrganizationDocument, options);
      }
export type DeleteOneOrganizationMutationHookResult = ReturnType<typeof useDeleteOneOrganizationMutation>;
export type DeleteOneOrganizationMutationResult = Apollo.MutationResult<DeleteOneOrganizationMutation>;
export type DeleteOneOrganizationMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrganizationMutation, DeleteOneOrganizationMutationVariables>;
export const DeleteManyOrganizationDocument = gql`
    mutation deleteManyOrganization($where: OrganizationWhereInput) {
  deleteManyOrganization(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrganizationMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrganizationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrganizationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrganizationMutation, { data, loading, error }] = useDeleteManyOrganizationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrganizationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrganizationMutation, DeleteManyOrganizationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrganizationMutation, DeleteManyOrganizationMutationVariables>(DeleteManyOrganizationDocument, options);
      }
export type DeleteManyOrganizationMutationHookResult = ReturnType<typeof useDeleteManyOrganizationMutation>;
export type DeleteManyOrganizationMutationResult = Apollo.MutationResult<DeleteManyOrganizationMutation>;
export type DeleteManyOrganizationMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrganizationMutation, DeleteManyOrganizationMutationVariables>;
export const UpdateManyOrganizationDocument = gql`
    mutation updateManyOrganization($where: OrganizationWhereInput, $data: OrganizationUpdateManyMutationInput!) {
  updateManyOrganization(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrganizationMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrganizationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrganizationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrganizationMutation, { data, loading, error }] = useUpdateManyOrganizationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrganizationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrganizationMutation, UpdateManyOrganizationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrganizationMutation, UpdateManyOrganizationMutationVariables>(UpdateManyOrganizationDocument, options);
      }
export type UpdateManyOrganizationMutationHookResult = ReturnType<typeof useUpdateManyOrganizationMutation>;
export type UpdateManyOrganizationMutationResult = Apollo.MutationResult<UpdateManyOrganizationMutation>;
export type UpdateManyOrganizationMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrganizationMutation, UpdateManyOrganizationMutationVariables>;
export const FindUniquePageDocument = gql`
    query findUniquePage($where: PageWhereUniqueInput!) {
  findUniquePage(where: $where) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useFindUniquePageQuery__
 *
 * To run a query within a React component, call `useFindUniquePageQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniquePageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniquePageQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniquePageQuery(baseOptions: Apollo.QueryHookOptions<FindUniquePageQuery, FindUniquePageQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniquePageQuery, FindUniquePageQueryVariables>(FindUniquePageDocument, options);
      }
export function useFindUniquePageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniquePageQuery, FindUniquePageQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniquePageQuery, FindUniquePageQueryVariables>(FindUniquePageDocument, options);
        }
export type FindUniquePageQueryHookResult = ReturnType<typeof useFindUniquePageQuery>;
export type FindUniquePageLazyQueryHookResult = ReturnType<typeof useFindUniquePageLazyQuery>;
export type FindUniquePageQueryResult = Apollo.QueryResult<FindUniquePageQuery, FindUniquePageQueryVariables>;
export const FindManyPageDocument = gql`
    query findManyPage($where: PageWhereInput, $orderBy: [PageOrderByWithRelationInput!], $cursor: PageWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPage(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useFindManyPageQuery__
 *
 * To run a query within a React component, call `useFindManyPageQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageQuery, FindManyPageQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageQuery, FindManyPageQueryVariables>(FindManyPageDocument, options);
      }
export function useFindManyPageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageQuery, FindManyPageQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageQuery, FindManyPageQueryVariables>(FindManyPageDocument, options);
        }
export type FindManyPageQueryHookResult = ReturnType<typeof useFindManyPageQuery>;
export type FindManyPageLazyQueryHookResult = ReturnType<typeof useFindManyPageLazyQuery>;
export type FindManyPageQueryResult = Apollo.QueryResult<FindManyPageQuery, FindManyPageQueryVariables>;
export const FindManyPageCountDocument = gql`
    query findManyPageCount($where: PageWhereInput, $orderBy: [PageOrderByWithRelationInput!], $cursor: PageWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyPageCountQuery__
 *
 * To run a query within a React component, call `useFindManyPageCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageCountQuery, FindManyPageCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageCountQuery, FindManyPageCountQueryVariables>(FindManyPageCountDocument, options);
      }
export function useFindManyPageCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageCountQuery, FindManyPageCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageCountQuery, FindManyPageCountQueryVariables>(FindManyPageCountDocument, options);
        }
export type FindManyPageCountQueryHookResult = ReturnType<typeof useFindManyPageCountQuery>;
export type FindManyPageCountLazyQueryHookResult = ReturnType<typeof useFindManyPageCountLazyQuery>;
export type FindManyPageCountQueryResult = Apollo.QueryResult<FindManyPageCountQuery, FindManyPageCountQueryVariables>;
export const CreateOnePageDocument = gql`
    mutation createOnePage($data: PageCreateInput!) {
  createOnePage(data: $data) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useCreateOnePageMutation__
 *
 * To run a mutation, you first call `useCreateOnePageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOnePageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOnePageMutation, { data, loading, error }] = useCreateOnePageMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOnePageMutation(baseOptions?: Apollo.MutationHookOptions<CreateOnePageMutation, CreateOnePageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOnePageMutation, CreateOnePageMutationVariables>(CreateOnePageDocument, options);
      }
export type CreateOnePageMutationHookResult = ReturnType<typeof useCreateOnePageMutation>;
export type CreateOnePageMutationResult = Apollo.MutationResult<CreateOnePageMutation>;
export type CreateOnePageMutationOptions = Apollo.BaseMutationOptions<CreateOnePageMutation, CreateOnePageMutationVariables>;
export const UpdateOnePageDocument = gql`
    mutation updateOnePage($where: PageWhereUniqueInput!, $data: PageUpdateInput!) {
  updateOnePage(where: $where, data: $data) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useUpdateOnePageMutation__
 *
 * To run a mutation, you first call `useUpdateOnePageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOnePageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOnePageMutation, { data, loading, error }] = useUpdateOnePageMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOnePageMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOnePageMutation, UpdateOnePageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOnePageMutation, UpdateOnePageMutationVariables>(UpdateOnePageDocument, options);
      }
export type UpdateOnePageMutationHookResult = ReturnType<typeof useUpdateOnePageMutation>;
export type UpdateOnePageMutationResult = Apollo.MutationResult<UpdateOnePageMutation>;
export type UpdateOnePageMutationOptions = Apollo.BaseMutationOptions<UpdateOnePageMutation, UpdateOnePageMutationVariables>;
export const DeleteOnePageDocument = gql`
    mutation deleteOnePage($where: PageWhereUniqueInput!) {
  deleteOnePage(where: $where) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useDeleteOnePageMutation__
 *
 * To run a mutation, you first call `useDeleteOnePageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOnePageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOnePageMutation, { data, loading, error }] = useDeleteOnePageMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOnePageMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOnePageMutation, DeleteOnePageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOnePageMutation, DeleteOnePageMutationVariables>(DeleteOnePageDocument, options);
      }
export type DeleteOnePageMutationHookResult = ReturnType<typeof useDeleteOnePageMutation>;
export type DeleteOnePageMutationResult = Apollo.MutationResult<DeleteOnePageMutation>;
export type DeleteOnePageMutationOptions = Apollo.BaseMutationOptions<DeleteOnePageMutation, DeleteOnePageMutationVariables>;
export const DeleteManyPageDocument = gql`
    mutation deleteManyPage($where: PageWhereInput) {
  deleteManyPage(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyPageMutation__
 *
 * To run a mutation, you first call `useDeleteManyPageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyPageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyPageMutation, { data, loading, error }] = useDeleteManyPageMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyPageMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyPageMutation, DeleteManyPageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyPageMutation, DeleteManyPageMutationVariables>(DeleteManyPageDocument, options);
      }
export type DeleteManyPageMutationHookResult = ReturnType<typeof useDeleteManyPageMutation>;
export type DeleteManyPageMutationResult = Apollo.MutationResult<DeleteManyPageMutation>;
export type DeleteManyPageMutationOptions = Apollo.BaseMutationOptions<DeleteManyPageMutation, DeleteManyPageMutationVariables>;
export const UpdateManyPageDocument = gql`
    mutation updateManyPage($where: PageWhereInput, $data: PageUpdateManyMutationInput!) {
  updateManyPage(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyPageMutation__
 *
 * To run a mutation, you first call `useUpdateManyPageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyPageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyPageMutation, { data, loading, error }] = useUpdateManyPageMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyPageMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyPageMutation, UpdateManyPageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyPageMutation, UpdateManyPageMutationVariables>(UpdateManyPageDocument, options);
      }
export type UpdateManyPageMutationHookResult = ReturnType<typeof useUpdateManyPageMutation>;
export type UpdateManyPageMutationResult = Apollo.MutationResult<UpdateManyPageMutation>;
export type UpdateManyPageMutationOptions = Apollo.BaseMutationOptions<UpdateManyPageMutation, UpdateManyPageMutationVariables>;
export const FindUniquePageCollectionDocument = gql`
    query findUniquePageCollection($where: PageCollectionWhereUniqueInput!) {
  findUniquePageCollection(where: $where) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useFindUniquePageCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniquePageCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniquePageCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniquePageCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniquePageCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>(FindUniquePageCollectionDocument, options);
      }
export function useFindUniquePageCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>(FindUniquePageCollectionDocument, options);
        }
export type FindUniquePageCollectionQueryHookResult = ReturnType<typeof useFindUniquePageCollectionQuery>;
export type FindUniquePageCollectionLazyQueryHookResult = ReturnType<typeof useFindUniquePageCollectionLazyQuery>;
export type FindUniquePageCollectionQueryResult = Apollo.QueryResult<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>;
export const FindManyPageCollectionDocument = gql`
    query findManyPageCollection($where: PageCollectionWhereInput, $orderBy: [PageCollectionOrderByWithRelationInput!], $cursor: PageCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageCollection(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useFindManyPageCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyPageCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>(FindManyPageCollectionDocument, options);
      }
export function useFindManyPageCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>(FindManyPageCollectionDocument, options);
        }
export type FindManyPageCollectionQueryHookResult = ReturnType<typeof useFindManyPageCollectionQuery>;
export type FindManyPageCollectionLazyQueryHookResult = ReturnType<typeof useFindManyPageCollectionLazyQuery>;
export type FindManyPageCollectionQueryResult = Apollo.QueryResult<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>;
export const FindManyPageCollectionCountDocument = gql`
    query findManyPageCollectionCount($where: PageCollectionWhereInput, $orderBy: [PageCollectionOrderByWithRelationInput!], $cursor: PageCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageCollectionCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyPageCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyPageCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>(FindManyPageCollectionCountDocument, options);
      }
export function useFindManyPageCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>(FindManyPageCollectionCountDocument, options);
        }
export type FindManyPageCollectionCountQueryHookResult = ReturnType<typeof useFindManyPageCollectionCountQuery>;
export type FindManyPageCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyPageCollectionCountLazyQuery>;
export type FindManyPageCollectionCountQueryResult = Apollo.QueryResult<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>;
export const CreateOnePageCollectionDocument = gql`
    mutation createOnePageCollection($data: PageCollectionCreateInput!) {
  createOnePageCollection(data: $data) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useCreateOnePageCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOnePageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOnePageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOnePageCollectionMutation, { data, loading, error }] = useCreateOnePageCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOnePageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOnePageCollectionMutation, CreateOnePageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOnePageCollectionMutation, CreateOnePageCollectionMutationVariables>(CreateOnePageCollectionDocument, options);
      }
export type CreateOnePageCollectionMutationHookResult = ReturnType<typeof useCreateOnePageCollectionMutation>;
export type CreateOnePageCollectionMutationResult = Apollo.MutationResult<CreateOnePageCollectionMutation>;
export type CreateOnePageCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOnePageCollectionMutation, CreateOnePageCollectionMutationVariables>;
export const UpdateOnePageCollectionDocument = gql`
    mutation updateOnePageCollection($where: PageCollectionWhereUniqueInput!, $data: PageCollectionUpdateInput!) {
  updateOnePageCollection(where: $where, data: $data) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useUpdateOnePageCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOnePageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOnePageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOnePageCollectionMutation, { data, loading, error }] = useUpdateOnePageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOnePageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOnePageCollectionMutation, UpdateOnePageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOnePageCollectionMutation, UpdateOnePageCollectionMutationVariables>(UpdateOnePageCollectionDocument, options);
      }
export type UpdateOnePageCollectionMutationHookResult = ReturnType<typeof useUpdateOnePageCollectionMutation>;
export type UpdateOnePageCollectionMutationResult = Apollo.MutationResult<UpdateOnePageCollectionMutation>;
export type UpdateOnePageCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOnePageCollectionMutation, UpdateOnePageCollectionMutationVariables>;
export const DeleteOnePageCollectionDocument = gql`
    mutation deleteOnePageCollection($where: PageCollectionWhereUniqueInput!) {
  deleteOnePageCollection(where: $where) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useDeleteOnePageCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOnePageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOnePageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOnePageCollectionMutation, { data, loading, error }] = useDeleteOnePageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOnePageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOnePageCollectionMutation, DeleteOnePageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOnePageCollectionMutation, DeleteOnePageCollectionMutationVariables>(DeleteOnePageCollectionDocument, options);
      }
export type DeleteOnePageCollectionMutationHookResult = ReturnType<typeof useDeleteOnePageCollectionMutation>;
export type DeleteOnePageCollectionMutationResult = Apollo.MutationResult<DeleteOnePageCollectionMutation>;
export type DeleteOnePageCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOnePageCollectionMutation, DeleteOnePageCollectionMutationVariables>;
export const DeleteManyPageCollectionDocument = gql`
    mutation deleteManyPageCollection($where: PageCollectionWhereInput) {
  deleteManyPageCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyPageCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyPageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyPageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyPageCollectionMutation, { data, loading, error }] = useDeleteManyPageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyPageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyPageCollectionMutation, DeleteManyPageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyPageCollectionMutation, DeleteManyPageCollectionMutationVariables>(DeleteManyPageCollectionDocument, options);
      }
export type DeleteManyPageCollectionMutationHookResult = ReturnType<typeof useDeleteManyPageCollectionMutation>;
export type DeleteManyPageCollectionMutationResult = Apollo.MutationResult<DeleteManyPageCollectionMutation>;
export type DeleteManyPageCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyPageCollectionMutation, DeleteManyPageCollectionMutationVariables>;
export const UpdateManyPageCollectionDocument = gql`
    mutation updateManyPageCollection($where: PageCollectionWhereInput, $data: PageCollectionUpdateManyMutationInput!) {
  updateManyPageCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyPageCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyPageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyPageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyPageCollectionMutation, { data, loading, error }] = useUpdateManyPageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyPageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyPageCollectionMutation, UpdateManyPageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyPageCollectionMutation, UpdateManyPageCollectionMutationVariables>(UpdateManyPageCollectionDocument, options);
      }
export type UpdateManyPageCollectionMutationHookResult = ReturnType<typeof useUpdateManyPageCollectionMutation>;
export type UpdateManyPageCollectionMutationResult = Apollo.MutationResult<UpdateManyPageCollectionMutation>;
export type UpdateManyPageCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyPageCollectionMutation, UpdateManyPageCollectionMutationVariables>;
export const FindUniquePageViewDocument = gql`
    query findUniquePageView($where: PageViewWhereUniqueInput!) {
  findUniquePageView(where: $where) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useFindUniquePageViewQuery__
 *
 * To run a query within a React component, call `useFindUniquePageViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniquePageViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniquePageViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniquePageViewQuery(baseOptions: Apollo.QueryHookOptions<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>(FindUniquePageViewDocument, options);
      }
export function useFindUniquePageViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>(FindUniquePageViewDocument, options);
        }
export type FindUniquePageViewQueryHookResult = ReturnType<typeof useFindUniquePageViewQuery>;
export type FindUniquePageViewLazyQueryHookResult = ReturnType<typeof useFindUniquePageViewLazyQuery>;
export type FindUniquePageViewQueryResult = Apollo.QueryResult<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>;
export const FindManyPageViewDocument = gql`
    query findManyPageView($where: PageViewWhereInput, $orderBy: [PageViewOrderByWithRelationInput!], $cursor: PageViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageView(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useFindManyPageViewQuery__
 *
 * To run a query within a React component, call `useFindManyPageViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageViewQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageViewQuery, FindManyPageViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageViewQuery, FindManyPageViewQueryVariables>(FindManyPageViewDocument, options);
      }
export function useFindManyPageViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageViewQuery, FindManyPageViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageViewQuery, FindManyPageViewQueryVariables>(FindManyPageViewDocument, options);
        }
export type FindManyPageViewQueryHookResult = ReturnType<typeof useFindManyPageViewQuery>;
export type FindManyPageViewLazyQueryHookResult = ReturnType<typeof useFindManyPageViewLazyQuery>;
export type FindManyPageViewQueryResult = Apollo.QueryResult<FindManyPageViewQuery, FindManyPageViewQueryVariables>;
export const FindManyPageViewCountDocument = gql`
    query findManyPageViewCount($where: PageViewWhereInput, $orderBy: [PageViewOrderByWithRelationInput!], $cursor: PageViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageViewCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyPageViewCountQuery__
 *
 * To run a query within a React component, call `useFindManyPageViewCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageViewCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageViewCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageViewCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>(FindManyPageViewCountDocument, options);
      }
export function useFindManyPageViewCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>(FindManyPageViewCountDocument, options);
        }
export type FindManyPageViewCountQueryHookResult = ReturnType<typeof useFindManyPageViewCountQuery>;
export type FindManyPageViewCountLazyQueryHookResult = ReturnType<typeof useFindManyPageViewCountLazyQuery>;
export type FindManyPageViewCountQueryResult = Apollo.QueryResult<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>;
export const CreateOnePageViewDocument = gql`
    mutation createOnePageView($data: PageViewCreateInput!) {
  createOnePageView(data: $data) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useCreateOnePageViewMutation__
 *
 * To run a mutation, you first call `useCreateOnePageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOnePageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOnePageViewMutation, { data, loading, error }] = useCreateOnePageViewMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOnePageViewMutation(baseOptions?: Apollo.MutationHookOptions<CreateOnePageViewMutation, CreateOnePageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOnePageViewMutation, CreateOnePageViewMutationVariables>(CreateOnePageViewDocument, options);
      }
export type CreateOnePageViewMutationHookResult = ReturnType<typeof useCreateOnePageViewMutation>;
export type CreateOnePageViewMutationResult = Apollo.MutationResult<CreateOnePageViewMutation>;
export type CreateOnePageViewMutationOptions = Apollo.BaseMutationOptions<CreateOnePageViewMutation, CreateOnePageViewMutationVariables>;
export const UpdateOnePageViewDocument = gql`
    mutation updateOnePageView($where: PageViewWhereUniqueInput!, $data: PageViewUpdateInput!) {
  updateOnePageView(where: $where, data: $data) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useUpdateOnePageViewMutation__
 *
 * To run a mutation, you first call `useUpdateOnePageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOnePageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOnePageViewMutation, { data, loading, error }] = useUpdateOnePageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOnePageViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOnePageViewMutation, UpdateOnePageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOnePageViewMutation, UpdateOnePageViewMutationVariables>(UpdateOnePageViewDocument, options);
      }
export type UpdateOnePageViewMutationHookResult = ReturnType<typeof useUpdateOnePageViewMutation>;
export type UpdateOnePageViewMutationResult = Apollo.MutationResult<UpdateOnePageViewMutation>;
export type UpdateOnePageViewMutationOptions = Apollo.BaseMutationOptions<UpdateOnePageViewMutation, UpdateOnePageViewMutationVariables>;
export const DeleteOnePageViewDocument = gql`
    mutation deleteOnePageView($where: PageViewWhereUniqueInput!) {
  deleteOnePageView(where: $where) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useDeleteOnePageViewMutation__
 *
 * To run a mutation, you first call `useDeleteOnePageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOnePageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOnePageViewMutation, { data, loading, error }] = useDeleteOnePageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOnePageViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOnePageViewMutation, DeleteOnePageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOnePageViewMutation, DeleteOnePageViewMutationVariables>(DeleteOnePageViewDocument, options);
      }
export type DeleteOnePageViewMutationHookResult = ReturnType<typeof useDeleteOnePageViewMutation>;
export type DeleteOnePageViewMutationResult = Apollo.MutationResult<DeleteOnePageViewMutation>;
export type DeleteOnePageViewMutationOptions = Apollo.BaseMutationOptions<DeleteOnePageViewMutation, DeleteOnePageViewMutationVariables>;
export const DeleteManyPageViewDocument = gql`
    mutation deleteManyPageView($where: PageViewWhereInput) {
  deleteManyPageView(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyPageViewMutation__
 *
 * To run a mutation, you first call `useDeleteManyPageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyPageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyPageViewMutation, { data, loading, error }] = useDeleteManyPageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyPageViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyPageViewMutation, DeleteManyPageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyPageViewMutation, DeleteManyPageViewMutationVariables>(DeleteManyPageViewDocument, options);
      }
export type DeleteManyPageViewMutationHookResult = ReturnType<typeof useDeleteManyPageViewMutation>;
export type DeleteManyPageViewMutationResult = Apollo.MutationResult<DeleteManyPageViewMutation>;
export type DeleteManyPageViewMutationOptions = Apollo.BaseMutationOptions<DeleteManyPageViewMutation, DeleteManyPageViewMutationVariables>;
export const UpdateManyPageViewDocument = gql`
    mutation updateManyPageView($where: PageViewWhereInput, $data: PageViewUpdateManyMutationInput!) {
  updateManyPageView(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyPageViewMutation__
 *
 * To run a mutation, you first call `useUpdateManyPageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyPageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyPageViewMutation, { data, loading, error }] = useUpdateManyPageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyPageViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyPageViewMutation, UpdateManyPageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyPageViewMutation, UpdateManyPageViewMutationVariables>(UpdateManyPageViewDocument, options);
      }
export type UpdateManyPageViewMutationHookResult = ReturnType<typeof useUpdateManyPageViewMutation>;
export type UpdateManyPageViewMutationResult = Apollo.MutationResult<UpdateManyPageViewMutation>;
export type UpdateManyPageViewMutationOptions = Apollo.BaseMutationOptions<UpdateManyPageViewMutation, UpdateManyPageViewMutationVariables>;
export const FindUniqueProductDocument = gql`
    query findUniqueProduct($where: ProductWhereUniqueInput!) {
  findUniqueProduct(where: $where) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useFindUniqueProductQuery__
 *
 * To run a query within a React component, call `useFindUniqueProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueProductQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueProductQuery, FindUniqueProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueProductQuery, FindUniqueProductQueryVariables>(FindUniqueProductDocument, options);
      }
export function useFindUniqueProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueProductQuery, FindUniqueProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueProductQuery, FindUniqueProductQueryVariables>(FindUniqueProductDocument, options);
        }
export type FindUniqueProductQueryHookResult = ReturnType<typeof useFindUniqueProductQuery>;
export type FindUniqueProductLazyQueryHookResult = ReturnType<typeof useFindUniqueProductLazyQuery>;
export type FindUniqueProductQueryResult = Apollo.QueryResult<FindUniqueProductQuery, FindUniqueProductQueryVariables>;
export const FindManyProductDocument = gql`
    query findManyProduct($where: ProductWhereInput, $orderBy: [ProductOrderByWithRelationInput!], $cursor: ProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProduct(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useFindManyProductQuery__
 *
 * To run a query within a React component, call `useFindManyProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductQuery, FindManyProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductQuery, FindManyProductQueryVariables>(FindManyProductDocument, options);
      }
export function useFindManyProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductQuery, FindManyProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductQuery, FindManyProductQueryVariables>(FindManyProductDocument, options);
        }
export type FindManyProductQueryHookResult = ReturnType<typeof useFindManyProductQuery>;
export type FindManyProductLazyQueryHookResult = ReturnType<typeof useFindManyProductLazyQuery>;
export type FindManyProductQueryResult = Apollo.QueryResult<FindManyProductQuery, FindManyProductQueryVariables>;
export const FindManyProductCountDocument = gql`
    query findManyProductCount($where: ProductWhereInput, $orderBy: [ProductOrderByWithRelationInput!], $cursor: ProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyProductCountQuery__
 *
 * To run a query within a React component, call `useFindManyProductCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductCountQuery, FindManyProductCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductCountQuery, FindManyProductCountQueryVariables>(FindManyProductCountDocument, options);
      }
export function useFindManyProductCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductCountQuery, FindManyProductCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductCountQuery, FindManyProductCountQueryVariables>(FindManyProductCountDocument, options);
        }
export type FindManyProductCountQueryHookResult = ReturnType<typeof useFindManyProductCountQuery>;
export type FindManyProductCountLazyQueryHookResult = ReturnType<typeof useFindManyProductCountLazyQuery>;
export type FindManyProductCountQueryResult = Apollo.QueryResult<FindManyProductCountQuery, FindManyProductCountQueryVariables>;
export const CreateOneProductDocument = gql`
    mutation createOneProduct($data: ProductCreateInput!) {
  createOneProduct(data: $data) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useCreateOneProductMutation__
 *
 * To run a mutation, you first call `useCreateOneProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneProductMutation, { data, loading, error }] = useCreateOneProductMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneProductMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneProductMutation, CreateOneProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneProductMutation, CreateOneProductMutationVariables>(CreateOneProductDocument, options);
      }
export type CreateOneProductMutationHookResult = ReturnType<typeof useCreateOneProductMutation>;
export type CreateOneProductMutationResult = Apollo.MutationResult<CreateOneProductMutation>;
export type CreateOneProductMutationOptions = Apollo.BaseMutationOptions<CreateOneProductMutation, CreateOneProductMutationVariables>;
export const UpdateOneProductDocument = gql`
    mutation updateOneProduct($where: ProductWhereUniqueInput!, $data: ProductUpdateInput!) {
  updateOneProduct(where: $where, data: $data) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useUpdateOneProductMutation__
 *
 * To run a mutation, you first call `useUpdateOneProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneProductMutation, { data, loading, error }] = useUpdateOneProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneProductMutation, UpdateOneProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneProductMutation, UpdateOneProductMutationVariables>(UpdateOneProductDocument, options);
      }
export type UpdateOneProductMutationHookResult = ReturnType<typeof useUpdateOneProductMutation>;
export type UpdateOneProductMutationResult = Apollo.MutationResult<UpdateOneProductMutation>;
export type UpdateOneProductMutationOptions = Apollo.BaseMutationOptions<UpdateOneProductMutation, UpdateOneProductMutationVariables>;
export const DeleteOneProductDocument = gql`
    mutation deleteOneProduct($where: ProductWhereUniqueInput!) {
  deleteOneProduct(where: $where) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useDeleteOneProductMutation__
 *
 * To run a mutation, you first call `useDeleteOneProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneProductMutation, { data, loading, error }] = useDeleteOneProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneProductMutation, DeleteOneProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneProductMutation, DeleteOneProductMutationVariables>(DeleteOneProductDocument, options);
      }
export type DeleteOneProductMutationHookResult = ReturnType<typeof useDeleteOneProductMutation>;
export type DeleteOneProductMutationResult = Apollo.MutationResult<DeleteOneProductMutation>;
export type DeleteOneProductMutationOptions = Apollo.BaseMutationOptions<DeleteOneProductMutation, DeleteOneProductMutationVariables>;
export const DeleteManyProductDocument = gql`
    mutation deleteManyProduct($where: ProductWhereInput) {
  deleteManyProduct(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyProductMutation__
 *
 * To run a mutation, you first call `useDeleteManyProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyProductMutation, { data, loading, error }] = useDeleteManyProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyProductMutation, DeleteManyProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyProductMutation, DeleteManyProductMutationVariables>(DeleteManyProductDocument, options);
      }
export type DeleteManyProductMutationHookResult = ReturnType<typeof useDeleteManyProductMutation>;
export type DeleteManyProductMutationResult = Apollo.MutationResult<DeleteManyProductMutation>;
export type DeleteManyProductMutationOptions = Apollo.BaseMutationOptions<DeleteManyProductMutation, DeleteManyProductMutationVariables>;
export const UpdateManyProductDocument = gql`
    mutation updateManyProduct($where: ProductWhereInput, $data: ProductUpdateManyMutationInput!) {
  updateManyProduct(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyProductMutation__
 *
 * To run a mutation, you first call `useUpdateManyProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyProductMutation, { data, loading, error }] = useUpdateManyProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyProductMutation, UpdateManyProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyProductMutation, UpdateManyProductMutationVariables>(UpdateManyProductDocument, options);
      }
export type UpdateManyProductMutationHookResult = ReturnType<typeof useUpdateManyProductMutation>;
export type UpdateManyProductMutationResult = Apollo.MutationResult<UpdateManyProductMutation>;
export type UpdateManyProductMutationOptions = Apollo.BaseMutationOptions<UpdateManyProductMutation, UpdateManyProductMutationVariables>;
export const FindUniqueProductCollectionDocument = gql`
    query findUniqueProductCollection($where: ProductCollectionWhereUniqueInput!) {
  findUniqueProductCollection(where: $where) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useFindUniqueProductCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniqueProductCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueProductCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueProductCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueProductCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>(FindUniqueProductCollectionDocument, options);
      }
export function useFindUniqueProductCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>(FindUniqueProductCollectionDocument, options);
        }
export type FindUniqueProductCollectionQueryHookResult = ReturnType<typeof useFindUniqueProductCollectionQuery>;
export type FindUniqueProductCollectionLazyQueryHookResult = ReturnType<typeof useFindUniqueProductCollectionLazyQuery>;
export type FindUniqueProductCollectionQueryResult = Apollo.QueryResult<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>;
export const FindManyProductCollectionDocument = gql`
    query findManyProductCollection($where: ProductCollectionWhereInput, $orderBy: [ProductCollectionOrderByWithRelationInput!], $cursor: ProductCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductCollection(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useFindManyProductCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyProductCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>(FindManyProductCollectionDocument, options);
      }
export function useFindManyProductCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>(FindManyProductCollectionDocument, options);
        }
export type FindManyProductCollectionQueryHookResult = ReturnType<typeof useFindManyProductCollectionQuery>;
export type FindManyProductCollectionLazyQueryHookResult = ReturnType<typeof useFindManyProductCollectionLazyQuery>;
export type FindManyProductCollectionQueryResult = Apollo.QueryResult<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>;
export const FindManyProductCollectionCountDocument = gql`
    query findManyProductCollectionCount($where: ProductCollectionWhereInput, $orderBy: [ProductCollectionOrderByWithRelationInput!], $cursor: ProductCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductCollectionCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyProductCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyProductCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>(FindManyProductCollectionCountDocument, options);
      }
export function useFindManyProductCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>(FindManyProductCollectionCountDocument, options);
        }
export type FindManyProductCollectionCountQueryHookResult = ReturnType<typeof useFindManyProductCollectionCountQuery>;
export type FindManyProductCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyProductCollectionCountLazyQuery>;
export type FindManyProductCollectionCountQueryResult = Apollo.QueryResult<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>;
export const CreateOneProductCollectionDocument = gql`
    mutation createOneProductCollection($data: ProductCollectionCreateInput!) {
  createOneProductCollection(data: $data) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useCreateOneProductCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOneProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneProductCollectionMutation, { data, loading, error }] = useCreateOneProductCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneProductCollectionMutation, CreateOneProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneProductCollectionMutation, CreateOneProductCollectionMutationVariables>(CreateOneProductCollectionDocument, options);
      }
export type CreateOneProductCollectionMutationHookResult = ReturnType<typeof useCreateOneProductCollectionMutation>;
export type CreateOneProductCollectionMutationResult = Apollo.MutationResult<CreateOneProductCollectionMutation>;
export type CreateOneProductCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOneProductCollectionMutation, CreateOneProductCollectionMutationVariables>;
export const UpdateOneProductCollectionDocument = gql`
    mutation updateOneProductCollection($where: ProductCollectionWhereUniqueInput!, $data: ProductCollectionUpdateInput!) {
  updateOneProductCollection(where: $where, data: $data) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useUpdateOneProductCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOneProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneProductCollectionMutation, { data, loading, error }] = useUpdateOneProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneProductCollectionMutation, UpdateOneProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneProductCollectionMutation, UpdateOneProductCollectionMutationVariables>(UpdateOneProductCollectionDocument, options);
      }
export type UpdateOneProductCollectionMutationHookResult = ReturnType<typeof useUpdateOneProductCollectionMutation>;
export type UpdateOneProductCollectionMutationResult = Apollo.MutationResult<UpdateOneProductCollectionMutation>;
export type UpdateOneProductCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOneProductCollectionMutation, UpdateOneProductCollectionMutationVariables>;
export const DeleteOneProductCollectionDocument = gql`
    mutation deleteOneProductCollection($where: ProductCollectionWhereUniqueInput!) {
  deleteOneProductCollection(where: $where) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useDeleteOneProductCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOneProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneProductCollectionMutation, { data, loading, error }] = useDeleteOneProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneProductCollectionMutation, DeleteOneProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneProductCollectionMutation, DeleteOneProductCollectionMutationVariables>(DeleteOneProductCollectionDocument, options);
      }
export type DeleteOneProductCollectionMutationHookResult = ReturnType<typeof useDeleteOneProductCollectionMutation>;
export type DeleteOneProductCollectionMutationResult = Apollo.MutationResult<DeleteOneProductCollectionMutation>;
export type DeleteOneProductCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOneProductCollectionMutation, DeleteOneProductCollectionMutationVariables>;
export const DeleteManyProductCollectionDocument = gql`
    mutation deleteManyProductCollection($where: ProductCollectionWhereInput) {
  deleteManyProductCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyProductCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyProductCollectionMutation, { data, loading, error }] = useDeleteManyProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyProductCollectionMutation, DeleteManyProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyProductCollectionMutation, DeleteManyProductCollectionMutationVariables>(DeleteManyProductCollectionDocument, options);
      }
export type DeleteManyProductCollectionMutationHookResult = ReturnType<typeof useDeleteManyProductCollectionMutation>;
export type DeleteManyProductCollectionMutationResult = Apollo.MutationResult<DeleteManyProductCollectionMutation>;
export type DeleteManyProductCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyProductCollectionMutation, DeleteManyProductCollectionMutationVariables>;
export const UpdateManyProductCollectionDocument = gql`
    mutation updateManyProductCollection($where: ProductCollectionWhereInput, $data: ProductCollectionUpdateManyMutationInput!) {
  updateManyProductCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyProductCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyProductCollectionMutation, { data, loading, error }] = useUpdateManyProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyProductCollectionMutation, UpdateManyProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyProductCollectionMutation, UpdateManyProductCollectionMutationVariables>(UpdateManyProductCollectionDocument, options);
      }
export type UpdateManyProductCollectionMutationHookResult = ReturnType<typeof useUpdateManyProductCollectionMutation>;
export type UpdateManyProductCollectionMutationResult = Apollo.MutationResult<UpdateManyProductCollectionMutation>;
export type UpdateManyProductCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyProductCollectionMutation, UpdateManyProductCollectionMutationVariables>;
export const FindUniqueProductGroupDocument = gql`
    query findUniqueProductGroup($where: ProductGroupWhereUniqueInput!) {
  findUniqueProductGroup(where: $where) {
    ...ProductGroup
  }
}
    ${ProductGroupFragmentDoc}`;

/**
 * __useFindUniqueProductGroupQuery__
 *
 * To run a query within a React component, call `useFindUniqueProductGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueProductGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueProductGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueProductGroupQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueProductGroupQuery, FindUniqueProductGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueProductGroupQuery, FindUniqueProductGroupQueryVariables>(FindUniqueProductGroupDocument, options);
      }
export function useFindUniqueProductGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueProductGroupQuery, FindUniqueProductGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueProductGroupQuery, FindUniqueProductGroupQueryVariables>(FindUniqueProductGroupDocument, options);
        }
export type FindUniqueProductGroupQueryHookResult = ReturnType<typeof useFindUniqueProductGroupQuery>;
export type FindUniqueProductGroupLazyQueryHookResult = ReturnType<typeof useFindUniqueProductGroupLazyQuery>;
export type FindUniqueProductGroupQueryResult = Apollo.QueryResult<FindUniqueProductGroupQuery, FindUniqueProductGroupQueryVariables>;
export const FindManyProductGroupDocument = gql`
    query findManyProductGroup($where: ProductGroupWhereInput, $orderBy: [ProductGroupOrderByWithRelationInput!], $cursor: ProductGroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductGroup(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...ProductGroup
  }
}
    ${ProductGroupFragmentDoc}`;

/**
 * __useFindManyProductGroupQuery__
 *
 * To run a query within a React component, call `useFindManyProductGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductGroupQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductGroupQuery, FindManyProductGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductGroupQuery, FindManyProductGroupQueryVariables>(FindManyProductGroupDocument, options);
      }
export function useFindManyProductGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductGroupQuery, FindManyProductGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductGroupQuery, FindManyProductGroupQueryVariables>(FindManyProductGroupDocument, options);
        }
export type FindManyProductGroupQueryHookResult = ReturnType<typeof useFindManyProductGroupQuery>;
export type FindManyProductGroupLazyQueryHookResult = ReturnType<typeof useFindManyProductGroupLazyQuery>;
export type FindManyProductGroupQueryResult = Apollo.QueryResult<FindManyProductGroupQuery, FindManyProductGroupQueryVariables>;
export const FindManyProductGroupCountDocument = gql`
    query findManyProductGroupCount($where: ProductGroupWhereInput, $orderBy: [ProductGroupOrderByWithRelationInput!], $cursor: ProductGroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductGroupCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyProductGroupCountQuery__
 *
 * To run a query within a React component, call `useFindManyProductGroupCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductGroupCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductGroupCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductGroupCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductGroupCountQuery, FindManyProductGroupCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductGroupCountQuery, FindManyProductGroupCountQueryVariables>(FindManyProductGroupCountDocument, options);
      }
export function useFindManyProductGroupCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductGroupCountQuery, FindManyProductGroupCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductGroupCountQuery, FindManyProductGroupCountQueryVariables>(FindManyProductGroupCountDocument, options);
        }
export type FindManyProductGroupCountQueryHookResult = ReturnType<typeof useFindManyProductGroupCountQuery>;
export type FindManyProductGroupCountLazyQueryHookResult = ReturnType<typeof useFindManyProductGroupCountLazyQuery>;
export type FindManyProductGroupCountQueryResult = Apollo.QueryResult<FindManyProductGroupCountQuery, FindManyProductGroupCountQueryVariables>;
export const CreateOneProductGroupDocument = gql`
    mutation createOneProductGroup($data: ProductGroupCreateInput!) {
  createOneProductGroup(data: $data) {
    ...ProductGroup
  }
}
    ${ProductGroupFragmentDoc}`;

/**
 * __useCreateOneProductGroupMutation__
 *
 * To run a mutation, you first call `useCreateOneProductGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneProductGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneProductGroupMutation, { data, loading, error }] = useCreateOneProductGroupMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneProductGroupMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneProductGroupMutation, CreateOneProductGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneProductGroupMutation, CreateOneProductGroupMutationVariables>(CreateOneProductGroupDocument, options);
      }
export type CreateOneProductGroupMutationHookResult = ReturnType<typeof useCreateOneProductGroupMutation>;
export type CreateOneProductGroupMutationResult = Apollo.MutationResult<CreateOneProductGroupMutation>;
export type CreateOneProductGroupMutationOptions = Apollo.BaseMutationOptions<CreateOneProductGroupMutation, CreateOneProductGroupMutationVariables>;
export const UpdateOneProductGroupDocument = gql`
    mutation updateOneProductGroup($where: ProductGroupWhereUniqueInput!, $data: ProductGroupUpdateInput!) {
  updateOneProductGroup(where: $where, data: $data) {
    ...ProductGroup
  }
}
    ${ProductGroupFragmentDoc}`;

/**
 * __useUpdateOneProductGroupMutation__
 *
 * To run a mutation, you first call `useUpdateOneProductGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneProductGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneProductGroupMutation, { data, loading, error }] = useUpdateOneProductGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneProductGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneProductGroupMutation, UpdateOneProductGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneProductGroupMutation, UpdateOneProductGroupMutationVariables>(UpdateOneProductGroupDocument, options);
      }
export type UpdateOneProductGroupMutationHookResult = ReturnType<typeof useUpdateOneProductGroupMutation>;
export type UpdateOneProductGroupMutationResult = Apollo.MutationResult<UpdateOneProductGroupMutation>;
export type UpdateOneProductGroupMutationOptions = Apollo.BaseMutationOptions<UpdateOneProductGroupMutation, UpdateOneProductGroupMutationVariables>;
export const DeleteOneProductGroupDocument = gql`
    mutation deleteOneProductGroup($where: ProductGroupWhereUniqueInput!) {
  deleteOneProductGroup(where: $where) {
    ...ProductGroup
  }
}
    ${ProductGroupFragmentDoc}`;

/**
 * __useDeleteOneProductGroupMutation__
 *
 * To run a mutation, you first call `useDeleteOneProductGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneProductGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneProductGroupMutation, { data, loading, error }] = useDeleteOneProductGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneProductGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneProductGroupMutation, DeleteOneProductGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneProductGroupMutation, DeleteOneProductGroupMutationVariables>(DeleteOneProductGroupDocument, options);
      }
export type DeleteOneProductGroupMutationHookResult = ReturnType<typeof useDeleteOneProductGroupMutation>;
export type DeleteOneProductGroupMutationResult = Apollo.MutationResult<DeleteOneProductGroupMutation>;
export type DeleteOneProductGroupMutationOptions = Apollo.BaseMutationOptions<DeleteOneProductGroupMutation, DeleteOneProductGroupMutationVariables>;
export const DeleteManyProductGroupDocument = gql`
    mutation deleteManyProductGroup($where: ProductGroupWhereInput) {
  deleteManyProductGroup(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyProductGroupMutation__
 *
 * To run a mutation, you first call `useDeleteManyProductGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyProductGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyProductGroupMutation, { data, loading, error }] = useDeleteManyProductGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyProductGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyProductGroupMutation, DeleteManyProductGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyProductGroupMutation, DeleteManyProductGroupMutationVariables>(DeleteManyProductGroupDocument, options);
      }
export type DeleteManyProductGroupMutationHookResult = ReturnType<typeof useDeleteManyProductGroupMutation>;
export type DeleteManyProductGroupMutationResult = Apollo.MutationResult<DeleteManyProductGroupMutation>;
export type DeleteManyProductGroupMutationOptions = Apollo.BaseMutationOptions<DeleteManyProductGroupMutation, DeleteManyProductGroupMutationVariables>;
export const UpdateManyProductGroupDocument = gql`
    mutation updateManyProductGroup($where: ProductGroupWhereInput, $data: ProductGroupUpdateManyMutationInput!) {
  updateManyProductGroup(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyProductGroupMutation__
 *
 * To run a mutation, you first call `useUpdateManyProductGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyProductGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyProductGroupMutation, { data, loading, error }] = useUpdateManyProductGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyProductGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyProductGroupMutation, UpdateManyProductGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyProductGroupMutation, UpdateManyProductGroupMutationVariables>(UpdateManyProductGroupDocument, options);
      }
export type UpdateManyProductGroupMutationHookResult = ReturnType<typeof useUpdateManyProductGroupMutation>;
export type UpdateManyProductGroupMutationResult = Apollo.MutationResult<UpdateManyProductGroupMutation>;
export type UpdateManyProductGroupMutationOptions = Apollo.BaseMutationOptions<UpdateManyProductGroupMutation, UpdateManyProductGroupMutationVariables>;
export const FindUniqueRefreshTokenDocument = gql`
    query findUniqueRefreshToken($where: RefreshTokenWhereUniqueInput!) {
  findUniqueRefreshToken(where: $where) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useFindUniqueRefreshTokenQuery__
 *
 * To run a query within a React component, call `useFindUniqueRefreshTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRefreshTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRefreshTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRefreshTokenQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>(FindUniqueRefreshTokenDocument, options);
      }
export function useFindUniqueRefreshTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>(FindUniqueRefreshTokenDocument, options);
        }
export type FindUniqueRefreshTokenQueryHookResult = ReturnType<typeof useFindUniqueRefreshTokenQuery>;
export type FindUniqueRefreshTokenLazyQueryHookResult = ReturnType<typeof useFindUniqueRefreshTokenLazyQuery>;
export type FindUniqueRefreshTokenQueryResult = Apollo.QueryResult<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>;
export const FindManyRefreshTokenDocument = gql`
    query findManyRefreshToken($where: RefreshTokenWhereInput, $orderBy: [RefreshTokenOrderByWithRelationInput!], $cursor: RefreshTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRefreshToken(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useFindManyRefreshTokenQuery__
 *
 * To run a query within a React component, call `useFindManyRefreshTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRefreshTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRefreshTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRefreshTokenQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>(FindManyRefreshTokenDocument, options);
      }
export function useFindManyRefreshTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>(FindManyRefreshTokenDocument, options);
        }
export type FindManyRefreshTokenQueryHookResult = ReturnType<typeof useFindManyRefreshTokenQuery>;
export type FindManyRefreshTokenLazyQueryHookResult = ReturnType<typeof useFindManyRefreshTokenLazyQuery>;
export type FindManyRefreshTokenQueryResult = Apollo.QueryResult<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>;
export const FindManyRefreshTokenCountDocument = gql`
    query findManyRefreshTokenCount($where: RefreshTokenWhereInput, $orderBy: [RefreshTokenOrderByWithRelationInput!], $cursor: RefreshTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRefreshTokenCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyRefreshTokenCountQuery__
 *
 * To run a query within a React component, call `useFindManyRefreshTokenCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRefreshTokenCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRefreshTokenCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRefreshTokenCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>(FindManyRefreshTokenCountDocument, options);
      }
export function useFindManyRefreshTokenCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>(FindManyRefreshTokenCountDocument, options);
        }
export type FindManyRefreshTokenCountQueryHookResult = ReturnType<typeof useFindManyRefreshTokenCountQuery>;
export type FindManyRefreshTokenCountLazyQueryHookResult = ReturnType<typeof useFindManyRefreshTokenCountLazyQuery>;
export type FindManyRefreshTokenCountQueryResult = Apollo.QueryResult<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>;
export const CreateOneRefreshTokenDocument = gql`
    mutation createOneRefreshToken($data: RefreshTokenCreateInput!) {
  createOneRefreshToken(data: $data) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useCreateOneRefreshTokenMutation__
 *
 * To run a mutation, you first call `useCreateOneRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRefreshTokenMutation, { data, loading, error }] = useCreateOneRefreshTokenMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRefreshTokenMutation, CreateOneRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRefreshTokenMutation, CreateOneRefreshTokenMutationVariables>(CreateOneRefreshTokenDocument, options);
      }
export type CreateOneRefreshTokenMutationHookResult = ReturnType<typeof useCreateOneRefreshTokenMutation>;
export type CreateOneRefreshTokenMutationResult = Apollo.MutationResult<CreateOneRefreshTokenMutation>;
export type CreateOneRefreshTokenMutationOptions = Apollo.BaseMutationOptions<CreateOneRefreshTokenMutation, CreateOneRefreshTokenMutationVariables>;
export const UpdateOneRefreshTokenDocument = gql`
    mutation updateOneRefreshToken($where: RefreshTokenWhereUniqueInput!, $data: RefreshTokenUpdateInput!) {
  updateOneRefreshToken(where: $where, data: $data) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useUpdateOneRefreshTokenMutation__
 *
 * To run a mutation, you first call `useUpdateOneRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRefreshTokenMutation, { data, loading, error }] = useUpdateOneRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRefreshTokenMutation, UpdateOneRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRefreshTokenMutation, UpdateOneRefreshTokenMutationVariables>(UpdateOneRefreshTokenDocument, options);
      }
export type UpdateOneRefreshTokenMutationHookResult = ReturnType<typeof useUpdateOneRefreshTokenMutation>;
export type UpdateOneRefreshTokenMutationResult = Apollo.MutationResult<UpdateOneRefreshTokenMutation>;
export type UpdateOneRefreshTokenMutationOptions = Apollo.BaseMutationOptions<UpdateOneRefreshTokenMutation, UpdateOneRefreshTokenMutationVariables>;
export const DeleteOneRefreshTokenDocument = gql`
    mutation deleteOneRefreshToken($where: RefreshTokenWhereUniqueInput!) {
  deleteOneRefreshToken(where: $where) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useDeleteOneRefreshTokenMutation__
 *
 * To run a mutation, you first call `useDeleteOneRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRefreshTokenMutation, { data, loading, error }] = useDeleteOneRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRefreshTokenMutation, DeleteOneRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRefreshTokenMutation, DeleteOneRefreshTokenMutationVariables>(DeleteOneRefreshTokenDocument, options);
      }
export type DeleteOneRefreshTokenMutationHookResult = ReturnType<typeof useDeleteOneRefreshTokenMutation>;
export type DeleteOneRefreshTokenMutationResult = Apollo.MutationResult<DeleteOneRefreshTokenMutation>;
export type DeleteOneRefreshTokenMutationOptions = Apollo.BaseMutationOptions<DeleteOneRefreshTokenMutation, DeleteOneRefreshTokenMutationVariables>;
export const DeleteManyRefreshTokenDocument = gql`
    mutation deleteManyRefreshToken($where: RefreshTokenWhereInput) {
  deleteManyRefreshToken(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRefreshTokenMutation__
 *
 * To run a mutation, you first call `useDeleteManyRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRefreshTokenMutation, { data, loading, error }] = useDeleteManyRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRefreshTokenMutation, DeleteManyRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRefreshTokenMutation, DeleteManyRefreshTokenMutationVariables>(DeleteManyRefreshTokenDocument, options);
      }
export type DeleteManyRefreshTokenMutationHookResult = ReturnType<typeof useDeleteManyRefreshTokenMutation>;
export type DeleteManyRefreshTokenMutationResult = Apollo.MutationResult<DeleteManyRefreshTokenMutation>;
export type DeleteManyRefreshTokenMutationOptions = Apollo.BaseMutationOptions<DeleteManyRefreshTokenMutation, DeleteManyRefreshTokenMutationVariables>;
export const UpdateManyRefreshTokenDocument = gql`
    mutation updateManyRefreshToken($where: RefreshTokenWhereInput, $data: RefreshTokenUpdateManyMutationInput!) {
  updateManyRefreshToken(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRefreshTokenMutation__
 *
 * To run a mutation, you first call `useUpdateManyRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRefreshTokenMutation, { data, loading, error }] = useUpdateManyRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRefreshTokenMutation, UpdateManyRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRefreshTokenMutation, UpdateManyRefreshTokenMutationVariables>(UpdateManyRefreshTokenDocument, options);
      }
export type UpdateManyRefreshTokenMutationHookResult = ReturnType<typeof useUpdateManyRefreshTokenMutation>;
export type UpdateManyRefreshTokenMutationResult = Apollo.MutationResult<UpdateManyRefreshTokenMutation>;
export type UpdateManyRefreshTokenMutationOptions = Apollo.BaseMutationOptions<UpdateManyRefreshTokenMutation, UpdateManyRefreshTokenMutationVariables>;
export const FindUniqueRequestDocument = gql`
    query findUniqueRequest($where: RequestWhereUniqueInput!) {
  findUniqueRequest(where: $where) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useFindUniqueRequestQuery__
 *
 * To run a query within a React component, call `useFindUniqueRequestQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRequestQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRequestQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRequestQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>(FindUniqueRequestDocument, options);
      }
export function useFindUniqueRequestLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>(FindUniqueRequestDocument, options);
        }
export type FindUniqueRequestQueryHookResult = ReturnType<typeof useFindUniqueRequestQuery>;
export type FindUniqueRequestLazyQueryHookResult = ReturnType<typeof useFindUniqueRequestLazyQuery>;
export type FindUniqueRequestQueryResult = Apollo.QueryResult<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>;
export const FindManyRequestDocument = gql`
    query findManyRequest($where: RequestWhereInput, $orderBy: [RequestOrderByWithRelationInput!], $cursor: RequestWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequest(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useFindManyRequestQuery__
 *
 * To run a query within a React component, call `useFindManyRequestQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestQuery, FindManyRequestQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestQuery, FindManyRequestQueryVariables>(FindManyRequestDocument, options);
      }
export function useFindManyRequestLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestQuery, FindManyRequestQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestQuery, FindManyRequestQueryVariables>(FindManyRequestDocument, options);
        }
export type FindManyRequestQueryHookResult = ReturnType<typeof useFindManyRequestQuery>;
export type FindManyRequestLazyQueryHookResult = ReturnType<typeof useFindManyRequestLazyQuery>;
export type FindManyRequestQueryResult = Apollo.QueryResult<FindManyRequestQuery, FindManyRequestQueryVariables>;
export const FindManyRequestCountDocument = gql`
    query findManyRequestCount($where: RequestWhereInput, $orderBy: [RequestOrderByWithRelationInput!], $cursor: RequestWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequestCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyRequestCountQuery__
 *
 * To run a query within a React component, call `useFindManyRequestCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>(FindManyRequestCountDocument, options);
      }
export function useFindManyRequestCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>(FindManyRequestCountDocument, options);
        }
export type FindManyRequestCountQueryHookResult = ReturnType<typeof useFindManyRequestCountQuery>;
export type FindManyRequestCountLazyQueryHookResult = ReturnType<typeof useFindManyRequestCountLazyQuery>;
export type FindManyRequestCountQueryResult = Apollo.QueryResult<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>;
export const CreateOneRequestDocument = gql`
    mutation createOneRequest($data: RequestCreateInput!) {
  createOneRequest(data: $data) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useCreateOneRequestMutation__
 *
 * To run a mutation, you first call `useCreateOneRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRequestMutation, { data, loading, error }] = useCreateOneRequestMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRequestMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRequestMutation, CreateOneRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRequestMutation, CreateOneRequestMutationVariables>(CreateOneRequestDocument, options);
      }
export type CreateOneRequestMutationHookResult = ReturnType<typeof useCreateOneRequestMutation>;
export type CreateOneRequestMutationResult = Apollo.MutationResult<CreateOneRequestMutation>;
export type CreateOneRequestMutationOptions = Apollo.BaseMutationOptions<CreateOneRequestMutation, CreateOneRequestMutationVariables>;
export const UpdateOneRequestDocument = gql`
    mutation updateOneRequest($where: RequestWhereUniqueInput!, $data: RequestUpdateInput!) {
  updateOneRequest(where: $where, data: $data) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useUpdateOneRequestMutation__
 *
 * To run a mutation, you first call `useUpdateOneRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRequestMutation, { data, loading, error }] = useUpdateOneRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRequestMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRequestMutation, UpdateOneRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRequestMutation, UpdateOneRequestMutationVariables>(UpdateOneRequestDocument, options);
      }
export type UpdateOneRequestMutationHookResult = ReturnType<typeof useUpdateOneRequestMutation>;
export type UpdateOneRequestMutationResult = Apollo.MutationResult<UpdateOneRequestMutation>;
export type UpdateOneRequestMutationOptions = Apollo.BaseMutationOptions<UpdateOneRequestMutation, UpdateOneRequestMutationVariables>;
export const DeleteOneRequestDocument = gql`
    mutation deleteOneRequest($where: RequestWhereUniqueInput!) {
  deleteOneRequest(where: $where) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useDeleteOneRequestMutation__
 *
 * To run a mutation, you first call `useDeleteOneRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRequestMutation, { data, loading, error }] = useDeleteOneRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRequestMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRequestMutation, DeleteOneRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRequestMutation, DeleteOneRequestMutationVariables>(DeleteOneRequestDocument, options);
      }
export type DeleteOneRequestMutationHookResult = ReturnType<typeof useDeleteOneRequestMutation>;
export type DeleteOneRequestMutationResult = Apollo.MutationResult<DeleteOneRequestMutation>;
export type DeleteOneRequestMutationOptions = Apollo.BaseMutationOptions<DeleteOneRequestMutation, DeleteOneRequestMutationVariables>;
export const DeleteManyRequestDocument = gql`
    mutation deleteManyRequest($where: RequestWhereInput) {
  deleteManyRequest(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRequestMutation__
 *
 * To run a mutation, you first call `useDeleteManyRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRequestMutation, { data, loading, error }] = useDeleteManyRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRequestMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRequestMutation, DeleteManyRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRequestMutation, DeleteManyRequestMutationVariables>(DeleteManyRequestDocument, options);
      }
export type DeleteManyRequestMutationHookResult = ReturnType<typeof useDeleteManyRequestMutation>;
export type DeleteManyRequestMutationResult = Apollo.MutationResult<DeleteManyRequestMutation>;
export type DeleteManyRequestMutationOptions = Apollo.BaseMutationOptions<DeleteManyRequestMutation, DeleteManyRequestMutationVariables>;
export const UpdateManyRequestDocument = gql`
    mutation updateManyRequest($where: RequestWhereInput, $data: RequestUpdateManyMutationInput!) {
  updateManyRequest(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRequestMutation__
 *
 * To run a mutation, you first call `useUpdateManyRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRequestMutation, { data, loading, error }] = useUpdateManyRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRequestMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRequestMutation, UpdateManyRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRequestMutation, UpdateManyRequestMutationVariables>(UpdateManyRequestDocument, options);
      }
export type UpdateManyRequestMutationHookResult = ReturnType<typeof useUpdateManyRequestMutation>;
export type UpdateManyRequestMutationResult = Apollo.MutationResult<UpdateManyRequestMutation>;
export type UpdateManyRequestMutationOptions = Apollo.BaseMutationOptions<UpdateManyRequestMutation, UpdateManyRequestMutationVariables>;
export const FindUniqueRequestClickDocument = gql`
    query findUniqueRequestClick($where: RequestClickWhereUniqueInput!) {
  findUniqueRequestClick(where: $where) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useFindUniqueRequestClickQuery__
 *
 * To run a query within a React component, call `useFindUniqueRequestClickQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRequestClickQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRequestClickQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRequestClickQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>(FindUniqueRequestClickDocument, options);
      }
export function useFindUniqueRequestClickLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>(FindUniqueRequestClickDocument, options);
        }
export type FindUniqueRequestClickQueryHookResult = ReturnType<typeof useFindUniqueRequestClickQuery>;
export type FindUniqueRequestClickLazyQueryHookResult = ReturnType<typeof useFindUniqueRequestClickLazyQuery>;
export type FindUniqueRequestClickQueryResult = Apollo.QueryResult<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>;
export const FindManyRequestClickDocument = gql`
    query findManyRequestClick($where: RequestClickWhereInput, $orderBy: [RequestClickOrderByWithRelationInput!], $cursor: RequestClickWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequestClick(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useFindManyRequestClickQuery__
 *
 * To run a query within a React component, call `useFindManyRequestClickQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestClickQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestClickQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestClickQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>(FindManyRequestClickDocument, options);
      }
export function useFindManyRequestClickLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>(FindManyRequestClickDocument, options);
        }
export type FindManyRequestClickQueryHookResult = ReturnType<typeof useFindManyRequestClickQuery>;
export type FindManyRequestClickLazyQueryHookResult = ReturnType<typeof useFindManyRequestClickLazyQuery>;
export type FindManyRequestClickQueryResult = Apollo.QueryResult<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>;
export const FindManyRequestClickCountDocument = gql`
    query findManyRequestClickCount($where: RequestClickWhereInput, $orderBy: [RequestClickOrderByWithRelationInput!], $cursor: RequestClickWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequestClickCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyRequestClickCountQuery__
 *
 * To run a query within a React component, call `useFindManyRequestClickCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestClickCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestClickCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestClickCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>(FindManyRequestClickCountDocument, options);
      }
export function useFindManyRequestClickCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>(FindManyRequestClickCountDocument, options);
        }
export type FindManyRequestClickCountQueryHookResult = ReturnType<typeof useFindManyRequestClickCountQuery>;
export type FindManyRequestClickCountLazyQueryHookResult = ReturnType<typeof useFindManyRequestClickCountLazyQuery>;
export type FindManyRequestClickCountQueryResult = Apollo.QueryResult<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>;
export const CreateOneRequestClickDocument = gql`
    mutation createOneRequestClick($data: RequestClickCreateInput!) {
  createOneRequestClick(data: $data) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useCreateOneRequestClickMutation__
 *
 * To run a mutation, you first call `useCreateOneRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRequestClickMutation, { data, loading, error }] = useCreateOneRequestClickMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRequestClickMutation, CreateOneRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRequestClickMutation, CreateOneRequestClickMutationVariables>(CreateOneRequestClickDocument, options);
      }
export type CreateOneRequestClickMutationHookResult = ReturnType<typeof useCreateOneRequestClickMutation>;
export type CreateOneRequestClickMutationResult = Apollo.MutationResult<CreateOneRequestClickMutation>;
export type CreateOneRequestClickMutationOptions = Apollo.BaseMutationOptions<CreateOneRequestClickMutation, CreateOneRequestClickMutationVariables>;
export const UpdateOneRequestClickDocument = gql`
    mutation updateOneRequestClick($where: RequestClickWhereUniqueInput!, $data: RequestClickUpdateInput!) {
  updateOneRequestClick(where: $where, data: $data) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useUpdateOneRequestClickMutation__
 *
 * To run a mutation, you first call `useUpdateOneRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRequestClickMutation, { data, loading, error }] = useUpdateOneRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRequestClickMutation, UpdateOneRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRequestClickMutation, UpdateOneRequestClickMutationVariables>(UpdateOneRequestClickDocument, options);
      }
export type UpdateOneRequestClickMutationHookResult = ReturnType<typeof useUpdateOneRequestClickMutation>;
export type UpdateOneRequestClickMutationResult = Apollo.MutationResult<UpdateOneRequestClickMutation>;
export type UpdateOneRequestClickMutationOptions = Apollo.BaseMutationOptions<UpdateOneRequestClickMutation, UpdateOneRequestClickMutationVariables>;
export const DeleteOneRequestClickDocument = gql`
    mutation deleteOneRequestClick($where: RequestClickWhereUniqueInput!) {
  deleteOneRequestClick(where: $where) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useDeleteOneRequestClickMutation__
 *
 * To run a mutation, you first call `useDeleteOneRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRequestClickMutation, { data, loading, error }] = useDeleteOneRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRequestClickMutation, DeleteOneRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRequestClickMutation, DeleteOneRequestClickMutationVariables>(DeleteOneRequestClickDocument, options);
      }
export type DeleteOneRequestClickMutationHookResult = ReturnType<typeof useDeleteOneRequestClickMutation>;
export type DeleteOneRequestClickMutationResult = Apollo.MutationResult<DeleteOneRequestClickMutation>;
export type DeleteOneRequestClickMutationOptions = Apollo.BaseMutationOptions<DeleteOneRequestClickMutation, DeleteOneRequestClickMutationVariables>;
export const DeleteManyRequestClickDocument = gql`
    mutation deleteManyRequestClick($where: RequestClickWhereInput) {
  deleteManyRequestClick(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRequestClickMutation__
 *
 * To run a mutation, you first call `useDeleteManyRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRequestClickMutation, { data, loading, error }] = useDeleteManyRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRequestClickMutation, DeleteManyRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRequestClickMutation, DeleteManyRequestClickMutationVariables>(DeleteManyRequestClickDocument, options);
      }
export type DeleteManyRequestClickMutationHookResult = ReturnType<typeof useDeleteManyRequestClickMutation>;
export type DeleteManyRequestClickMutationResult = Apollo.MutationResult<DeleteManyRequestClickMutation>;
export type DeleteManyRequestClickMutationOptions = Apollo.BaseMutationOptions<DeleteManyRequestClickMutation, DeleteManyRequestClickMutationVariables>;
export const UpdateManyRequestClickDocument = gql`
    mutation updateManyRequestClick($where: RequestClickWhereInput, $data: RequestClickUpdateManyMutationInput!) {
  updateManyRequestClick(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRequestClickMutation__
 *
 * To run a mutation, you first call `useUpdateManyRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRequestClickMutation, { data, loading, error }] = useUpdateManyRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRequestClickMutation, UpdateManyRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRequestClickMutation, UpdateManyRequestClickMutationVariables>(UpdateManyRequestClickDocument, options);
      }
export type UpdateManyRequestClickMutationHookResult = ReturnType<typeof useUpdateManyRequestClickMutation>;
export type UpdateManyRequestClickMutationResult = Apollo.MutationResult<UpdateManyRequestClickMutation>;
export type UpdateManyRequestClickMutationOptions = Apollo.BaseMutationOptions<UpdateManyRequestClickMutation, UpdateManyRequestClickMutationVariables>;
export const FindUniqueSlugCounterDocument = gql`
    query findUniqueSlugCounter($where: SlugCounterWhereUniqueInput!) {
  findUniqueSlugCounter(where: $where) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useFindUniqueSlugCounterQuery__
 *
 * To run a query within a React component, call `useFindUniqueSlugCounterQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueSlugCounterQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueSlugCounterQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueSlugCounterQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>(FindUniqueSlugCounterDocument, options);
      }
export function useFindUniqueSlugCounterLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>(FindUniqueSlugCounterDocument, options);
        }
export type FindUniqueSlugCounterQueryHookResult = ReturnType<typeof useFindUniqueSlugCounterQuery>;
export type FindUniqueSlugCounterLazyQueryHookResult = ReturnType<typeof useFindUniqueSlugCounterLazyQuery>;
export type FindUniqueSlugCounterQueryResult = Apollo.QueryResult<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>;
export const FindManySlugCounterDocument = gql`
    query findManySlugCounter($where: SlugCounterWhereInput, $orderBy: [SlugCounterOrderByWithRelationInput!], $cursor: SlugCounterWhereUniqueInput, $skip: Int, $take: Int) {
  findManySlugCounter(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useFindManySlugCounterQuery__
 *
 * To run a query within a React component, call `useFindManySlugCounterQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySlugCounterQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySlugCounterQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySlugCounterQuery(baseOptions?: Apollo.QueryHookOptions<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>(FindManySlugCounterDocument, options);
      }
export function useFindManySlugCounterLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>(FindManySlugCounterDocument, options);
        }
export type FindManySlugCounterQueryHookResult = ReturnType<typeof useFindManySlugCounterQuery>;
export type FindManySlugCounterLazyQueryHookResult = ReturnType<typeof useFindManySlugCounterLazyQuery>;
export type FindManySlugCounterQueryResult = Apollo.QueryResult<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>;
export const FindManySlugCounterCountDocument = gql`
    query findManySlugCounterCount($where: SlugCounterWhereInput, $orderBy: [SlugCounterOrderByWithRelationInput!], $cursor: SlugCounterWhereUniqueInput, $skip: Int, $take: Int) {
  findManySlugCounterCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManySlugCounterCountQuery__
 *
 * To run a query within a React component, call `useFindManySlugCounterCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySlugCounterCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySlugCounterCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySlugCounterCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>(FindManySlugCounterCountDocument, options);
      }
export function useFindManySlugCounterCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>(FindManySlugCounterCountDocument, options);
        }
export type FindManySlugCounterCountQueryHookResult = ReturnType<typeof useFindManySlugCounterCountQuery>;
export type FindManySlugCounterCountLazyQueryHookResult = ReturnType<typeof useFindManySlugCounterCountLazyQuery>;
export type FindManySlugCounterCountQueryResult = Apollo.QueryResult<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>;
export const CreateOneSlugCounterDocument = gql`
    mutation createOneSlugCounter($data: SlugCounterCreateInput!) {
  createOneSlugCounter(data: $data) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useCreateOneSlugCounterMutation__
 *
 * To run a mutation, you first call `useCreateOneSlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneSlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneSlugCounterMutation, { data, loading, error }] = useCreateOneSlugCounterMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneSlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneSlugCounterMutation, CreateOneSlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneSlugCounterMutation, CreateOneSlugCounterMutationVariables>(CreateOneSlugCounterDocument, options);
      }
export type CreateOneSlugCounterMutationHookResult = ReturnType<typeof useCreateOneSlugCounterMutation>;
export type CreateOneSlugCounterMutationResult = Apollo.MutationResult<CreateOneSlugCounterMutation>;
export type CreateOneSlugCounterMutationOptions = Apollo.BaseMutationOptions<CreateOneSlugCounterMutation, CreateOneSlugCounterMutationVariables>;
export const UpdateOneSlugCounterDocument = gql`
    mutation updateOneSlugCounter($where: SlugCounterWhereUniqueInput!, $data: SlugCounterUpdateInput!) {
  updateOneSlugCounter(where: $where, data: $data) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useUpdateOneSlugCounterMutation__
 *
 * To run a mutation, you first call `useUpdateOneSlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneSlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneSlugCounterMutation, { data, loading, error }] = useUpdateOneSlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneSlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneSlugCounterMutation, UpdateOneSlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneSlugCounterMutation, UpdateOneSlugCounterMutationVariables>(UpdateOneSlugCounterDocument, options);
      }
export type UpdateOneSlugCounterMutationHookResult = ReturnType<typeof useUpdateOneSlugCounterMutation>;
export type UpdateOneSlugCounterMutationResult = Apollo.MutationResult<UpdateOneSlugCounterMutation>;
export type UpdateOneSlugCounterMutationOptions = Apollo.BaseMutationOptions<UpdateOneSlugCounterMutation, UpdateOneSlugCounterMutationVariables>;
export const DeleteOneSlugCounterDocument = gql`
    mutation deleteOneSlugCounter($where: SlugCounterWhereUniqueInput!) {
  deleteOneSlugCounter(where: $where) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useDeleteOneSlugCounterMutation__
 *
 * To run a mutation, you first call `useDeleteOneSlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneSlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneSlugCounterMutation, { data, loading, error }] = useDeleteOneSlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneSlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneSlugCounterMutation, DeleteOneSlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneSlugCounterMutation, DeleteOneSlugCounterMutationVariables>(DeleteOneSlugCounterDocument, options);
      }
export type DeleteOneSlugCounterMutationHookResult = ReturnType<typeof useDeleteOneSlugCounterMutation>;
export type DeleteOneSlugCounterMutationResult = Apollo.MutationResult<DeleteOneSlugCounterMutation>;
export type DeleteOneSlugCounterMutationOptions = Apollo.BaseMutationOptions<DeleteOneSlugCounterMutation, DeleteOneSlugCounterMutationVariables>;
export const DeleteManySlugCounterDocument = gql`
    mutation deleteManySlugCounter($where: SlugCounterWhereInput) {
  deleteManySlugCounter(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManySlugCounterMutation__
 *
 * To run a mutation, you first call `useDeleteManySlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManySlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManySlugCounterMutation, { data, loading, error }] = useDeleteManySlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManySlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManySlugCounterMutation, DeleteManySlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManySlugCounterMutation, DeleteManySlugCounterMutationVariables>(DeleteManySlugCounterDocument, options);
      }
export type DeleteManySlugCounterMutationHookResult = ReturnType<typeof useDeleteManySlugCounterMutation>;
export type DeleteManySlugCounterMutationResult = Apollo.MutationResult<DeleteManySlugCounterMutation>;
export type DeleteManySlugCounterMutationOptions = Apollo.BaseMutationOptions<DeleteManySlugCounterMutation, DeleteManySlugCounterMutationVariables>;
export const UpdateManySlugCounterDocument = gql`
    mutation updateManySlugCounter($where: SlugCounterWhereInput, $data: SlugCounterUpdateManyMutationInput!) {
  updateManySlugCounter(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManySlugCounterMutation__
 *
 * To run a mutation, you first call `useUpdateManySlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManySlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManySlugCounterMutation, { data, loading, error }] = useUpdateManySlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManySlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManySlugCounterMutation, UpdateManySlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManySlugCounterMutation, UpdateManySlugCounterMutationVariables>(UpdateManySlugCounterDocument, options);
      }
export type UpdateManySlugCounterMutationHookResult = ReturnType<typeof useUpdateManySlugCounterMutation>;
export type UpdateManySlugCounterMutationResult = Apollo.MutationResult<UpdateManySlugCounterMutation>;
export type UpdateManySlugCounterMutationOptions = Apollo.BaseMutationOptions<UpdateManySlugCounterMutation, UpdateManySlugCounterMutationVariables>;
export const FindUniqueSpeakerDocument = gql`
    query findUniqueSpeaker($where: SpeakerWhereUniqueInput!) {
  findUniqueSpeaker(where: $where) {
    ...Speaker
  }
}
    ${SpeakerFragmentDoc}`;

/**
 * __useFindUniqueSpeakerQuery__
 *
 * To run a query within a React component, call `useFindUniqueSpeakerQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueSpeakerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueSpeakerQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueSpeakerQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueSpeakerQuery, FindUniqueSpeakerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueSpeakerQuery, FindUniqueSpeakerQueryVariables>(FindUniqueSpeakerDocument, options);
      }
export function useFindUniqueSpeakerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueSpeakerQuery, FindUniqueSpeakerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueSpeakerQuery, FindUniqueSpeakerQueryVariables>(FindUniqueSpeakerDocument, options);
        }
export type FindUniqueSpeakerQueryHookResult = ReturnType<typeof useFindUniqueSpeakerQuery>;
export type FindUniqueSpeakerLazyQueryHookResult = ReturnType<typeof useFindUniqueSpeakerLazyQuery>;
export type FindUniqueSpeakerQueryResult = Apollo.QueryResult<FindUniqueSpeakerQuery, FindUniqueSpeakerQueryVariables>;
export const FindManySpeakerDocument = gql`
    query findManySpeaker($where: SpeakerWhereInput, $orderBy: [SpeakerOrderByWithRelationInput!], $cursor: SpeakerWhereUniqueInput, $skip: Int, $take: Int) {
  findManySpeaker(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Speaker
  }
}
    ${SpeakerFragmentDoc}`;

/**
 * __useFindManySpeakerQuery__
 *
 * To run a query within a React component, call `useFindManySpeakerQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySpeakerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySpeakerQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySpeakerQuery(baseOptions?: Apollo.QueryHookOptions<FindManySpeakerQuery, FindManySpeakerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySpeakerQuery, FindManySpeakerQueryVariables>(FindManySpeakerDocument, options);
      }
export function useFindManySpeakerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySpeakerQuery, FindManySpeakerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySpeakerQuery, FindManySpeakerQueryVariables>(FindManySpeakerDocument, options);
        }
export type FindManySpeakerQueryHookResult = ReturnType<typeof useFindManySpeakerQuery>;
export type FindManySpeakerLazyQueryHookResult = ReturnType<typeof useFindManySpeakerLazyQuery>;
export type FindManySpeakerQueryResult = Apollo.QueryResult<FindManySpeakerQuery, FindManySpeakerQueryVariables>;
export const FindManySpeakerCountDocument = gql`
    query findManySpeakerCount($where: SpeakerWhereInput, $orderBy: [SpeakerOrderByWithRelationInput!], $cursor: SpeakerWhereUniqueInput, $skip: Int, $take: Int) {
  findManySpeakerCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManySpeakerCountQuery__
 *
 * To run a query within a React component, call `useFindManySpeakerCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySpeakerCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySpeakerCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySpeakerCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManySpeakerCountQuery, FindManySpeakerCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySpeakerCountQuery, FindManySpeakerCountQueryVariables>(FindManySpeakerCountDocument, options);
      }
export function useFindManySpeakerCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySpeakerCountQuery, FindManySpeakerCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySpeakerCountQuery, FindManySpeakerCountQueryVariables>(FindManySpeakerCountDocument, options);
        }
export type FindManySpeakerCountQueryHookResult = ReturnType<typeof useFindManySpeakerCountQuery>;
export type FindManySpeakerCountLazyQueryHookResult = ReturnType<typeof useFindManySpeakerCountLazyQuery>;
export type FindManySpeakerCountQueryResult = Apollo.QueryResult<FindManySpeakerCountQuery, FindManySpeakerCountQueryVariables>;
export const CreateOneSpeakerDocument = gql`
    mutation createOneSpeaker($data: SpeakerCreateInput!) {
  createOneSpeaker(data: $data) {
    ...Speaker
  }
}
    ${SpeakerFragmentDoc}`;

/**
 * __useCreateOneSpeakerMutation__
 *
 * To run a mutation, you first call `useCreateOneSpeakerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneSpeakerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneSpeakerMutation, { data, loading, error }] = useCreateOneSpeakerMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneSpeakerMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneSpeakerMutation, CreateOneSpeakerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneSpeakerMutation, CreateOneSpeakerMutationVariables>(CreateOneSpeakerDocument, options);
      }
export type CreateOneSpeakerMutationHookResult = ReturnType<typeof useCreateOneSpeakerMutation>;
export type CreateOneSpeakerMutationResult = Apollo.MutationResult<CreateOneSpeakerMutation>;
export type CreateOneSpeakerMutationOptions = Apollo.BaseMutationOptions<CreateOneSpeakerMutation, CreateOneSpeakerMutationVariables>;
export const UpdateOneSpeakerDocument = gql`
    mutation updateOneSpeaker($where: SpeakerWhereUniqueInput!, $data: SpeakerUpdateInput!) {
  updateOneSpeaker(where: $where, data: $data) {
    ...Speaker
  }
}
    ${SpeakerFragmentDoc}`;

/**
 * __useUpdateOneSpeakerMutation__
 *
 * To run a mutation, you first call `useUpdateOneSpeakerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneSpeakerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneSpeakerMutation, { data, loading, error }] = useUpdateOneSpeakerMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneSpeakerMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneSpeakerMutation, UpdateOneSpeakerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneSpeakerMutation, UpdateOneSpeakerMutationVariables>(UpdateOneSpeakerDocument, options);
      }
export type UpdateOneSpeakerMutationHookResult = ReturnType<typeof useUpdateOneSpeakerMutation>;
export type UpdateOneSpeakerMutationResult = Apollo.MutationResult<UpdateOneSpeakerMutation>;
export type UpdateOneSpeakerMutationOptions = Apollo.BaseMutationOptions<UpdateOneSpeakerMutation, UpdateOneSpeakerMutationVariables>;
export const DeleteOneSpeakerDocument = gql`
    mutation deleteOneSpeaker($where: SpeakerWhereUniqueInput!) {
  deleteOneSpeaker(where: $where) {
    ...Speaker
  }
}
    ${SpeakerFragmentDoc}`;

/**
 * __useDeleteOneSpeakerMutation__
 *
 * To run a mutation, you first call `useDeleteOneSpeakerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneSpeakerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneSpeakerMutation, { data, loading, error }] = useDeleteOneSpeakerMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneSpeakerMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneSpeakerMutation, DeleteOneSpeakerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneSpeakerMutation, DeleteOneSpeakerMutationVariables>(DeleteOneSpeakerDocument, options);
      }
export type DeleteOneSpeakerMutationHookResult = ReturnType<typeof useDeleteOneSpeakerMutation>;
export type DeleteOneSpeakerMutationResult = Apollo.MutationResult<DeleteOneSpeakerMutation>;
export type DeleteOneSpeakerMutationOptions = Apollo.BaseMutationOptions<DeleteOneSpeakerMutation, DeleteOneSpeakerMutationVariables>;
export const DeleteManySpeakerDocument = gql`
    mutation deleteManySpeaker($where: SpeakerWhereInput) {
  deleteManySpeaker(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManySpeakerMutation__
 *
 * To run a mutation, you first call `useDeleteManySpeakerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManySpeakerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManySpeakerMutation, { data, loading, error }] = useDeleteManySpeakerMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManySpeakerMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManySpeakerMutation, DeleteManySpeakerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManySpeakerMutation, DeleteManySpeakerMutationVariables>(DeleteManySpeakerDocument, options);
      }
export type DeleteManySpeakerMutationHookResult = ReturnType<typeof useDeleteManySpeakerMutation>;
export type DeleteManySpeakerMutationResult = Apollo.MutationResult<DeleteManySpeakerMutation>;
export type DeleteManySpeakerMutationOptions = Apollo.BaseMutationOptions<DeleteManySpeakerMutation, DeleteManySpeakerMutationVariables>;
export const UpdateManySpeakerDocument = gql`
    mutation updateManySpeaker($where: SpeakerWhereInput, $data: SpeakerUpdateManyMutationInput!) {
  updateManySpeaker(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManySpeakerMutation__
 *
 * To run a mutation, you first call `useUpdateManySpeakerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManySpeakerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManySpeakerMutation, { data, loading, error }] = useUpdateManySpeakerMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManySpeakerMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManySpeakerMutation, UpdateManySpeakerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManySpeakerMutation, UpdateManySpeakerMutationVariables>(UpdateManySpeakerDocument, options);
      }
export type UpdateManySpeakerMutationHookResult = ReturnType<typeof useUpdateManySpeakerMutation>;
export type UpdateManySpeakerMutationResult = Apollo.MutationResult<UpdateManySpeakerMutation>;
export type UpdateManySpeakerMutationOptions = Apollo.BaseMutationOptions<UpdateManySpeakerMutation, UpdateManySpeakerMutationVariables>;
export const FindUniqueUserDocument = gql`
    query findUniqueUser($where: UserWhereUniqueInput!) {
  findUniqueUser(where: $where) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useFindUniqueUserQuery__
 *
 * To run a query within a React component, call `useFindUniqueUserQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueUserQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueUserQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueUserQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueUserQuery, FindUniqueUserQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueUserQuery, FindUniqueUserQueryVariables>(FindUniqueUserDocument, options);
      }
export function useFindUniqueUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueUserQuery, FindUniqueUserQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueUserQuery, FindUniqueUserQueryVariables>(FindUniqueUserDocument, options);
        }
export type FindUniqueUserQueryHookResult = ReturnType<typeof useFindUniqueUserQuery>;
export type FindUniqueUserLazyQueryHookResult = ReturnType<typeof useFindUniqueUserLazyQuery>;
export type FindUniqueUserQueryResult = Apollo.QueryResult<FindUniqueUserQuery, FindUniqueUserQueryVariables>;
export const FindManyUserDocument = gql`
    query findManyUser($where: UserWhereInput, $orderBy: [UserOrderByWithRelationInput!], $cursor: UserWhereUniqueInput, $skip: Int, $take: Int) {
  findManyUser(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useFindManyUserQuery__
 *
 * To run a query within a React component, call `useFindManyUserQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyUserQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyUserQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyUserQuery(baseOptions?: Apollo.QueryHookOptions<FindManyUserQuery, FindManyUserQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyUserQuery, FindManyUserQueryVariables>(FindManyUserDocument, options);
      }
export function useFindManyUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyUserQuery, FindManyUserQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyUserQuery, FindManyUserQueryVariables>(FindManyUserDocument, options);
        }
export type FindManyUserQueryHookResult = ReturnType<typeof useFindManyUserQuery>;
export type FindManyUserLazyQueryHookResult = ReturnType<typeof useFindManyUserLazyQuery>;
export type FindManyUserQueryResult = Apollo.QueryResult<FindManyUserQuery, FindManyUserQueryVariables>;
export const FindManyUserCountDocument = gql`
    query findManyUserCount($where: UserWhereInput, $orderBy: [UserOrderByWithRelationInput!], $cursor: UserWhereUniqueInput, $skip: Int, $take: Int) {
  findManyUserCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyUserCountQuery__
 *
 * To run a query within a React component, call `useFindManyUserCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyUserCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyUserCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyUserCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyUserCountQuery, FindManyUserCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyUserCountQuery, FindManyUserCountQueryVariables>(FindManyUserCountDocument, options);
      }
export function useFindManyUserCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyUserCountQuery, FindManyUserCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyUserCountQuery, FindManyUserCountQueryVariables>(FindManyUserCountDocument, options);
        }
export type FindManyUserCountQueryHookResult = ReturnType<typeof useFindManyUserCountQuery>;
export type FindManyUserCountLazyQueryHookResult = ReturnType<typeof useFindManyUserCountLazyQuery>;
export type FindManyUserCountQueryResult = Apollo.QueryResult<FindManyUserCountQuery, FindManyUserCountQueryVariables>;
export const CreateOneUserDocument = gql`
    mutation createOneUser($data: UserCreateInput!) {
  createOneUser(data: $data) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useCreateOneUserMutation__
 *
 * To run a mutation, you first call `useCreateOneUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneUserMutation, { data, loading, error }] = useCreateOneUserMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneUserMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneUserMutation, CreateOneUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneUserMutation, CreateOneUserMutationVariables>(CreateOneUserDocument, options);
      }
export type CreateOneUserMutationHookResult = ReturnType<typeof useCreateOneUserMutation>;
export type CreateOneUserMutationResult = Apollo.MutationResult<CreateOneUserMutation>;
export type CreateOneUserMutationOptions = Apollo.BaseMutationOptions<CreateOneUserMutation, CreateOneUserMutationVariables>;
export const UpdateOneUserDocument = gql`
    mutation updateOneUser($where: UserWhereUniqueInput!, $data: UserUpdateInput!) {
  updateOneUser(where: $where, data: $data) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useUpdateOneUserMutation__
 *
 * To run a mutation, you first call `useUpdateOneUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneUserMutation, { data, loading, error }] = useUpdateOneUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneUserMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneUserMutation, UpdateOneUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneUserMutation, UpdateOneUserMutationVariables>(UpdateOneUserDocument, options);
      }
export type UpdateOneUserMutationHookResult = ReturnType<typeof useUpdateOneUserMutation>;
export type UpdateOneUserMutationResult = Apollo.MutationResult<UpdateOneUserMutation>;
export type UpdateOneUserMutationOptions = Apollo.BaseMutationOptions<UpdateOneUserMutation, UpdateOneUserMutationVariables>;
export const DeleteOneUserDocument = gql`
    mutation deleteOneUser($where: UserWhereUniqueInput!) {
  deleteOneUser(where: $where) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useDeleteOneUserMutation__
 *
 * To run a mutation, you first call `useDeleteOneUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneUserMutation, { data, loading, error }] = useDeleteOneUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneUserMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneUserMutation, DeleteOneUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneUserMutation, DeleteOneUserMutationVariables>(DeleteOneUserDocument, options);
      }
export type DeleteOneUserMutationHookResult = ReturnType<typeof useDeleteOneUserMutation>;
export type DeleteOneUserMutationResult = Apollo.MutationResult<DeleteOneUserMutation>;
export type DeleteOneUserMutationOptions = Apollo.BaseMutationOptions<DeleteOneUserMutation, DeleteOneUserMutationVariables>;
export const DeleteManyUserDocument = gql`
    mutation deleteManyUser($where: UserWhereInput) {
  deleteManyUser(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyUserMutation__
 *
 * To run a mutation, you first call `useDeleteManyUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyUserMutation, { data, loading, error }] = useDeleteManyUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyUserMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyUserMutation, DeleteManyUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyUserMutation, DeleteManyUserMutationVariables>(DeleteManyUserDocument, options);
      }
export type DeleteManyUserMutationHookResult = ReturnType<typeof useDeleteManyUserMutation>;
export type DeleteManyUserMutationResult = Apollo.MutationResult<DeleteManyUserMutation>;
export type DeleteManyUserMutationOptions = Apollo.BaseMutationOptions<DeleteManyUserMutation, DeleteManyUserMutationVariables>;
export const UpdateManyUserDocument = gql`
    mutation updateManyUser($where: UserWhereInput, $data: UserUpdateManyMutationInput!) {
  updateManyUser(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyUserMutation__
 *
 * To run a mutation, you first call `useUpdateManyUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyUserMutation, { data, loading, error }] = useUpdateManyUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyUserMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyUserMutation, UpdateManyUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyUserMutation, UpdateManyUserMutationVariables>(UpdateManyUserDocument, options);
      }
export type UpdateManyUserMutationHookResult = ReturnType<typeof useUpdateManyUserMutation>;
export type UpdateManyUserMutationResult = Apollo.MutationResult<UpdateManyUserMutation>;
export type UpdateManyUserMutationOptions = Apollo.BaseMutationOptions<UpdateManyUserMutation, UpdateManyUserMutationVariables>;
export const FindUniqueVideoDocument = gql`
    query findUniqueVideo($where: VideoWhereUniqueInput!) {
  findUniqueVideo(where: $where) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useFindUniqueVideoQuery__
 *
 * To run a query within a React component, call `useFindUniqueVideoQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueVideoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueVideoQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueVideoQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>(FindUniqueVideoDocument, options);
      }
export function useFindUniqueVideoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>(FindUniqueVideoDocument, options);
        }
export type FindUniqueVideoQueryHookResult = ReturnType<typeof useFindUniqueVideoQuery>;
export type FindUniqueVideoLazyQueryHookResult = ReturnType<typeof useFindUniqueVideoLazyQuery>;
export type FindUniqueVideoQueryResult = Apollo.QueryResult<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>;
export const FindManyVideoDocument = gql`
    query findManyVideo($where: VideoWhereInput, $orderBy: [VideoOrderByWithRelationInput!], $cursor: VideoWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideo(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useFindManyVideoQuery__
 *
 * To run a query within a React component, call `useFindManyVideoQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoQuery, FindManyVideoQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoQuery, FindManyVideoQueryVariables>(FindManyVideoDocument, options);
      }
export function useFindManyVideoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoQuery, FindManyVideoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoQuery, FindManyVideoQueryVariables>(FindManyVideoDocument, options);
        }
export type FindManyVideoQueryHookResult = ReturnType<typeof useFindManyVideoQuery>;
export type FindManyVideoLazyQueryHookResult = ReturnType<typeof useFindManyVideoLazyQuery>;
export type FindManyVideoQueryResult = Apollo.QueryResult<FindManyVideoQuery, FindManyVideoQueryVariables>;
export const FindManyVideoCountDocument = gql`
    query findManyVideoCount($where: VideoWhereInput, $orderBy: [VideoOrderByWithRelationInput!], $cursor: VideoWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideoCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyVideoCountQuery__
 *
 * To run a query within a React component, call `useFindManyVideoCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>(FindManyVideoCountDocument, options);
      }
export function useFindManyVideoCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>(FindManyVideoCountDocument, options);
        }
export type FindManyVideoCountQueryHookResult = ReturnType<typeof useFindManyVideoCountQuery>;
export type FindManyVideoCountLazyQueryHookResult = ReturnType<typeof useFindManyVideoCountLazyQuery>;
export type FindManyVideoCountQueryResult = Apollo.QueryResult<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>;
export const CreateOneVideoDocument = gql`
    mutation createOneVideo($data: VideoCreateInput!) {
  createOneVideo(data: $data) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useCreateOneVideoMutation__
 *
 * To run a mutation, you first call `useCreateOneVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneVideoMutation, { data, loading, error }] = useCreateOneVideoMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneVideoMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneVideoMutation, CreateOneVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneVideoMutation, CreateOneVideoMutationVariables>(CreateOneVideoDocument, options);
      }
export type CreateOneVideoMutationHookResult = ReturnType<typeof useCreateOneVideoMutation>;
export type CreateOneVideoMutationResult = Apollo.MutationResult<CreateOneVideoMutation>;
export type CreateOneVideoMutationOptions = Apollo.BaseMutationOptions<CreateOneVideoMutation, CreateOneVideoMutationVariables>;
export const UpdateOneVideoDocument = gql`
    mutation updateOneVideo($where: VideoWhereUniqueInput!, $data: VideoUpdateInput!) {
  updateOneVideo(where: $where, data: $data) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useUpdateOneVideoMutation__
 *
 * To run a mutation, you first call `useUpdateOneVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneVideoMutation, { data, loading, error }] = useUpdateOneVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneVideoMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneVideoMutation, UpdateOneVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneVideoMutation, UpdateOneVideoMutationVariables>(UpdateOneVideoDocument, options);
      }
export type UpdateOneVideoMutationHookResult = ReturnType<typeof useUpdateOneVideoMutation>;
export type UpdateOneVideoMutationResult = Apollo.MutationResult<UpdateOneVideoMutation>;
export type UpdateOneVideoMutationOptions = Apollo.BaseMutationOptions<UpdateOneVideoMutation, UpdateOneVideoMutationVariables>;
export const DeleteOneVideoDocument = gql`
    mutation deleteOneVideo($where: VideoWhereUniqueInput!) {
  deleteOneVideo(where: $where) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useDeleteOneVideoMutation__
 *
 * To run a mutation, you first call `useDeleteOneVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneVideoMutation, { data, loading, error }] = useDeleteOneVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneVideoMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneVideoMutation, DeleteOneVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneVideoMutation, DeleteOneVideoMutationVariables>(DeleteOneVideoDocument, options);
      }
export type DeleteOneVideoMutationHookResult = ReturnType<typeof useDeleteOneVideoMutation>;
export type DeleteOneVideoMutationResult = Apollo.MutationResult<DeleteOneVideoMutation>;
export type DeleteOneVideoMutationOptions = Apollo.BaseMutationOptions<DeleteOneVideoMutation, DeleteOneVideoMutationVariables>;
export const DeleteManyVideoDocument = gql`
    mutation deleteManyVideo($where: VideoWhereInput) {
  deleteManyVideo(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyVideoMutation__
 *
 * To run a mutation, you first call `useDeleteManyVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyVideoMutation, { data, loading, error }] = useDeleteManyVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyVideoMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyVideoMutation, DeleteManyVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyVideoMutation, DeleteManyVideoMutationVariables>(DeleteManyVideoDocument, options);
      }
export type DeleteManyVideoMutationHookResult = ReturnType<typeof useDeleteManyVideoMutation>;
export type DeleteManyVideoMutationResult = Apollo.MutationResult<DeleteManyVideoMutation>;
export type DeleteManyVideoMutationOptions = Apollo.BaseMutationOptions<DeleteManyVideoMutation, DeleteManyVideoMutationVariables>;
export const UpdateManyVideoDocument = gql`
    mutation updateManyVideo($where: VideoWhereInput, $data: VideoUpdateManyMutationInput!) {
  updateManyVideo(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyVideoMutation__
 *
 * To run a mutation, you first call `useUpdateManyVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyVideoMutation, { data, loading, error }] = useUpdateManyVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyVideoMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyVideoMutation, UpdateManyVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyVideoMutation, UpdateManyVideoMutationVariables>(UpdateManyVideoDocument, options);
      }
export type UpdateManyVideoMutationHookResult = ReturnType<typeof useUpdateManyVideoMutation>;
export type UpdateManyVideoMutationResult = Apollo.MutationResult<UpdateManyVideoMutation>;
export type UpdateManyVideoMutationOptions = Apollo.BaseMutationOptions<UpdateManyVideoMutation, UpdateManyVideoMutationVariables>;
export const FindUniqueVideoCollectionDocument = gql`
    query findUniqueVideoCollection($where: VideoCollectionWhereUniqueInput!) {
  findUniqueVideoCollection(where: $where) {
    ...VideoCollection
  }
}
    ${VideoCollectionFragmentDoc}`;

/**
 * __useFindUniqueVideoCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniqueVideoCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueVideoCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueVideoCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueVideoCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueVideoCollectionQuery, FindUniqueVideoCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueVideoCollectionQuery, FindUniqueVideoCollectionQueryVariables>(FindUniqueVideoCollectionDocument, options);
      }
export function useFindUniqueVideoCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueVideoCollectionQuery, FindUniqueVideoCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueVideoCollectionQuery, FindUniqueVideoCollectionQueryVariables>(FindUniqueVideoCollectionDocument, options);
        }
export type FindUniqueVideoCollectionQueryHookResult = ReturnType<typeof useFindUniqueVideoCollectionQuery>;
export type FindUniqueVideoCollectionLazyQueryHookResult = ReturnType<typeof useFindUniqueVideoCollectionLazyQuery>;
export type FindUniqueVideoCollectionQueryResult = Apollo.QueryResult<FindUniqueVideoCollectionQuery, FindUniqueVideoCollectionQueryVariables>;
export const FindManyVideoCollectionDocument = gql`
    query findManyVideoCollection($where: VideoCollectionWhereInput, $orderBy: [VideoCollectionOrderByWithRelationInput!], $cursor: VideoCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideoCollection(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...VideoCollection
  }
}
    ${VideoCollectionFragmentDoc}`;

/**
 * __useFindManyVideoCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyVideoCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoCollectionQuery, FindManyVideoCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoCollectionQuery, FindManyVideoCollectionQueryVariables>(FindManyVideoCollectionDocument, options);
      }
export function useFindManyVideoCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoCollectionQuery, FindManyVideoCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoCollectionQuery, FindManyVideoCollectionQueryVariables>(FindManyVideoCollectionDocument, options);
        }
export type FindManyVideoCollectionQueryHookResult = ReturnType<typeof useFindManyVideoCollectionQuery>;
export type FindManyVideoCollectionLazyQueryHookResult = ReturnType<typeof useFindManyVideoCollectionLazyQuery>;
export type FindManyVideoCollectionQueryResult = Apollo.QueryResult<FindManyVideoCollectionQuery, FindManyVideoCollectionQueryVariables>;
export const FindManyVideoCollectionCountDocument = gql`
    query findManyVideoCollectionCount($where: VideoCollectionWhereInput, $orderBy: [VideoCollectionOrderByWithRelationInput!], $cursor: VideoCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideoCollectionCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyVideoCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyVideoCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoCollectionCountQuery, FindManyVideoCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoCollectionCountQuery, FindManyVideoCollectionCountQueryVariables>(FindManyVideoCollectionCountDocument, options);
      }
export function useFindManyVideoCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoCollectionCountQuery, FindManyVideoCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoCollectionCountQuery, FindManyVideoCollectionCountQueryVariables>(FindManyVideoCollectionCountDocument, options);
        }
export type FindManyVideoCollectionCountQueryHookResult = ReturnType<typeof useFindManyVideoCollectionCountQuery>;
export type FindManyVideoCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyVideoCollectionCountLazyQuery>;
export type FindManyVideoCollectionCountQueryResult = Apollo.QueryResult<FindManyVideoCollectionCountQuery, FindManyVideoCollectionCountQueryVariables>;
export const CreateOneVideoCollectionDocument = gql`
    mutation createOneVideoCollection($data: VideoCollectionCreateInput!) {
  createOneVideoCollection(data: $data) {
    ...VideoCollection
  }
}
    ${VideoCollectionFragmentDoc}`;

/**
 * __useCreateOneVideoCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOneVideoCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneVideoCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneVideoCollectionMutation, { data, loading, error }] = useCreateOneVideoCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneVideoCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneVideoCollectionMutation, CreateOneVideoCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneVideoCollectionMutation, CreateOneVideoCollectionMutationVariables>(CreateOneVideoCollectionDocument, options);
      }
export type CreateOneVideoCollectionMutationHookResult = ReturnType<typeof useCreateOneVideoCollectionMutation>;
export type CreateOneVideoCollectionMutationResult = Apollo.MutationResult<CreateOneVideoCollectionMutation>;
export type CreateOneVideoCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOneVideoCollectionMutation, CreateOneVideoCollectionMutationVariables>;
export const UpdateOneVideoCollectionDocument = gql`
    mutation updateOneVideoCollection($where: VideoCollectionWhereUniqueInput!, $data: VideoCollectionUpdateInput!) {
  updateOneVideoCollection(where: $where, data: $data) {
    ...VideoCollection
  }
}
    ${VideoCollectionFragmentDoc}`;

/**
 * __useUpdateOneVideoCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOneVideoCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneVideoCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneVideoCollectionMutation, { data, loading, error }] = useUpdateOneVideoCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneVideoCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneVideoCollectionMutation, UpdateOneVideoCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneVideoCollectionMutation, UpdateOneVideoCollectionMutationVariables>(UpdateOneVideoCollectionDocument, options);
      }
export type UpdateOneVideoCollectionMutationHookResult = ReturnType<typeof useUpdateOneVideoCollectionMutation>;
export type UpdateOneVideoCollectionMutationResult = Apollo.MutationResult<UpdateOneVideoCollectionMutation>;
export type UpdateOneVideoCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOneVideoCollectionMutation, UpdateOneVideoCollectionMutationVariables>;
export const DeleteOneVideoCollectionDocument = gql`
    mutation deleteOneVideoCollection($where: VideoCollectionWhereUniqueInput!) {
  deleteOneVideoCollection(where: $where) {
    ...VideoCollection
  }
}
    ${VideoCollectionFragmentDoc}`;

/**
 * __useDeleteOneVideoCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOneVideoCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneVideoCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneVideoCollectionMutation, { data, loading, error }] = useDeleteOneVideoCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneVideoCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneVideoCollectionMutation, DeleteOneVideoCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneVideoCollectionMutation, DeleteOneVideoCollectionMutationVariables>(DeleteOneVideoCollectionDocument, options);
      }
export type DeleteOneVideoCollectionMutationHookResult = ReturnType<typeof useDeleteOneVideoCollectionMutation>;
export type DeleteOneVideoCollectionMutationResult = Apollo.MutationResult<DeleteOneVideoCollectionMutation>;
export type DeleteOneVideoCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOneVideoCollectionMutation, DeleteOneVideoCollectionMutationVariables>;
export const DeleteManyVideoCollectionDocument = gql`
    mutation deleteManyVideoCollection($where: VideoCollectionWhereInput) {
  deleteManyVideoCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyVideoCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyVideoCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyVideoCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyVideoCollectionMutation, { data, loading, error }] = useDeleteManyVideoCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyVideoCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyVideoCollectionMutation, DeleteManyVideoCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyVideoCollectionMutation, DeleteManyVideoCollectionMutationVariables>(DeleteManyVideoCollectionDocument, options);
      }
export type DeleteManyVideoCollectionMutationHookResult = ReturnType<typeof useDeleteManyVideoCollectionMutation>;
export type DeleteManyVideoCollectionMutationResult = Apollo.MutationResult<DeleteManyVideoCollectionMutation>;
export type DeleteManyVideoCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyVideoCollectionMutation, DeleteManyVideoCollectionMutationVariables>;
export const UpdateManyVideoCollectionDocument = gql`
    mutation updateManyVideoCollection($where: VideoCollectionWhereInput, $data: VideoCollectionUpdateManyMutationInput!) {
  updateManyVideoCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyVideoCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyVideoCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyVideoCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyVideoCollectionMutation, { data, loading, error }] = useUpdateManyVideoCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyVideoCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyVideoCollectionMutation, UpdateManyVideoCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyVideoCollectionMutation, UpdateManyVideoCollectionMutationVariables>(UpdateManyVideoCollectionDocument, options);
      }
export type UpdateManyVideoCollectionMutationHookResult = ReturnType<typeof useUpdateManyVideoCollectionMutation>;
export type UpdateManyVideoCollectionMutationResult = Apollo.MutationResult<UpdateManyVideoCollectionMutation>;
export type UpdateManyVideoCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyVideoCollectionMutation, UpdateManyVideoCollectionMutationVariables>;
export const FindUniqueVideoViewDocument = gql`
    query findUniqueVideoView($where: VideoViewWhereUniqueInput!) {
  findUniqueVideoView(where: $where) {
    ...VideoView
  }
}
    ${VideoViewFragmentDoc}`;

/**
 * __useFindUniqueVideoViewQuery__
 *
 * To run a query within a React component, call `useFindUniqueVideoViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueVideoViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueVideoViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueVideoViewQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueVideoViewQuery, FindUniqueVideoViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueVideoViewQuery, FindUniqueVideoViewQueryVariables>(FindUniqueVideoViewDocument, options);
      }
export function useFindUniqueVideoViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueVideoViewQuery, FindUniqueVideoViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueVideoViewQuery, FindUniqueVideoViewQueryVariables>(FindUniqueVideoViewDocument, options);
        }
export type FindUniqueVideoViewQueryHookResult = ReturnType<typeof useFindUniqueVideoViewQuery>;
export type FindUniqueVideoViewLazyQueryHookResult = ReturnType<typeof useFindUniqueVideoViewLazyQuery>;
export type FindUniqueVideoViewQueryResult = Apollo.QueryResult<FindUniqueVideoViewQuery, FindUniqueVideoViewQueryVariables>;
export const FindManyVideoViewDocument = gql`
    query findManyVideoView($where: VideoViewWhereInput, $orderBy: [VideoViewOrderByWithRelationInput!], $cursor: VideoViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideoView(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...VideoView
  }
}
    ${VideoViewFragmentDoc}`;

/**
 * __useFindManyVideoViewQuery__
 *
 * To run a query within a React component, call `useFindManyVideoViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoViewQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoViewQuery, FindManyVideoViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoViewQuery, FindManyVideoViewQueryVariables>(FindManyVideoViewDocument, options);
      }
export function useFindManyVideoViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoViewQuery, FindManyVideoViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoViewQuery, FindManyVideoViewQueryVariables>(FindManyVideoViewDocument, options);
        }
export type FindManyVideoViewQueryHookResult = ReturnType<typeof useFindManyVideoViewQuery>;
export type FindManyVideoViewLazyQueryHookResult = ReturnType<typeof useFindManyVideoViewLazyQuery>;
export type FindManyVideoViewQueryResult = Apollo.QueryResult<FindManyVideoViewQuery, FindManyVideoViewQueryVariables>;
export const FindManyVideoViewCountDocument = gql`
    query findManyVideoViewCount($where: VideoViewWhereInput, $orderBy: [VideoViewOrderByWithRelationInput!], $cursor: VideoViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideoViewCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyVideoViewCountQuery__
 *
 * To run a query within a React component, call `useFindManyVideoViewCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoViewCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoViewCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoViewCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoViewCountQuery, FindManyVideoViewCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoViewCountQuery, FindManyVideoViewCountQueryVariables>(FindManyVideoViewCountDocument, options);
      }
export function useFindManyVideoViewCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoViewCountQuery, FindManyVideoViewCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoViewCountQuery, FindManyVideoViewCountQueryVariables>(FindManyVideoViewCountDocument, options);
        }
export type FindManyVideoViewCountQueryHookResult = ReturnType<typeof useFindManyVideoViewCountQuery>;
export type FindManyVideoViewCountLazyQueryHookResult = ReturnType<typeof useFindManyVideoViewCountLazyQuery>;
export type FindManyVideoViewCountQueryResult = Apollo.QueryResult<FindManyVideoViewCountQuery, FindManyVideoViewCountQueryVariables>;
export const CreateOneVideoViewDocument = gql`
    mutation createOneVideoView($data: VideoViewCreateInput!) {
  createOneVideoView(data: $data) {
    ...VideoView
  }
}
    ${VideoViewFragmentDoc}`;

/**
 * __useCreateOneVideoViewMutation__
 *
 * To run a mutation, you first call `useCreateOneVideoViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneVideoViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneVideoViewMutation, { data, loading, error }] = useCreateOneVideoViewMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneVideoViewMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneVideoViewMutation, CreateOneVideoViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneVideoViewMutation, CreateOneVideoViewMutationVariables>(CreateOneVideoViewDocument, options);
      }
export type CreateOneVideoViewMutationHookResult = ReturnType<typeof useCreateOneVideoViewMutation>;
export type CreateOneVideoViewMutationResult = Apollo.MutationResult<CreateOneVideoViewMutation>;
export type CreateOneVideoViewMutationOptions = Apollo.BaseMutationOptions<CreateOneVideoViewMutation, CreateOneVideoViewMutationVariables>;
export const UpdateOneVideoViewDocument = gql`
    mutation updateOneVideoView($where: VideoViewWhereUniqueInput!, $data: VideoViewUpdateInput!) {
  updateOneVideoView(where: $where, data: $data) {
    ...VideoView
  }
}
    ${VideoViewFragmentDoc}`;

/**
 * __useUpdateOneVideoViewMutation__
 *
 * To run a mutation, you first call `useUpdateOneVideoViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneVideoViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneVideoViewMutation, { data, loading, error }] = useUpdateOneVideoViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneVideoViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneVideoViewMutation, UpdateOneVideoViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneVideoViewMutation, UpdateOneVideoViewMutationVariables>(UpdateOneVideoViewDocument, options);
      }
export type UpdateOneVideoViewMutationHookResult = ReturnType<typeof useUpdateOneVideoViewMutation>;
export type UpdateOneVideoViewMutationResult = Apollo.MutationResult<UpdateOneVideoViewMutation>;
export type UpdateOneVideoViewMutationOptions = Apollo.BaseMutationOptions<UpdateOneVideoViewMutation, UpdateOneVideoViewMutationVariables>;
export const DeleteOneVideoViewDocument = gql`
    mutation deleteOneVideoView($where: VideoViewWhereUniqueInput!) {
  deleteOneVideoView(where: $where) {
    ...VideoView
  }
}
    ${VideoViewFragmentDoc}`;

/**
 * __useDeleteOneVideoViewMutation__
 *
 * To run a mutation, you first call `useDeleteOneVideoViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneVideoViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneVideoViewMutation, { data, loading, error }] = useDeleteOneVideoViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneVideoViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneVideoViewMutation, DeleteOneVideoViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneVideoViewMutation, DeleteOneVideoViewMutationVariables>(DeleteOneVideoViewDocument, options);
      }
export type DeleteOneVideoViewMutationHookResult = ReturnType<typeof useDeleteOneVideoViewMutation>;
export type DeleteOneVideoViewMutationResult = Apollo.MutationResult<DeleteOneVideoViewMutation>;
export type DeleteOneVideoViewMutationOptions = Apollo.BaseMutationOptions<DeleteOneVideoViewMutation, DeleteOneVideoViewMutationVariables>;
export const DeleteManyVideoViewDocument = gql`
    mutation deleteManyVideoView($where: VideoViewWhereInput) {
  deleteManyVideoView(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyVideoViewMutation__
 *
 * To run a mutation, you first call `useDeleteManyVideoViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyVideoViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyVideoViewMutation, { data, loading, error }] = useDeleteManyVideoViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyVideoViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyVideoViewMutation, DeleteManyVideoViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyVideoViewMutation, DeleteManyVideoViewMutationVariables>(DeleteManyVideoViewDocument, options);
      }
export type DeleteManyVideoViewMutationHookResult = ReturnType<typeof useDeleteManyVideoViewMutation>;
export type DeleteManyVideoViewMutationResult = Apollo.MutationResult<DeleteManyVideoViewMutation>;
export type DeleteManyVideoViewMutationOptions = Apollo.BaseMutationOptions<DeleteManyVideoViewMutation, DeleteManyVideoViewMutationVariables>;
export const UpdateManyVideoViewDocument = gql`
    mutation updateManyVideoView($where: VideoViewWhereInput, $data: VideoViewUpdateManyMutationInput!) {
  updateManyVideoView(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyVideoViewMutation__
 *
 * To run a mutation, you first call `useUpdateManyVideoViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyVideoViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyVideoViewMutation, { data, loading, error }] = useUpdateManyVideoViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyVideoViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyVideoViewMutation, UpdateManyVideoViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyVideoViewMutation, UpdateManyVideoViewMutationVariables>(UpdateManyVideoViewDocument, options);
      }
export type UpdateManyVideoViewMutationHookResult = ReturnType<typeof useUpdateManyVideoViewMutation>;
export type UpdateManyVideoViewMutationResult = Apollo.MutationResult<UpdateManyVideoViewMutation>;
export type UpdateManyVideoViewMutationOptions = Apollo.BaseMutationOptions<UpdateManyVideoViewMutation, UpdateManyVideoViewMutationVariables>;
export const FindUniqueWebsiteDocument = gql`
    query findUniqueWebsite($where: WebsiteWhereUniqueInput!) {
  findUniqueWebsite(where: $where) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useFindUniqueWebsiteQuery__
 *
 * To run a query within a React component, call `useFindUniqueWebsiteQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueWebsiteQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueWebsiteQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueWebsiteQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>(FindUniqueWebsiteDocument, options);
      }
export function useFindUniqueWebsiteLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>(FindUniqueWebsiteDocument, options);
        }
export type FindUniqueWebsiteQueryHookResult = ReturnType<typeof useFindUniqueWebsiteQuery>;
export type FindUniqueWebsiteLazyQueryHookResult = ReturnType<typeof useFindUniqueWebsiteLazyQuery>;
export type FindUniqueWebsiteQueryResult = Apollo.QueryResult<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>;
export const FindManyWebsiteDocument = gql`
    query findManyWebsite($where: WebsiteWhereInput, $orderBy: [WebsiteOrderByWithRelationInput!], $cursor: WebsiteWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWebsite(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useFindManyWebsiteQuery__
 *
 * To run a query within a React component, call `useFindManyWebsiteQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWebsiteQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWebsiteQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWebsiteQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>(FindManyWebsiteDocument, options);
      }
export function useFindManyWebsiteLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>(FindManyWebsiteDocument, options);
        }
export type FindManyWebsiteQueryHookResult = ReturnType<typeof useFindManyWebsiteQuery>;
export type FindManyWebsiteLazyQueryHookResult = ReturnType<typeof useFindManyWebsiteLazyQuery>;
export type FindManyWebsiteQueryResult = Apollo.QueryResult<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>;
export const FindManyWebsiteCountDocument = gql`
    query findManyWebsiteCount($where: WebsiteWhereInput, $orderBy: [WebsiteOrderByWithRelationInput!], $cursor: WebsiteWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWebsiteCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyWebsiteCountQuery__
 *
 * To run a query within a React component, call `useFindManyWebsiteCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWebsiteCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWebsiteCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWebsiteCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>(FindManyWebsiteCountDocument, options);
      }
export function useFindManyWebsiteCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>(FindManyWebsiteCountDocument, options);
        }
export type FindManyWebsiteCountQueryHookResult = ReturnType<typeof useFindManyWebsiteCountQuery>;
export type FindManyWebsiteCountLazyQueryHookResult = ReturnType<typeof useFindManyWebsiteCountLazyQuery>;
export type FindManyWebsiteCountQueryResult = Apollo.QueryResult<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>;
export const CreateOneWebsiteDocument = gql`
    mutation createOneWebsite($data: WebsiteCreateInput!) {
  createOneWebsite(data: $data) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useCreateOneWebsiteMutation__
 *
 * To run a mutation, you first call `useCreateOneWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneWebsiteMutation, { data, loading, error }] = useCreateOneWebsiteMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneWebsiteMutation, CreateOneWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneWebsiteMutation, CreateOneWebsiteMutationVariables>(CreateOneWebsiteDocument, options);
      }
export type CreateOneWebsiteMutationHookResult = ReturnType<typeof useCreateOneWebsiteMutation>;
export type CreateOneWebsiteMutationResult = Apollo.MutationResult<CreateOneWebsiteMutation>;
export type CreateOneWebsiteMutationOptions = Apollo.BaseMutationOptions<CreateOneWebsiteMutation, CreateOneWebsiteMutationVariables>;
export const UpdateOneWebsiteDocument = gql`
    mutation updateOneWebsite($where: WebsiteWhereUniqueInput!, $data: WebsiteUpdateInput!) {
  updateOneWebsite(where: $where, data: $data) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useUpdateOneWebsiteMutation__
 *
 * To run a mutation, you first call `useUpdateOneWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneWebsiteMutation, { data, loading, error }] = useUpdateOneWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneWebsiteMutation, UpdateOneWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneWebsiteMutation, UpdateOneWebsiteMutationVariables>(UpdateOneWebsiteDocument, options);
      }
export type UpdateOneWebsiteMutationHookResult = ReturnType<typeof useUpdateOneWebsiteMutation>;
export type UpdateOneWebsiteMutationResult = Apollo.MutationResult<UpdateOneWebsiteMutation>;
export type UpdateOneWebsiteMutationOptions = Apollo.BaseMutationOptions<UpdateOneWebsiteMutation, UpdateOneWebsiteMutationVariables>;
export const DeleteOneWebsiteDocument = gql`
    mutation deleteOneWebsite($where: WebsiteWhereUniqueInput!) {
  deleteOneWebsite(where: $where) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useDeleteOneWebsiteMutation__
 *
 * To run a mutation, you first call `useDeleteOneWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneWebsiteMutation, { data, loading, error }] = useDeleteOneWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneWebsiteMutation, DeleteOneWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneWebsiteMutation, DeleteOneWebsiteMutationVariables>(DeleteOneWebsiteDocument, options);
      }
export type DeleteOneWebsiteMutationHookResult = ReturnType<typeof useDeleteOneWebsiteMutation>;
export type DeleteOneWebsiteMutationResult = Apollo.MutationResult<DeleteOneWebsiteMutation>;
export type DeleteOneWebsiteMutationOptions = Apollo.BaseMutationOptions<DeleteOneWebsiteMutation, DeleteOneWebsiteMutationVariables>;
export const DeleteManyWebsiteDocument = gql`
    mutation deleteManyWebsite($where: WebsiteWhereInput) {
  deleteManyWebsite(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyWebsiteMutation__
 *
 * To run a mutation, you first call `useDeleteManyWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyWebsiteMutation, { data, loading, error }] = useDeleteManyWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyWebsiteMutation, DeleteManyWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyWebsiteMutation, DeleteManyWebsiteMutationVariables>(DeleteManyWebsiteDocument, options);
      }
export type DeleteManyWebsiteMutationHookResult = ReturnType<typeof useDeleteManyWebsiteMutation>;
export type DeleteManyWebsiteMutationResult = Apollo.MutationResult<DeleteManyWebsiteMutation>;
export type DeleteManyWebsiteMutationOptions = Apollo.BaseMutationOptions<DeleteManyWebsiteMutation, DeleteManyWebsiteMutationVariables>;
export const UpdateManyWebsiteDocument = gql`
    mutation updateManyWebsite($where: WebsiteWhereInput, $data: WebsiteUpdateManyMutationInput!) {
  updateManyWebsite(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyWebsiteMutation__
 *
 * To run a mutation, you first call `useUpdateManyWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyWebsiteMutation, { data, loading, error }] = useUpdateManyWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyWebsiteMutation, UpdateManyWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyWebsiteMutation, UpdateManyWebsiteMutationVariables>(UpdateManyWebsiteDocument, options);
      }
export type UpdateManyWebsiteMutationHookResult = ReturnType<typeof useUpdateManyWebsiteMutation>;
export type UpdateManyWebsiteMutationResult = Apollo.MutationResult<UpdateManyWebsiteMutation>;
export type UpdateManyWebsiteMutationOptions = Apollo.BaseMutationOptions<UpdateManyWebsiteMutation, UpdateManyWebsiteMutationVariables>;
export const FindUniqueWebsiteGroupDocument = gql`
    query findUniqueWebsiteGroup($where: WebsiteGroupWhereUniqueInput!) {
  findUniqueWebsiteGroup(where: $where) {
    ...WebsiteGroup
  }
}
    ${WebsiteGroupFragmentDoc}`;

/**
 * __useFindUniqueWebsiteGroupQuery__
 *
 * To run a query within a React component, call `useFindUniqueWebsiteGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueWebsiteGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueWebsiteGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueWebsiteGroupQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueWebsiteGroupQuery, FindUniqueWebsiteGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueWebsiteGroupQuery, FindUniqueWebsiteGroupQueryVariables>(FindUniqueWebsiteGroupDocument, options);
      }
export function useFindUniqueWebsiteGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueWebsiteGroupQuery, FindUniqueWebsiteGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueWebsiteGroupQuery, FindUniqueWebsiteGroupQueryVariables>(FindUniqueWebsiteGroupDocument, options);
        }
export type FindUniqueWebsiteGroupQueryHookResult = ReturnType<typeof useFindUniqueWebsiteGroupQuery>;
export type FindUniqueWebsiteGroupLazyQueryHookResult = ReturnType<typeof useFindUniqueWebsiteGroupLazyQuery>;
export type FindUniqueWebsiteGroupQueryResult = Apollo.QueryResult<FindUniqueWebsiteGroupQuery, FindUniqueWebsiteGroupQueryVariables>;
export const FindManyWebsiteGroupDocument = gql`
    query findManyWebsiteGroup($where: WebsiteGroupWhereInput, $orderBy: [WebsiteGroupOrderByWithRelationInput!], $cursor: WebsiteGroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWebsiteGroup(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    ...WebsiteGroup
  }
}
    ${WebsiteGroupFragmentDoc}`;

/**
 * __useFindManyWebsiteGroupQuery__
 *
 * To run a query within a React component, call `useFindManyWebsiteGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWebsiteGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWebsiteGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWebsiteGroupQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWebsiteGroupQuery, FindManyWebsiteGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWebsiteGroupQuery, FindManyWebsiteGroupQueryVariables>(FindManyWebsiteGroupDocument, options);
      }
export function useFindManyWebsiteGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWebsiteGroupQuery, FindManyWebsiteGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWebsiteGroupQuery, FindManyWebsiteGroupQueryVariables>(FindManyWebsiteGroupDocument, options);
        }
export type FindManyWebsiteGroupQueryHookResult = ReturnType<typeof useFindManyWebsiteGroupQuery>;
export type FindManyWebsiteGroupLazyQueryHookResult = ReturnType<typeof useFindManyWebsiteGroupLazyQuery>;
export type FindManyWebsiteGroupQueryResult = Apollo.QueryResult<FindManyWebsiteGroupQuery, FindManyWebsiteGroupQueryVariables>;
export const FindManyWebsiteGroupCountDocument = gql`
    query findManyWebsiteGroupCount($where: WebsiteGroupWhereInput, $orderBy: [WebsiteGroupOrderByWithRelationInput!], $cursor: WebsiteGroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWebsiteGroupCount(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    skip: $skip
    take: $take
  )
}
    `;

/**
 * __useFindManyWebsiteGroupCountQuery__
 *
 * To run a query within a React component, call `useFindManyWebsiteGroupCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWebsiteGroupCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWebsiteGroupCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWebsiteGroupCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWebsiteGroupCountQuery, FindManyWebsiteGroupCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWebsiteGroupCountQuery, FindManyWebsiteGroupCountQueryVariables>(FindManyWebsiteGroupCountDocument, options);
      }
export function useFindManyWebsiteGroupCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWebsiteGroupCountQuery, FindManyWebsiteGroupCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWebsiteGroupCountQuery, FindManyWebsiteGroupCountQueryVariables>(FindManyWebsiteGroupCountDocument, options);
        }
export type FindManyWebsiteGroupCountQueryHookResult = ReturnType<typeof useFindManyWebsiteGroupCountQuery>;
export type FindManyWebsiteGroupCountLazyQueryHookResult = ReturnType<typeof useFindManyWebsiteGroupCountLazyQuery>;
export type FindManyWebsiteGroupCountQueryResult = Apollo.QueryResult<FindManyWebsiteGroupCountQuery, FindManyWebsiteGroupCountQueryVariables>;
export const CreateOneWebsiteGroupDocument = gql`
    mutation createOneWebsiteGroup($data: WebsiteGroupCreateInput!) {
  createOneWebsiteGroup(data: $data) {
    ...WebsiteGroup
  }
}
    ${WebsiteGroupFragmentDoc}`;

/**
 * __useCreateOneWebsiteGroupMutation__
 *
 * To run a mutation, you first call `useCreateOneWebsiteGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneWebsiteGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneWebsiteGroupMutation, { data, loading, error }] = useCreateOneWebsiteGroupMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneWebsiteGroupMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneWebsiteGroupMutation, CreateOneWebsiteGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneWebsiteGroupMutation, CreateOneWebsiteGroupMutationVariables>(CreateOneWebsiteGroupDocument, options);
      }
export type CreateOneWebsiteGroupMutationHookResult = ReturnType<typeof useCreateOneWebsiteGroupMutation>;
export type CreateOneWebsiteGroupMutationResult = Apollo.MutationResult<CreateOneWebsiteGroupMutation>;
export type CreateOneWebsiteGroupMutationOptions = Apollo.BaseMutationOptions<CreateOneWebsiteGroupMutation, CreateOneWebsiteGroupMutationVariables>;
export const UpdateOneWebsiteGroupDocument = gql`
    mutation updateOneWebsiteGroup($where: WebsiteGroupWhereUniqueInput!, $data: WebsiteGroupUpdateInput!) {
  updateOneWebsiteGroup(where: $where, data: $data) {
    ...WebsiteGroup
  }
}
    ${WebsiteGroupFragmentDoc}`;

/**
 * __useUpdateOneWebsiteGroupMutation__
 *
 * To run a mutation, you first call `useUpdateOneWebsiteGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneWebsiteGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneWebsiteGroupMutation, { data, loading, error }] = useUpdateOneWebsiteGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneWebsiteGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneWebsiteGroupMutation, UpdateOneWebsiteGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneWebsiteGroupMutation, UpdateOneWebsiteGroupMutationVariables>(UpdateOneWebsiteGroupDocument, options);
      }
export type UpdateOneWebsiteGroupMutationHookResult = ReturnType<typeof useUpdateOneWebsiteGroupMutation>;
export type UpdateOneWebsiteGroupMutationResult = Apollo.MutationResult<UpdateOneWebsiteGroupMutation>;
export type UpdateOneWebsiteGroupMutationOptions = Apollo.BaseMutationOptions<UpdateOneWebsiteGroupMutation, UpdateOneWebsiteGroupMutationVariables>;
export const DeleteOneWebsiteGroupDocument = gql`
    mutation deleteOneWebsiteGroup($where: WebsiteGroupWhereUniqueInput!) {
  deleteOneWebsiteGroup(where: $where) {
    ...WebsiteGroup
  }
}
    ${WebsiteGroupFragmentDoc}`;

/**
 * __useDeleteOneWebsiteGroupMutation__
 *
 * To run a mutation, you first call `useDeleteOneWebsiteGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneWebsiteGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneWebsiteGroupMutation, { data, loading, error }] = useDeleteOneWebsiteGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneWebsiteGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneWebsiteGroupMutation, DeleteOneWebsiteGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneWebsiteGroupMutation, DeleteOneWebsiteGroupMutationVariables>(DeleteOneWebsiteGroupDocument, options);
      }
export type DeleteOneWebsiteGroupMutationHookResult = ReturnType<typeof useDeleteOneWebsiteGroupMutation>;
export type DeleteOneWebsiteGroupMutationResult = Apollo.MutationResult<DeleteOneWebsiteGroupMutation>;
export type DeleteOneWebsiteGroupMutationOptions = Apollo.BaseMutationOptions<DeleteOneWebsiteGroupMutation, DeleteOneWebsiteGroupMutationVariables>;
export const DeleteManyWebsiteGroupDocument = gql`
    mutation deleteManyWebsiteGroup($where: WebsiteGroupWhereInput) {
  deleteManyWebsiteGroup(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyWebsiteGroupMutation__
 *
 * To run a mutation, you first call `useDeleteManyWebsiteGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyWebsiteGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyWebsiteGroupMutation, { data, loading, error }] = useDeleteManyWebsiteGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyWebsiteGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyWebsiteGroupMutation, DeleteManyWebsiteGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyWebsiteGroupMutation, DeleteManyWebsiteGroupMutationVariables>(DeleteManyWebsiteGroupDocument, options);
      }
export type DeleteManyWebsiteGroupMutationHookResult = ReturnType<typeof useDeleteManyWebsiteGroupMutation>;
export type DeleteManyWebsiteGroupMutationResult = Apollo.MutationResult<DeleteManyWebsiteGroupMutation>;
export type DeleteManyWebsiteGroupMutationOptions = Apollo.BaseMutationOptions<DeleteManyWebsiteGroupMutation, DeleteManyWebsiteGroupMutationVariables>;
export const UpdateManyWebsiteGroupDocument = gql`
    mutation updateManyWebsiteGroup($where: WebsiteGroupWhereInput, $data: WebsiteGroupUpdateManyMutationInput!) {
  updateManyWebsiteGroup(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyWebsiteGroupMutation__
 *
 * To run a mutation, you first call `useUpdateManyWebsiteGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyWebsiteGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyWebsiteGroupMutation, { data, loading, error }] = useUpdateManyWebsiteGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyWebsiteGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyWebsiteGroupMutation, UpdateManyWebsiteGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyWebsiteGroupMutation, UpdateManyWebsiteGroupMutationVariables>(UpdateManyWebsiteGroupDocument, options);
      }
export type UpdateManyWebsiteGroupMutationHookResult = ReturnType<typeof useUpdateManyWebsiteGroupMutation>;
export type UpdateManyWebsiteGroupMutationResult = Apollo.MutationResult<UpdateManyWebsiteGroupMutation>;
export type UpdateManyWebsiteGroupMutationOptions = Apollo.BaseMutationOptions<UpdateManyWebsiteGroupMutation, UpdateManyWebsiteGroupMutationVariables>;
export const LoginDocument = gql`
    mutation login($email: String!, $password: String!) {
  login(email: $email, password: $password) {
    id
    email
    name
  }
}
    `;

/**
 * __useLoginMutation__
 *
 * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLoginMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [loginMutation, { data, loading, error }] = useLoginMutation({
 *   variables: {
 *      email: // value for 'email'
 *      password: // value for 'password'
 *   },
 * });
 */
export function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<LoginMutation, LoginMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, options);
      }
export type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;
export type LoginMutationResult = Apollo.MutationResult<LoginMutation>;
export type LoginMutationOptions = Apollo.BaseMutationOptions<LoginMutation, LoginMutationVariables>;
export const SignupDocument = gql`
    mutation signup($email: String!, $password: String!, $name: String!) {
  signup(email: $email, password: $password, name: $name) {
    id
    email
    name
  }
}
    `;

/**
 * __useSignupMutation__
 *
 * To run a mutation, you first call `useSignupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useSignupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [signupMutation, { data, loading, error }] = useSignupMutation({
 *   variables: {
 *      email: // value for 'email'
 *      password: // value for 'password'
 *      name: // value for 'name'
 *   },
 * });
 */
export function useSignupMutation(baseOptions?: Apollo.MutationHookOptions<SignupMutation, SignupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<SignupMutation, SignupMutationVariables>(SignupDocument, options);
      }
export type SignupMutationHookResult = ReturnType<typeof useSignupMutation>;
export type SignupMutationResult = Apollo.MutationResult<SignupMutation>;
export type SignupMutationOptions = Apollo.BaseMutationOptions<SignupMutation, SignupMutationVariables>;
export const MeDocument = gql`
    query me {
  me {
    id
    name
    email
  }
}
    `;

/**
 * __useMeQuery__
 *
 * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.
 * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useMeQuery({
 *   variables: {
 *   },
 * });
 */
export function useMeQuery(baseOptions?: Apollo.QueryHookOptions<MeQuery, MeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<MeQuery, MeQueryVariables>(MeDocument, options);
      }
export function useMeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, options);
        }
export type MeQueryHookResult = ReturnType<typeof useMeQuery>;
export type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;
export type MeQueryResult = Apollo.QueryResult<MeQuery, MeQueryVariables>;
export const GetCustomerDocument = gql`
    query getCustomer($websiteSlug: String!) {
  getCustomer(websiteSlug: $websiteSlug)
}
    `;

/**
 * __useGetCustomerQuery__
 *
 * To run a query within a React component, call `useGetCustomerQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetCustomerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetCustomerQuery({
 *   variables: {
 *      websiteSlug: // value for 'websiteSlug'
 *   },
 * });
 */
export function useGetCustomerQuery(baseOptions: Apollo.QueryHookOptions<GetCustomerQuery, GetCustomerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetCustomerQuery, GetCustomerQueryVariables>(GetCustomerDocument, options);
      }
export function useGetCustomerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetCustomerQuery, GetCustomerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetCustomerQuery, GetCustomerQueryVariables>(GetCustomerDocument, options);
        }
export type GetCustomerQueryHookResult = ReturnType<typeof useGetCustomerQuery>;
export type GetCustomerLazyQueryHookResult = ReturnType<typeof useGetCustomerLazyQuery>;
export type GetCustomerQueryResult = Apollo.QueryResult<GetCustomerQuery, GetCustomerQueryVariables>;
export const SignUploadUrlDocument = gql`
    mutation signUploadUrl($filename: String!, $acl: String!, $contentType: String!) {
  signUploadUrl(filename: $filename, acl: $acl, contentType: $contentType)
}
    `;

/**
 * __useSignUploadUrlMutation__
 *
 * To run a mutation, you first call `useSignUploadUrlMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useSignUploadUrlMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [signUploadUrlMutation, { data, loading, error }] = useSignUploadUrlMutation({
 *   variables: {
 *      filename: // value for 'filename'
 *      acl: // value for 'acl'
 *      contentType: // value for 'contentType'
 *   },
 * });
 */
export function useSignUploadUrlMutation(baseOptions?: Apollo.MutationHookOptions<SignUploadUrlMutation, SignUploadUrlMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<SignUploadUrlMutation, SignUploadUrlMutationVariables>(SignUploadUrlDocument, options);
      }
export type SignUploadUrlMutationHookResult = ReturnType<typeof useSignUploadUrlMutation>;
export type SignUploadUrlMutationResult = Apollo.MutationResult<SignUploadUrlMutation>;
export type SignUploadUrlMutationOptions = Apollo.BaseMutationOptions<SignUploadUrlMutation, SignUploadUrlMutationVariables>;
export const PermissionDocument = gql`
    query permission {
  permission
}
    `;

/**
 * __usePermissionQuery__
 *
 * To run a query within a React component, call `usePermissionQuery` and pass it any options that fit your needs.
 * When your component renders, `usePermissionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = usePermissionQuery({
 *   variables: {
 *   },
 * });
 */
export function usePermissionQuery(baseOptions?: Apollo.QueryHookOptions<PermissionQuery, PermissionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<PermissionQuery, PermissionQueryVariables>(PermissionDocument, options);
      }
export function usePermissionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<PermissionQuery, PermissionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<PermissionQuery, PermissionQueryVariables>(PermissionDocument, options);
        }
export type PermissionQueryHookResult = ReturnType<typeof usePermissionQuery>;
export type PermissionLazyQueryHookResult = ReturnType<typeof usePermissionLazyQuery>;
export type PermissionQueryResult = Apollo.QueryResult<PermissionQuery, PermissionQueryVariables>;
export const EnterAdminDocument = gql`
    mutation enterAdmin($admin: String!, $id: String!) {
  enterAdmin(admin: $admin, id: $id)
}
    `;

/**
 * __useEnterAdminMutation__
 *
 * To run a mutation, you first call `useEnterAdminMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useEnterAdminMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [enterAdminMutation, { data, loading, error }] = useEnterAdminMutation({
 *   variables: {
 *      admin: // value for 'admin'
 *      id: // value for 'id'
 *   },
 * });
 */
export function useEnterAdminMutation(baseOptions?: Apollo.MutationHookOptions<EnterAdminMutation, EnterAdminMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<EnterAdminMutation, EnterAdminMutationVariables>(EnterAdminDocument, options);
      }
export type EnterAdminMutationHookResult = ReturnType<typeof useEnterAdminMutation>;
export type EnterAdminMutationResult = Apollo.MutationResult<EnterAdminMutation>;
export type EnterAdminMutationOptions = Apollo.BaseMutationOptions<EnterAdminMutation, EnterAdminMutationVariables>;
export const LogoutAdminDocument = gql`
    mutation logoutAdmin {
  logoutAdmin
}
    `;

/**
 * __useLogoutAdminMutation__
 *
 * To run a mutation, you first call `useLogoutAdminMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLogoutAdminMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [logoutAdminMutation, { data, loading, error }] = useLogoutAdminMutation({
 *   variables: {
 *   },
 * });
 */
export function useLogoutAdminMutation(baseOptions?: Apollo.MutationHookOptions<LogoutAdminMutation, LogoutAdminMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<LogoutAdminMutation, LogoutAdminMutationVariables>(LogoutAdminDocument, options);
      }
export type LogoutAdminMutationHookResult = ReturnType<typeof useLogoutAdminMutation>;
export type LogoutAdminMutationResult = Apollo.MutationResult<LogoutAdminMutation>;
export type LogoutAdminMutationOptions = Apollo.BaseMutationOptions<LogoutAdminMutation, LogoutAdminMutationVariables>;
export const LogoutDocument = gql`
    mutation logout {
  logout
}
    `;

/**
 * __useLogoutMutation__
 *
 * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLogoutMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [logoutMutation, { data, loading, error }] = useLogoutMutation({
 *   variables: {
 *   },
 * });
 */
export function useLogoutMutation(baseOptions?: Apollo.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, options);
      }
export type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;
export type LogoutMutationResult = Apollo.MutationResult<LogoutMutation>;
export type LogoutMutationOptions = Apollo.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;
export const AddTemplateDocument = gql`
    mutation addTemplate($id: String!, $currentJson: String!) {
  addTemplate(id: $id, currentJson: $currentJson)
}
    `;

/**
 * __useAddTemplateMutation__
 *
 * To run a mutation, you first call `useAddTemplateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useAddTemplateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [addTemplateMutation, { data, loading, error }] = useAddTemplateMutation({
 *   variables: {
 *      id: // value for 'id'
 *      currentJson: // value for 'currentJson'
 *   },
 * });
 */
export function useAddTemplateMutation(baseOptions?: Apollo.MutationHookOptions<AddTemplateMutation, AddTemplateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AddTemplateMutation, AddTemplateMutationVariables>(AddTemplateDocument, options);
      }
export type AddTemplateMutationHookResult = ReturnType<typeof useAddTemplateMutation>;
export type AddTemplateMutationResult = Apollo.MutationResult<AddTemplateMutation>;
export type AddTemplateMutationOptions = Apollo.BaseMutationOptions<AddTemplateMutation, AddTemplateMutationVariables>;
export const GetTemplatesDocument = gql`
    query getTemplates {
  getTemplates
}
    `;

/**
 * __useGetTemplatesQuery__
 *
 * To run a query within a React component, call `useGetTemplatesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTemplatesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTemplatesQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTemplatesQuery(baseOptions?: Apollo.QueryHookOptions<GetTemplatesQuery, GetTemplatesQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetTemplatesQuery, GetTemplatesQueryVariables>(GetTemplatesDocument, options);
      }
export function useGetTemplatesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetTemplatesQuery, GetTemplatesQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetTemplatesQuery, GetTemplatesQueryVariables>(GetTemplatesDocument, options);
        }
export type GetTemplatesQueryHookResult = ReturnType<typeof useGetTemplatesQuery>;
export type GetTemplatesLazyQueryHookResult = ReturnType<typeof useGetTemplatesLazyQuery>;
export type GetTemplatesQueryResult = Apollo.QueryResult<GetTemplatesQuery, GetTemplatesQueryVariables>;
export const StripeCheckoutDocument = gql`
    mutation stripeCheckout($items: Json!, $websiteSlug: String!, $couponCode: String, $shippingId: String, $customerId: String!) {
  stripeCheckout(
    items: $items
    websiteSlug: $websiteSlug
    shippingId: $shippingId
    customerId: $customerId
    couponCode: $couponCode
  )
}
    `;

/**
 * __useStripeCheckoutMutation__
 *
 * To run a mutation, you first call `useStripeCheckoutMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useStripeCheckoutMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [stripeCheckoutMutation, { data, loading, error }] = useStripeCheckoutMutation({
 *   variables: {
 *      items: // value for 'items'
 *      websiteSlug: // value for 'websiteSlug'
 *      couponCode: // value for 'couponCode'
 *      shippingId: // value for 'shippingId'
 *      customerId: // value for 'customerId'
 *   },
 * });
 */
export function useStripeCheckoutMutation(baseOptions?: Apollo.MutationHookOptions<StripeCheckoutMutation, StripeCheckoutMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<StripeCheckoutMutation, StripeCheckoutMutationVariables>(StripeCheckoutDocument, options);
      }
export type StripeCheckoutMutationHookResult = ReturnType<typeof useStripeCheckoutMutation>;
export type StripeCheckoutMutationResult = Apollo.MutationResult<StripeCheckoutMutation>;
export type StripeCheckoutMutationOptions = Apollo.BaseMutationOptions<StripeCheckoutMutation, StripeCheckoutMutationVariables>;
export const GetAdminSettingsDocument = gql`
    query getAdminSettings($admin: String!, $Admin: String, $Version: String!) {
  getAdminSettings(admin: $admin, Admin: $Admin, Version: $Version)
}
    `;

/**
 * __useGetAdminSettingsQuery__
 *
 * To run a query within a React component, call `useGetAdminSettingsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetAdminSettingsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetAdminSettingsQuery({
 *   variables: {
 *      admin: // value for 'admin'
 *      Admin: // value for 'Admin'
 *      Version: // value for 'Version'
 *   },
 * });
 */
export function useGetAdminSettingsQuery(baseOptions: Apollo.QueryHookOptions<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>(GetAdminSettingsDocument, options);
      }
export function useGetAdminSettingsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>(GetAdminSettingsDocument, options);
        }
export type GetAdminSettingsQueryHookResult = ReturnType<typeof useGetAdminSettingsQuery>;
export type GetAdminSettingsLazyQueryHookResult = ReturnType<typeof useGetAdminSettingsLazyQuery>;
export type GetAdminSettingsQueryResult = Apollo.QueryResult<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>;
export const GetUiTreeDocument = gql`
    query getUiTree($adminId: String!) {
  getUiTree(adminId: $adminId)
}
    `;

/**
 * __useGetUiTreeQuery__
 *
 * To run a query within a React component, call `useGetUiTreeQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUiTreeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUiTreeQuery({
 *   variables: {
 *      adminId: // value for 'adminId'
 *   },
 * });
 */
export function useGetUiTreeQuery(baseOptions: Apollo.QueryHookOptions<GetUiTreeQuery, GetUiTreeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetUiTreeQuery, GetUiTreeQueryVariables>(GetUiTreeDocument, options);
      }
export function useGetUiTreeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUiTreeQuery, GetUiTreeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetUiTreeQuery, GetUiTreeQueryVariables>(GetUiTreeDocument, options);
        }
export type GetUiTreeQueryHookResult = ReturnType<typeof useGetUiTreeQuery>;
export type GetUiTreeLazyQueryHookResult = ReturnType<typeof useGetUiTreeLazyQuery>;
export type GetUiTreeQueryResult = Apollo.QueryResult<GetUiTreeQuery, GetUiTreeQueryVariables>;
export const StripeEnabledDocument = gql`
    query stripeEnabled($websiteSlug: String!) {
  stripeEnabled(websiteSlug: $websiteSlug)
}
    `;

/**
 * __useStripeEnabledQuery__
 *
 * To run a query within a React component, call `useStripeEnabledQuery` and pass it any options that fit your needs.
 * When your component renders, `useStripeEnabledQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useStripeEnabledQuery({
 *   variables: {
 *      websiteSlug: // value for 'websiteSlug'
 *   },
 * });
 */
export function useStripeEnabledQuery(baseOptions: Apollo.QueryHookOptions<StripeEnabledQuery, StripeEnabledQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<StripeEnabledQuery, StripeEnabledQueryVariables>(StripeEnabledDocument, options);
      }
export function useStripeEnabledLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<StripeEnabledQuery, StripeEnabledQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<StripeEnabledQuery, StripeEnabledQueryVariables>(StripeEnabledDocument, options);
        }
export type StripeEnabledQueryHookResult = ReturnType<typeof useStripeEnabledQuery>;
export type StripeEnabledLazyQueryHookResult = ReturnType<typeof useStripeEnabledLazyQuery>;
export type StripeEnabledQueryResult = Apollo.QueryResult<StripeEnabledQuery, StripeEnabledQueryVariables>;
export const StripeAccountStatusDocument = gql`
    query stripeAccountStatus {
  stripeAccountStatus
}
    `;

/**
 * __useStripeAccountStatusQuery__
 *
 * To run a query within a React component, call `useStripeAccountStatusQuery` and pass it any options that fit your needs.
 * When your component renders, `useStripeAccountStatusQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useStripeAccountStatusQuery({
 *   variables: {
 *   },
 * });
 */
export function useStripeAccountStatusQuery(baseOptions?: Apollo.QueryHookOptions<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>(StripeAccountStatusDocument, options);
      }
export function useStripeAccountStatusLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>(StripeAccountStatusDocument, options);
        }
export type StripeAccountStatusQueryHookResult = ReturnType<typeof useStripeAccountStatusQuery>;
export type StripeAccountStatusLazyQueryHookResult = ReturnType<typeof useStripeAccountStatusLazyQuery>;
export type StripeAccountStatusQueryResult = Apollo.QueryResult<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>;
export const GetMetadataDocument = gql`
    mutation getMetadata($pageUrl: String!) {
  getMetadata(pageUrl: $pageUrl)
}
    `;

/**
 * __useGetMetadataMutation__
 *
 * To run a mutation, you first call `useGetMetadataMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useGetMetadataMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [getMetadataMutation, { data, loading, error }] = useGetMetadataMutation({
 *   variables: {
 *      pageUrl: // value for 'pageUrl'
 *   },
 * });
 */
export function useGetMetadataMutation(baseOptions?: Apollo.MutationHookOptions<GetMetadataMutation, GetMetadataMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<GetMetadataMutation, GetMetadataMutationVariables>(GetMetadataDocument, options);
      }
export type GetMetadataMutationHookResult = ReturnType<typeof useGetMetadataMutation>;
export type GetMetadataMutationResult = Apollo.MutationResult<GetMetadataMutation>;
export type GetMetadataMutationOptions = Apollo.BaseMutationOptions<GetMetadataMutation, GetMetadataMutationVariables>;
export const GetAnalyticsDocument = gql`
    mutation getAnalytics($type: String!, $beginSec: Int!, $endSec: Int!, $wedsiteId: String!, $isRenew: Boolean) {
  getAnalytics(
    type: $type
    beginSec: $beginSec
    endSec: $endSec
    wedsiteId: $wedsiteId
    isRenew: $isRenew
  )
}
    `;

/**
 * __useGetAnalyticsMutation__
 *
 * To run a mutation, you first call `useGetAnalyticsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useGetAnalyticsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [getAnalyticsMutation, { data, loading, error }] = useGetAnalyticsMutation({
 *   variables: {
 *      type: // value for 'type'
 *      beginSec: // value for 'beginSec'
 *      endSec: // value for 'endSec'
 *      wedsiteId: // value for 'wedsiteId'
 *      isRenew: // value for 'isRenew'
 *   },
 * });
 */
export function useGetAnalyticsMutation(baseOptions?: Apollo.MutationHookOptions<GetAnalyticsMutation, GetAnalyticsMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<GetAnalyticsMutation, GetAnalyticsMutationVariables>(GetAnalyticsDocument, options);
      }
export type GetAnalyticsMutationHookResult = ReturnType<typeof useGetAnalyticsMutation>;
export type GetAnalyticsMutationResult = Apollo.MutationResult<GetAnalyticsMutation>;
export type GetAnalyticsMutationOptions = Apollo.BaseMutationOptions<GetAnalyticsMutation, GetAnalyticsMutationVariables>;
export const ServerMintDocument = gql`
    mutation serverMint($orderedProductId: String!, $walletAddress: String!) {
  serverMint(orderedProductId: $orderedProductId, walletAddress: $walletAddress)
}
    `;

/**
 * __useServerMintMutation__
 *
 * To run a mutation, you first call `useServerMintMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useServerMintMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [serverMintMutation, { data, loading, error }] = useServerMintMutation({
 *   variables: {
 *      orderedProductId: // value for 'orderedProductId'
 *      walletAddress: // value for 'walletAddress'
 *   },
 * });
 */
export function useServerMintMutation(baseOptions?: Apollo.MutationHookOptions<ServerMintMutation, ServerMintMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<ServerMintMutation, ServerMintMutationVariables>(ServerMintDocument, options);
      }
export type ServerMintMutationHookResult = ReturnType<typeof useServerMintMutation>;
export type ServerMintMutationResult = Apollo.MutationResult<ServerMintMutation>;
export type ServerMintMutationOptions = Apollo.BaseMutationOptions<ServerMintMutation, ServerMintMutationVariables>;
export const InstallTemplateDocument = gql`
    mutation installTemplate($templateId: String!, $websiteId: String!) {
  installTemplate(templateId: $templateId, websiteId: $websiteId) {
    id
  }
}
    `;

/**
 * __useInstallTemplateMutation__
 *
 * To run a mutation, you first call `useInstallTemplateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useInstallTemplateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [installTemplateMutation, { data, loading, error }] = useInstallTemplateMutation({
 *   variables: {
 *      templateId: // value for 'templateId'
 *      websiteId: // value for 'websiteId'
 *   },
 * });
 */
export function useInstallTemplateMutation(baseOptions?: Apollo.MutationHookOptions<InstallTemplateMutation, InstallTemplateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<InstallTemplateMutation, InstallTemplateMutationVariables>(InstallTemplateDocument, options);
      }
export type InstallTemplateMutationHookResult = ReturnType<typeof useInstallTemplateMutation>;
export type InstallTemplateMutationResult = Apollo.MutationResult<InstallTemplateMutation>;
export type InstallTemplateMutationOptions = Apollo.BaseMutationOptions<InstallTemplateMutation, InstallTemplateMutationVariables>;
export const AdminMintNftDocument = gql`
    mutation adminMintNft($orderId: String!) {
  adminMintNft(orderId: $orderId) {
    id
    amount
    applicationFee
  }
}
    `;

/**
 * __useAdminMintNftMutation__
 *
 * To run a mutation, you first call `useAdminMintNftMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useAdminMintNftMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [adminMintNftMutation, { data, loading, error }] = useAdminMintNftMutation({
 *   variables: {
 *      orderId: // value for 'orderId'
 *   },
 * });
 */
export function useAdminMintNftMutation(baseOptions?: Apollo.MutationHookOptions<AdminMintNftMutation, AdminMintNftMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AdminMintNftMutation, AdminMintNftMutationVariables>(AdminMintNftDocument, options);
      }
export type AdminMintNftMutationHookResult = ReturnType<typeof useAdminMintNftMutation>;
export type AdminMintNftMutationResult = Apollo.MutationResult<AdminMintNftMutation>;
export type AdminMintNftMutationOptions = Apollo.BaseMutationOptions<AdminMintNftMutation, AdminMintNftMutationVariables>;
export const PayProductDocument = gql`
    mutation payProduct($productId: String!, $websiteSlug: String!, $customerId: String!, $paymentAddress: String!) {
  payProduct(
    productId: $productId
    websiteSlug: $websiteSlug
    customerId: $customerId
    paymentAddress: $paymentAddress
  ) {
    id
    amount
    applicationFee
  }
}
    `;

/**
 * __usePayProductMutation__
 *
 * To run a mutation, you first call `usePayProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePayProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [payProductMutation, { data, loading, error }] = usePayProductMutation({
 *   variables: {
 *      productId: // value for 'productId'
 *      websiteSlug: // value for 'websiteSlug'
 *      customerId: // value for 'customerId'
 *      paymentAddress: // value for 'paymentAddress'
 *   },
 * });
 */
export function usePayProductMutation(baseOptions?: Apollo.MutationHookOptions<PayProductMutation, PayProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PayProductMutation, PayProductMutationVariables>(PayProductDocument, options);
      }
export type PayProductMutationHookResult = ReturnType<typeof usePayProductMutation>;
export type PayProductMutationResult = Apollo.MutationResult<PayProductMutation>;
export type PayProductMutationOptions = Apollo.BaseMutationOptions<PayProductMutation, PayProductMutationVariables>;
export const PreparePurchaseDocument = gql`
    mutation preparePurchase($productId: String!, $websiteSlug: String!, $customerId: String, $paymentAddress: String!, $quantity: Int!, $affiliateWalletAddress: String) {
  preparePurchase(
    productId: $productId
    websiteSlug: $websiteSlug
    customerId: $customerId
    paymentAddress: $paymentAddress
    quantity: $quantity
    affiliateWalletAddress: $affiliateWalletAddress
  )
}
    `;

/**
 * __usePreparePurchaseMutation__
 *
 * To run a mutation, you first call `usePreparePurchaseMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePreparePurchaseMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [preparePurchaseMutation, { data, loading, error }] = usePreparePurchaseMutation({
 *   variables: {
 *      productId: // value for 'productId'
 *      websiteSlug: // value for 'websiteSlug'
 *      customerId: // value for 'customerId'
 *      paymentAddress: // value for 'paymentAddress'
 *      quantity: // value for 'quantity'
 *      affiliateWalletAddress: // value for 'affiliateWalletAddress'
 *   },
 * });
 */
export function usePreparePurchaseMutation(baseOptions?: Apollo.MutationHookOptions<PreparePurchaseMutation, PreparePurchaseMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PreparePurchaseMutation, PreparePurchaseMutationVariables>(PreparePurchaseDocument, options);
      }
export type PreparePurchaseMutationHookResult = ReturnType<typeof usePreparePurchaseMutation>;
export type PreparePurchaseMutationResult = Apollo.MutationResult<PreparePurchaseMutation>;
export type PreparePurchaseMutationOptions = Apollo.BaseMutationOptions<PreparePurchaseMutation, PreparePurchaseMutationVariables>;
export const FinishPurchaseDocument = gql`
    mutation finishPurchase($orderId: String!, $transactionHash: String!) {
  finishPurchase(orderId: $orderId, transactionHash: $transactionHash)
}
    `;

/**
 * __useFinishPurchaseMutation__
 *
 * To run a mutation, you first call `useFinishPurchaseMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useFinishPurchaseMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [finishPurchaseMutation, { data, loading, error }] = useFinishPurchaseMutation({
 *   variables: {
 *      orderId: // value for 'orderId'
 *      transactionHash: // value for 'transactionHash'
 *   },
 * });
 */
export function useFinishPurchaseMutation(baseOptions?: Apollo.MutationHookOptions<FinishPurchaseMutation, FinishPurchaseMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<FinishPurchaseMutation, FinishPurchaseMutationVariables>(FinishPurchaseDocument, options);
      }
export type FinishPurchaseMutationHookResult = ReturnType<typeof useFinishPurchaseMutation>;
export type FinishPurchaseMutationResult = Apollo.MutationResult<FinishPurchaseMutation>;
export type FinishPurchaseMutationOptions = Apollo.BaseMutationOptions<FinishPurchaseMutation, FinishPurchaseMutationVariables>;
export const PrepareStripePurchaseDocument = gql`
    mutation prepareStripePurchase($productId: String!, $websiteSlug: String!, $customerId: String!) {
  prepareStripePurchase(
    productId: $productId
    websiteSlug: $websiteSlug
    customerId: $customerId
  )
}
    `;

/**
 * __usePrepareStripePurchaseMutation__
 *
 * To run a mutation, you first call `usePrepareStripePurchaseMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePrepareStripePurchaseMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [prepareStripePurchaseMutation, { data, loading, error }] = usePrepareStripePurchaseMutation({
 *   variables: {
 *      productId: // value for 'productId'
 *      websiteSlug: // value for 'websiteSlug'
 *      customerId: // value for 'customerId'
 *   },
 * });
 */
export function usePrepareStripePurchaseMutation(baseOptions?: Apollo.MutationHookOptions<PrepareStripePurchaseMutation, PrepareStripePurchaseMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PrepareStripePurchaseMutation, PrepareStripePurchaseMutationVariables>(PrepareStripePurchaseDocument, options);
      }
export type PrepareStripePurchaseMutationHookResult = ReturnType<typeof usePrepareStripePurchaseMutation>;
export type PrepareStripePurchaseMutationResult = Apollo.MutationResult<PrepareStripePurchaseMutation>;
export type PrepareStripePurchaseMutationOptions = Apollo.BaseMutationOptions<PrepareStripePurchaseMutation, PrepareStripePurchaseMutationVariables>;
export const UpdateOrderDocument = gql`
    mutation updateOrder($orderId: String!, $transactionHash: String) {
  updateOrder(orderId: $orderId, transactionHash: $transactionHash) {
    id
  }
}
    `;

/**
 * __useUpdateOrderMutation__
 *
 * To run a mutation, you first call `useUpdateOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOrderMutation, { data, loading, error }] = useUpdateOrderMutation({
 *   variables: {
 *      orderId: // value for 'orderId'
 *      transactionHash: // value for 'transactionHash'
 *   },
 * });
 */
export function useUpdateOrderMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOrderMutation, UpdateOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOrderMutation, UpdateOrderMutationVariables>(UpdateOrderDocument, options);
      }
export type UpdateOrderMutationHookResult = ReturnType<typeof useUpdateOrderMutation>;
export type UpdateOrderMutationResult = Apollo.MutationResult<UpdateOrderMutation>;
export type UpdateOrderMutationOptions = Apollo.BaseMutationOptions<UpdateOrderMutation, UpdateOrderMutationVariables>;
export const PrepareRequestDocument = gql`
    mutation prepareRequest($requestId: String!) {
  prepareRequest(requestId: $requestId)
}
    `;

/**
 * __usePrepareRequestMutation__
 *
 * To run a mutation, you first call `usePrepareRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePrepareRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [prepareRequestMutation, { data, loading, error }] = usePrepareRequestMutation({
 *   variables: {
 *      requestId: // value for 'requestId'
 *   },
 * });
 */
export function usePrepareRequestMutation(baseOptions?: Apollo.MutationHookOptions<PrepareRequestMutation, PrepareRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PrepareRequestMutation, PrepareRequestMutationVariables>(PrepareRequestDocument, options);
      }
export type PrepareRequestMutationHookResult = ReturnType<typeof usePrepareRequestMutation>;
export type PrepareRequestMutationResult = Apollo.MutationResult<PrepareRequestMutation>;
export type PrepareRequestMutationOptions = Apollo.BaseMutationOptions<PrepareRequestMutation, PrepareRequestMutationVariables>;